{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CreatorFeeBpTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthsInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewProtocolFeeRecipientCannotBeNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingTransferInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorForStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotV2Strategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutsideOfTimeRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncementNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyHasNoSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "StrategyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyNotUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyProtocolFeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferAlreadyInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongPotentialOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CancelOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InitiateOwnershipRenouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "InitiateOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "name": "NewBidAskNonces",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creatorFeeManager",
          "type": "address"
        }
      ],
      "name": "NewCreatorFeeManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCreatorFeeBp",
          "type": "uint256"
        }
      ],
      "name": "NewMaxCreatorFeeBp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "NewProtocolFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "OrderNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "SubsetNoncesCancelled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelOrderNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelSubsetNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorFeeManager",
      "outputs": [
        {
          "internalType": "contract ICreatorFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "bid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ask",
          "type": "bool"
        }
      ],
      "name": "incrementBidAskNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "initiateOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCreatorFeeBp",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipStatus",
      "outputs": [
        {
          "internalType": "enum IOwnableTwoSteps.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCreatorFeeManager",
          "type": "address"
        }
      ],
      "name": "updateCreatorFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxCreatorFeeBp",
          "type": "uint16"
        }
      ],
      "name": "updateMaxCreatorFeeBp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "updateProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "newStandardProtocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMinTotalFee",
          "type": "uint16"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBidAskNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userSubsetNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461023d576001600160401b03906115b190601f38839003908101601f191682019084821183831017610227578083916040958694855283398101031261023d5761004b81610242565b6100586020809301610242565b600380546001600160a01b0319166001600160a01b0393841690811790915584519081529094907f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908490a1600160085583519060e082019081118282101761022757845260018152828101906032825284810160328152606082019260c88452608083019360009485815260a085019186835260c086019387855287805260098a528a88209651151560ff16905160081b62ffff0016955160181b64ffff00000016915160281b66ffff000000000016925160a81c6affffffff00000000000000169351151560581b6bff00000000000000000000001694600160601b6001900319905160601b1695171717171717905583519080825283820160329052848201603290526060820160c890528060808301528060a083015260c082015260e07f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a291a1600a5493168015610216576001600160b01b03199093168317607d60a31b17600a55815192835290917f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb109190a15161135a90816102578239f35b8251630f966bcb60e41b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b038216820361023d5756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263134849a61461113d575081631d3c4268146110bc5781631df47f801461103a57816320cd05c714610ff957816323452b9c14610f675781632bb5a9e614610f265781633e56753914610e9e578163463357ec14610e6357816346b625bc14610dd55781634cbac9dc14610dac5781635487887614610d3d5781635a195d1914610cff5781635b6ac01114610c7457816364df049e14610c4b57816367d9dd7914610c225781636e90c01414610bfc5781637200b82914610b375781637762df2514610b0f57816379ed31d414610a5c5781637a7d885114610a24578163838b8f5c146109fb5781638da5cb5b146109d257816391be1360146106ca578163a02bab571461065b578163a39bf29f1461061a578163ae1cce5a1461057e578163b647a4041461050f578163bb91c33914610496578163c0b6f561146103e0578163d5a06adf146102a9578163d5b010f5146101ce575063ea179b761461018557600080fd5b346101ca57806003193601126101ca5760209160ff9082906001600160a01b036101ad611225565b168152600285528181206024358252855220541690519015158152f35b5080fd5b8383346101ca57806003193601126101ca576101e861124a565b6101f061123b565b91600019430143811161029657917fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4493916060934060801c3387528660205281872054936001838920015493610279575b610259575b508051923384526020840152820152a180f35b61026391926112db565b9033865285602052816001828820015586610246565b9381610284916112db565b93338852876020528483892055610241565b634e487b7160e01b855260118652602485fd5b9050346103dc5760803660031901126103dc578035916102c761123b565b6102cf61126a565b6064359161ffff92838116958682036103d8576102ea6112fe565b6008548810156103ca57878952600960205284868a205460281c16871180156103bf575b6103b157509160809593916103978896947f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9998b52600960205261036083878d209060ff801983541691151516179055565b858b20805462ffff001916600886901b62ffff0016179055858b209064ffff00000082549160181b169064ffff0000001916179055565b83519586521515602086015216908301526060820152a180f35b855163b704b7c160e01b8152fd5b50868585161161030e565b855163bd7056c760e01b8152fd5b8880fd5b8280fd5b8383346101ca5760203660031901126101ca576103fb611225565b6104036112fe565b83549060ff8260a01c16600381101561048357610473576001600160a81b03199091166001600160a01b03909116908117600160a01b179093558051338152602081019390935290917fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9190a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b9050346103dc5760203660031901126103dc5760e09282913581526009602052205481519160ff82161515835261ffff90818360081c166020850152818360181c16908401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b5050346101ca5760203660031901126101ca5760207fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa7649161054e611225565b6105566112fe565b600b80546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101ca57806003193601126101ca57610598611225565b600554602435916001600160a01b03918216330361060a5761271083116105fa577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526006602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b5050346101ca5760203660031901126101ca579081906001600160a01b03610640611225565b16815280602052206001815491015482519182526020820152f35b5050346101ca5760203660031901126101ca5760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc9161069a611225565b6106a26112fe565b600580546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101ca5760c03660031901126101ca576106e5611259565b6024359161ffff928381168091036109ce576106ff61126a565b926064359163ffffffff60e01b83168093036109ca57608435938415158095036109c65760a4356001600160a01b03811696908790036103d85787906107436112fe565b169283831180156109bb575b80156109b0575b6109a05784156109905781516345b2b38160e01b81526020989089818d818c5afa908115610986578b91610921575b50156109115782519160e0830183811067ffffffffffffffff8211176108fe57888784888f968f9897968f968e988c91825260018b52838c8c0193169b8c8452828c0195865260608c0197885260808c019a8b5260a08c0198895260c08c01998a52600854825260099052209851151561080b908a9060ff801983541691151516179055565b51885462ffff001916911660081b62ffff001617875551865464ffff0000001916911660181b64ffff0000001617855551928454905160a81c6affffffff00000000000000169160ff60581b9051151560581b16926bffffffffffffffffffffffff19905160601b169360281b66ffff0000000000169064ffffffffff161717171790556008549760001989146108eb576001890160085582519889528801528601526060850152608084015260a083015260c08201527f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29060e090a180f35b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b8c5260418d5260248cfd5b825163ef8c37d760e01b81528b90fd5b9050893d8b1161097f575b601f8101601f1916820167ffffffffffffffff81118382101761096b578b91839187528101031261096757518015158103610967578c610785565b8a80fd5b50634e487b7160e01b8c5260418d5260248cfd5b503d61092c565b84513d8d823e3d90fd5b8151636168384960e11b81528a90fd5b815163b704b7c160e01b81528a90fd5b506101f48411610756565b50828882161161074f565b8780fd5b8680fd5b8480fd5b5050346101ca57816003193601126101ca5760035490516001600160a01b039091168152602090f35b5050346101ca57816003193601126101ca57600b5490516001600160a01b039091168152602090f35b5050346101ca5760203660031901126101ca5760209181906001600160a01b03610a4c611225565b1681526006845220549051908152f35b9050346103dc57610a6c366111d3565b9290918315610b015750835b838110610ab8575090610ab27f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec42593925192839233846112a1565b0390a180f35b338552600190602082815283872090610ad283888861127b565b358852527f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8387205501610a78565b90516397983bdb60e01b8152fd5b9050346103dc57826003193601126103dc575490516001600160a01b03909116815260209150f35b9050346103dc57826003193601126103dc57805460ff8160a01c166003811015610be957600103610bda576001600160a01b0381163303610bcb57916020917f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc93336bffffffffffffffffffffffff60a01b60035416176003556affffffffffffffffffffff60a81b16905551338152a180f35b5090516357ee7dc960e11b8152fd5b509051632f27941360e11b8152fd5b634e487b7160e01b855260218352602485fd5b5050346101ca57816003193601126101ca5760209061ffff600a5460a01c169051908152f35b828434610c485780600319360112610c48575060ff6020925460a81c1690519015158152f35b80fd5b5050346101ca57816003193601126101ca57600a5490516001600160a01b039091168152602090f35b919050346103dc57826003193601126103dc57610c8f6112fe565b81549060ff8260a01c166003811015610cec57610cdd575060ff60a01b1916600160a11b1790557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b81529050fd5b634e487b7160e01b855260218452602485fd5b5050346101ca5760203660031901126101ca5760209160ff9082906001600160a01b03610d2a611225565b1681526007855220541690519015158152f35b919050346103dc5760203660031901126103dc577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3491602091610d7e61124a565b610d866112fe565b825460ff60a81b191690151560a881901b60ff60a81b169190911790925551908152a180f35b5050346101ca57816003193601126101ca5760055490516001600160a01b039091168152602090f35b919050346103dc5760203660031901126103dc57610df1611259565b610df96112fe565b61ffff8116926109c48411610e555750600a805461ffff60a01b191660a09290921b61ffff60a01b16919091179055519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a180f35b82516397d7dcfb60e01b8152fd5b5050346101ca57816003193601126101ca57602090517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b9050346103dc57826003193601126103dc57610eb86112fe565b805460ff8160a01c166003811015610be957600203610f1757600380546001600160a01b031916905560ff60a01b19169055518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b50905163022e289160e11b8152fd5b8383346101ca57816003193601126101ca5760ff835460a01c169051916003821015610f5457602083838152f35b634e487b7160e01b815260218452602490fd5b919050346103dc57826003193601126103dc57610f826112fe565b81549060ff8260a01c16906003821015610cec578115610fea5750600114610fd8575b50805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b031916815538610fa5565b5163ccf69db760e01b81528390fd5b5050346101ca57806003193601126101ca5760209181906001600160a01b03611020611225565b168152600184528181206024358252845220549051908152f35b919050346103dc5760203660031901126103dc57611056611225565b61105e6112fe565b6001600160a01b03169182156110ae5750600a80546001600160a01b03191683179055519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090602090a180f35b9051630f966bcb60e41b8152fd5b5050346101ca57806003193601126101ca577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a543906110f8611225565b61110061123b565b906111096112fe565b6001600160a01b03168085526007602052828520805460ff191660ff8415151617905590825191825215156020820152a180f35b849250346103dc5761114e366111d3565b92909183156111c7575050825b8281106111945750610ab27fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f693945192839233846112a1565b338452602060028152858520906111ac83868661127b565b35865252848420805460ff191660019081179091550161115b565b6397983bdb60e01b8152fd5b9060206003198301126112205760043567ffffffffffffffff9283821161122057806023830112156112205781600401359384116112205760248460051b83010111611220576024019190565b600080fd5b600435906001600160a01b038216820361122057565b60243590811515820361122057565b60043590811515820361122057565b6004359061ffff8216820361122057565b6044359061ffff8216820361122057565b919081101561128b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909116815260406020820181905281018390526001600160fb1b0383116112205760609260051b809284830137010190565b919082018092116112e857565b634e487b7160e01b600052601160045260246000fd5b6003546001600160a01b0316330361131257565b6040516330cd747160e01b8152600490fdfea2646970667358221220d9ce2dc062a720117ed3e00ced74036ad707441d54aae3a0acaf895d0be9c5fc64736f6c63430008110033",
    "sourceMap": "1258:10861:12:-:0;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;1116:14:224;1258:10861:12;;-1:-1:-1;;;;;;1258:10861:12;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;1145:16:224;;1258:10861:12;;1145:16:224;1258:10861:12;713:1:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;;1022:257:19;;;1258:10861:12;1096:2:19;1258:10861:12;;1022:257:19;;;1096:2;1258:10861:12;;1022:257:19;;;1258:10861:12;1161:3:19;1258:10861:12;;1022:257:19;;;-1:-1:-1;;1258:10861:12;;;;;1022:257:19;;1258:10861:12;;;;1022:257:19;;;1258:10861:12;;;;;;;1004:12:19;1258:10861:12;;;;;;;;;;;;;713:1:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:257:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;1096:2:19;1258:10861:12;;;;;1096:2:19;1258:10861:12;;1022:257:19;1258:10861:12;;1161:3:19;1258:10861:12;;;1022:257:19;1258:10861:12;;;;;;;;1022:257:19;1258:10861:12;;;;1295:57:19;;;1559:5:12;1258:10861;;;7973:37;;7969:119;;-1:-1:-1;;;;;;1258:10861:12;;;;;-1:-1:-1;;;1258:10861:12;1559:5;1258:10861;;;;;;;;8159:48;;;;1258:10861;;;;;;;;7969:119;1258:10861;;-1:-1:-1;;;8033:44:12;;;;;1258:10861;;;;-1:-1:-1;1258:10861:12;;;;;-1:-1:-1;1258:10861:12;;-1:-1:-1;1258:10861:12;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c918263134849a61461113d575081631d3c4268146110bc5781631df47f801461103a57816320cd05c714610ff957816323452b9c14610f675781632bb5a9e614610f265781633e56753914610e9e578163463357ec14610e6357816346b625bc14610dd55781634cbac9dc14610dac5781635487887614610d3d5781635a195d1914610cff5781635b6ac01114610c7457816364df049e14610c4b57816367d9dd7914610c225781636e90c01414610bfc5781637200b82914610b375781637762df2514610b0f57816379ed31d414610a5c5781637a7d885114610a24578163838b8f5c146109fb5781638da5cb5b146109d257816391be1360146106ca578163a02bab571461065b578163a39bf29f1461061a578163ae1cce5a1461057e578163b647a4041461050f578163bb91c33914610496578163c0b6f561146103e0578163d5a06adf146102a9578163d5b010f5146101ce575063ea179b761461018557600080fd5b346101ca57806003193601126101ca5760209160ff9082906001600160a01b036101ad611225565b168152600285528181206024358252855220541690519015158152f35b5080fd5b8383346101ca57806003193601126101ca576101e861124a565b6101f061123b565b91600019430143811161029657917fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4493916060934060801c3387528660205281872054936001838920015493610279575b610259575b508051923384526020840152820152a180f35b61026391926112db565b9033865285602052816001828820015586610246565b9381610284916112db565b93338852876020528483892055610241565b634e487b7160e01b855260118652602485fd5b9050346103dc5760803660031901126103dc578035916102c761123b565b6102cf61126a565b6064359161ffff92838116958682036103d8576102ea6112fe565b6008548810156103ca57878952600960205284868a205460281c16871180156103bf575b6103b157509160809593916103978896947f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9998b52600960205261036083878d209060ff801983541691151516179055565b858b20805462ffff001916600886901b62ffff0016179055858b209064ffff00000082549160181b169064ffff0000001916179055565b83519586521515602086015216908301526060820152a180f35b855163b704b7c160e01b8152fd5b50868585161161030e565b855163bd7056c760e01b8152fd5b8880fd5b8280fd5b8383346101ca5760203660031901126101ca576103fb611225565b6104036112fe565b83549060ff8260a01c16600381101561048357610473576001600160a81b03199091166001600160a01b03909116908117600160a01b179093558051338152602081019390935290917fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9190a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b9050346103dc5760203660031901126103dc5760e09282913581526009602052205481519160ff82161515835261ffff90818360081c166020850152818360181c16908401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b5050346101ca5760203660031901126101ca5760207fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa7649161054e611225565b6105566112fe565b600b80546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101ca57806003193601126101ca57610598611225565b600554602435916001600160a01b03918216330361060a5761271083116105fa577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526006602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b5050346101ca5760203660031901126101ca579081906001600160a01b03610640611225565b16815280602052206001815491015482519182526020820152f35b5050346101ca5760203660031901126101ca5760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc9161069a611225565b6106a26112fe565b600580546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101ca5760c03660031901126101ca576106e5611259565b6024359161ffff928381168091036109ce576106ff61126a565b926064359163ffffffff60e01b83168093036109ca57608435938415158095036109c65760a4356001600160a01b03811696908790036103d85787906107436112fe565b169283831180156109bb575b80156109b0575b6109a05784156109905781516345b2b38160e01b81526020989089818d818c5afa908115610986578b91610921575b50156109115782519160e0830183811067ffffffffffffffff8211176108fe57888784888f968f9897968f968e988c91825260018b52838c8c0193169b8c8452828c0195865260608c0197885260808c019a8b5260a08c0198895260c08c01998a52600854825260099052209851151561080b908a9060ff801983541691151516179055565b51885462ffff001916911660081b62ffff001617875551865464ffff0000001916911660181b64ffff0000001617855551928454905160a81c6affffffff00000000000000169160ff60581b9051151560581b16926bffffffffffffffffffffffff19905160601b169360281b66ffff0000000000169064ffffffffff161717171790556008549760001989146108eb576001890160085582519889528801528601526060850152608084015260a083015260c08201527f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29060e090a180f35b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b8c5260418d5260248cfd5b825163ef8c37d760e01b81528b90fd5b9050893d8b1161097f575b601f8101601f1916820167ffffffffffffffff81118382101761096b578b91839187528101031261096757518015158103610967578c610785565b8a80fd5b50634e487b7160e01b8c5260418d5260248cfd5b503d61092c565b84513d8d823e3d90fd5b8151636168384960e11b81528a90fd5b815163b704b7c160e01b81528a90fd5b506101f48411610756565b50828882161161074f565b8780fd5b8680fd5b8480fd5b5050346101ca57816003193601126101ca5760035490516001600160a01b039091168152602090f35b5050346101ca57816003193601126101ca57600b5490516001600160a01b039091168152602090f35b5050346101ca5760203660031901126101ca5760209181906001600160a01b03610a4c611225565b1681526006845220549051908152f35b9050346103dc57610a6c366111d3565b9290918315610b015750835b838110610ab8575090610ab27f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec42593925192839233846112a1565b0390a180f35b338552600190602082815283872090610ad283888861127b565b358852527f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8387205501610a78565b90516397983bdb60e01b8152fd5b9050346103dc57826003193601126103dc575490516001600160a01b03909116815260209150f35b9050346103dc57826003193601126103dc57805460ff8160a01c166003811015610be957600103610bda576001600160a01b0381163303610bcb57916020917f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc93336bffffffffffffffffffffffff60a01b60035416176003556affffffffffffffffffffff60a81b16905551338152a180f35b5090516357ee7dc960e11b8152fd5b509051632f27941360e11b8152fd5b634e487b7160e01b855260218352602485fd5b5050346101ca57816003193601126101ca5760209061ffff600a5460a01c169051908152f35b828434610c485780600319360112610c48575060ff6020925460a81c1690519015158152f35b80fd5b5050346101ca57816003193601126101ca57600a5490516001600160a01b039091168152602090f35b919050346103dc57826003193601126103dc57610c8f6112fe565b81549060ff8260a01c166003811015610cec57610cdd575060ff60a01b1916600160a11b1790557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b81529050fd5b634e487b7160e01b855260218452602485fd5b5050346101ca5760203660031901126101ca5760209160ff9082906001600160a01b03610d2a611225565b1681526007855220541690519015158152f35b919050346103dc5760203660031901126103dc577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3491602091610d7e61124a565b610d866112fe565b825460ff60a81b191690151560a881901b60ff60a81b169190911790925551908152a180f35b5050346101ca57816003193601126101ca5760055490516001600160a01b039091168152602090f35b919050346103dc5760203660031901126103dc57610df1611259565b610df96112fe565b61ffff8116926109c48411610e555750600a805461ffff60a01b191660a09290921b61ffff60a01b16919091179055519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a180f35b82516397d7dcfb60e01b8152fd5b5050346101ca57816003193601126101ca57602090517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b9050346103dc57826003193601126103dc57610eb86112fe565b805460ff8160a01c166003811015610be957600203610f1757600380546001600160a01b031916905560ff60a01b19169055518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b50905163022e289160e11b8152fd5b8383346101ca57816003193601126101ca5760ff835460a01c169051916003821015610f5457602083838152f35b634e487b7160e01b815260218452602490fd5b919050346103dc57826003193601126103dc57610f826112fe565b81549060ff8260a01c16906003821015610cec578115610fea5750600114610fd8575b50805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b031916815538610fa5565b5163ccf69db760e01b81528390fd5b5050346101ca57806003193601126101ca5760209181906001600160a01b03611020611225565b168152600184528181206024358252845220549051908152f35b919050346103dc5760203660031901126103dc57611056611225565b61105e6112fe565b6001600160a01b03169182156110ae5750600a80546001600160a01b03191683179055519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090602090a180f35b9051630f966bcb60e41b8152fd5b5050346101ca57806003193601126101ca577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a543906110f8611225565b61110061123b565b906111096112fe565b6001600160a01b03168085526007602052828520805460ff191660ff8415151617905590825191825215156020820152a180f35b849250346103dc5761114e366111d3565b92909183156111c7575050825b8281106111945750610ab27fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f693945192839233846112a1565b338452602060028152858520906111ac83868661127b565b35865252848420805460ff191660019081179091550161115b565b6397983bdb60e01b8152fd5b9060206003198301126112205760043567ffffffffffffffff9283821161122057806023830112156112205781600401359384116112205760248460051b83010111611220576024019190565b600080fd5b600435906001600160a01b038216820361122057565b60243590811515820361122057565b60043590811515820361122057565b6004359061ffff8216820361122057565b6044359061ffff8216820361122057565b919081101561128b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909116815260406020820181905281018390526001600160fb1b0383116112205760609260051b809284830137010190565b919082018092116112e857565b634e487b7160e01b600052601160045260246000fd5b6003546001600160a01b0316330361131257565b6040516330cd747160e01b8152600490fdfea2646970667358221220d9ce2dc062a720117ed3e00ced74036ad707441d54aae3a0acaf895d0be9c5fc64736f6c63430008110033",
    "sourceMap": "1258:10861:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;:::i;:::-;;;;1496:67:14;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;4068:12:14;1258:10861:12;4068:12:14;1258:10861:12;;;;4058:27:14;4529:53;4058:27;;1258:10861:12;4058:27:14;;4089:3;1258:10861:12;4142:10:14;1258:10861:12;;;;;;;;;;4083:1:14;1258:10861:12;;;4194:37:14;1258:10861:12;4242:131:14;;;1258:10861:12;4383:131:14;;1258:10861:12;;;;4142:10:14;;1258:10861:12;;;;;;;;;4529:53:14;1258:10861:12;;4383:131:14;4406:32;;;;:::i;:::-;4142:10;;1258:10861:12;;;;;;4083:1:14;1258:10861:12;;;4452:37:14;162:6:4;4383:131:14;;;4242;4265:32;;;;;:::i;:::-;4142:10;;1258:10861:12;;;;;;;;;162:6:4;4242:131:14;;1258:10861:12;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;3761:16:19;1258:10861:12;3747:30:19;;;3743:85;;1258:10861:12;;;3859:12:19;1258:10861:12;;;;;;;;;;3842:58:19;;:101;;;;1258:10861:12;3838:167:19;;1258:10861:12;;;;;;4150:55:19;1258:10861:12;;;4221:77:19;1258:10861:12;;;3859:12:19;1258:10861:12;;4015:44:19;1258:10861:12;;;;;;;;;;;;;;;;;;;4015:44:19;1258:10861:12;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4150:55:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;4221:77:19;1258:10861:12;;3838:167:19;1258:10861:12;;-1:-1:-1;;;3966:28:19;;;3842:101;1258:10861:12;;;;;3904:39:19;3842:101;;3743:85;1258:10861:12;;-1:-1:-1;;;3800:17:19;;;1258:10861:12;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;:::i;:::-;926:61:224;;:::i;:::-;1258:10861:12;;;;;;;;;;;;;;3023:108:224;;-1:-1:-1;;;;;;1258:10861:12;;;-1:-1:-1;;;;;1258:10861:12;;;;;;-1:-1:-1;;;1258:10861:12;;;;;;3441:10:224;1258:10861:12;;;;;;;;;;;3415:56:224;;1258:10861:12;3415:56:224;1258:10861:12;;3023:108:224;1258:10861:12;;-1:-1:-1;;;3093:27:224;;1258:10861:12;;3093:27:224;1258:10861:12;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;809:48:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;2352:42;1258:10861;;;:::i;:::-;926:61:224;;:::i;:::-;2277:60:12;1258:10861;;-1:-1:-1;;;;;;1258:10861:12;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;2352:42;1258:10861;;;;;;;;;;;;;;;;;;:::i;:::-;1588:19:6;1258:10861:12;;;;-1:-1:-1;;;;;1258:10861:12;;;1574:10:6;:33;1570:95;;162:6:4;1679:30:6;;1675:87;;1817:31;1258:10861:12;;;;;;;;1772:14:6;1258:10861:12;;;;;;162:6:4;1258:10861:12;;;;;;162:6:4;;1258:10861:12;1817:31:6;1258:10861:12;;1675:87:6;1258:10861:12;;-1:-1:-1;;;1732:19:6;;1258:10861:12;;1732:19:6;1570:95;1258:10861:12;;-1:-1:-1;;;1630:24:6;;1258:10861:12;;1630:24:6;1258:10861:12;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;-1:-1:-1;;;;;1258:10861:12;;:::i;:::-;;;;;;;;;;;1154:60:14;;1258:10861:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;2228:46:6;1258:10861:12;;;:::i;:::-;926:61:224;;:::i;:::-;2169:44:6;1258:10861:12;;-1:-1:-1;;;;;;1258:10861:12;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;2228:46:6;1258:10861:12;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;926:61:224;;;;:::i;:::-;1258:10861:12;2199:32:19;;;;:73;;;;1258:10861:12;2199:99:19;;;;1258:10861:12;2195:165:19;;2374:21;;2370:82;;1258:10861:12;;-1:-1:-1;;;2467:49:19;;1258:10861:12;;;;;2467:49:19;1258:10861:12;2467:49:19;;;;;;;;;;;;1258:10861:12;2466:50:19;;2462:103;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:308:19;;;;1258:10861:12;;;;;;2608:308:19;;;1258:10861:12;;;;2608:308:19;;1258:10861:12;;;;2608:308:19;;1258:10861:12;;;;2608:308:19;;1258:10861:12;;;;2608:308:19;;1258:10861:12;;;2588:16:19;1258:10861:12;;;2575:12:19;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:16:19;1258:10861:12;;;;;;;;;;;2588:16:19;162:6:4;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:219:19;;1258:10861:12;;2932:219:19;1258:10861:12;;;-1:-1:-1;;;1258:10861:12;;;;;;;;;-1:-1:-1;;;1258:10861:12;;;;;;;;2462:103:19;1258:10861:12;;-1:-1:-1;;;2539:15:19;;1258:10861:12;;2539:15:19;2467:49;;;;;;;;;;1258:10861:12;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;2467:49:19;;1258:10861:12;;;;;;;;;;;;2467:49:19;;;1258:10861:12;;;;;-1:-1:-1;;;;1258:10861:12;;;;;;;;2467:49:19;;;;;;1258:10861:12;;;;;;;;;2370:82:19;1258:10861:12;;-1:-1:-1;;;2418:23:19;;1258:10861:12;;2418:23:19;2195:165;1258:10861:12;;-1:-1:-1;;;2321:28:19;;1258:10861:12;;2321:28:19;2199:99;2276:22;2295:3;2276:22;;2199:99;;:73;1258:10861:12;;;;;2235:37:19;2199:73;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;1623:43;1258:10861;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;:::i;:::-;;;;1040:49:6;1258:10861:12;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:11:14;;;;;2002:65;;2082:9;;2093:10;;;;;;1258:10861:12;;2283:45:14;;1258:10861:12;;;2136:10:14;;;;2283:45;;:::i;:::-;;;;1258:10861:12;;2082:9:14;2136:10;1258:10861:12;;2121:14:14;1258:10861:12;;;;;;;;2148:14:14;;;;;;:::i;:::-;1258:10861:12;;;;1028:33:14;1258:10861:12;;;162:6:4;1258:10861:12;2082:9:14;;2002:65;1258:10861:12;;-1:-1:-1;;;2040:16:14;;;1258:10861:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;-1:-1:-1;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:25:224;2427:44;2423:105;;-1:-1:-1;;;;;1258:10861:12;;2542:10:224;:28;2538:87;;2542:10;1258:10861:12;2542:10:224;2732:20;2542:10;;1258:10861:12;;;;;;;;;;;;;;;;2542:10:224;1258:10861:12;;2732:20:224;1258:10861:12;;2538:87:224;-1:-1:-1;1258:10861:12;;-1:-1:-1;;;2593:21:224;;;2423:105;-1:-1:-1;1258:10861:12;;-1:-1:-1;;;2494:23:224;;;1258:10861:12;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;1527:37;1258:10861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:35;1258:10861;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;1258:10861:12;;;;;;;;;;;;;;3647:108:224;;-1:-1:-1;;;;;1258:10861:12;-1:-1:-1;;;1258:10861:12;;;3828:31:224;;;;1258:10861:12;;3647:108:224;1258:10861:12;-1:-1:-1;;;3717:27:224;;1258:10861:12;-1:-1:-1;3717:27:224;1258:10861:12;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;:::i;:::-;;;;528:49:10;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;2620:35:6;1258:10861:12;;;;;:::i;:::-;926:61:224;;:::i;:::-;1258:10861:12;;-1:-1:-1;;;;1258:10861:12;;;;;;;;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;2620:35:6;1258:10861:12;;;;;;;;;;;;;;;;787:34:6;1258:10861:12;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;:::i;:::-;926:61:224;;:::i;:::-;1258:10861:12;;;2776:26;2797:5;2776:26;;2772:85;;-1:-1:-1;2867:36:12;1258:10861;;-1:-1:-1;;;;1258:10861:12;;;;;;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;2919:38;;1258:10861;;2919:38;1258:10861;;2772:85;1258:10861;;-1:-1:-1;;;2825:21:12;;;1258:10861;;;;;;;;;;;;;;;;;1028:33:14;1258:10861:12;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;1258:10861:12;;;;;;;;;;;;;2010:29:224;1991:48;1987:113;;1258:10861:12;;;-1:-1:-1;;;;;;1258:10861:12;;;-1:-1:-1;;;;1258:10861:12;;;;;;;2170:20:224;;1258:10861:12;;2170:20:224;1258:10861:12;;1987:113:224;-1:-1:-1;1258:10861:12;;-1:-1:-1;;;2062:27:224;;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;1258:10861:12;;;;;;;;;;;;;;;1526:44:224;;1522:111;;1647:45;1258:10861:12;1647:45:224;1643:97;;1258:10861:12;-1:-1:-1;1258:10861:12;;-1:-1:-1;;;;1258:10861:12;;;1788:25:224;;;;1258:10861:12;;1643:97:224;-1:-1:-1;;;;;;1258:10861:12;;;1643:97:224;;;1522:111;1258:10861:12;-1:-1:-1;;;1593:29:224;;1258:10861:12;;1593:29:224;1258:10861:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;:::i;:::-;926:61:224;;:::i;:::-;-1:-1:-1;;;;;1258:10861:12;;7973:37;;7969:119;;-1:-1:-1;8098:46:12;1258:10861;;-1:-1:-1;;;;;;1258:10861:12;;;;;;;;;8159:48;;1258:10861;;8159:48;1258:10861;;7969:119;1258:10861;;-1:-1:-1;;;8033:44:12;;;1258:10861;;;;;;;;;;;;;;1140:42:10;1258:10861:12;;;:::i;:::-;;;:::i;:::-;926:61:224;;;:::i;:::-;-1:-1:-1;;;;;1258:10861:12;;;;1086:17:10;1258:10861:12;;;;;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;1140:42:10;1258:10861:12;;;;;;;;;;;;:::i;:::-;2686:11:14;;;;;2682:65;;2762:9;;;2773:10;;;;;;1258:10861:12;2937:47:14;;1258:10861:12;;;2817:10:14;;;;2937:47;;:::i;2762:9::-;2817:10;1258:10861:12;;;2801:15:14;1258:10861:12;;;;;2829:15:14;;;;;;:::i;:::-;1258:10861:12;;;;;;;;;-1:-1:-1;;1258:10861:12;2848:4:14;1258:10861:12;;;;;;;2762:9:14;;2682:65;-1:-1:-1;;;2720:16:14;;;1258:10861:12;;;-1:-1:-1;;1258:10861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1258:10861:12;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1258:10861:12;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3872:94:224;3935:5;1258:10861:12;-1:-1:-1;;;;;1258:10861:12;3921:10:224;:19;3917:42;;3872:94::o;3917:42::-;1258:10861:12;;-1:-1:-1;;;3949:10:224;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": "463357ec",
    "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": "91be1360",
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOrderNonces(uint256[])": "79ed31d4",
    "cancelOwnershipTransfer()": "23452b9c",
    "cancelSubsetNonces(uint256[])": "134849a6",
    "confirmOwnershipRenouncement()": "3e567539",
    "confirmOwnershipTransfer()": "7200b829",
    "creatorFeeManager()": "838b8f5c",
    "incrementBidAskNonces(bool,bool)": "d5b010f5",
    "initiateOwnershipRenouncement()": "5b6ac011",
    "initiateOwnershipTransfer(address)": "c0b6f561",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "maxCreatorFeeBp()": "6e90c014",
    "owner()": "8da5cb5b",
    "ownershipStatus()": "2bb5a9e6",
    "potentialOwner()": "7762df25",
    "protocolFeeRecipient()": "64df049e",
    "strategyInfo(uint256)": "bb91c339",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCreatorFeeManager(address)": "b647a404",
    "updateCurrencyStatus(address,bool)": "1d3c4268",
    "updateMaxCreatorFeeBp(uint16)": "46b625bc",
    "updateProtocolFeeRecipient(address)": "1df47f80",
    "updateStrategy(uint256,bool,uint16,uint16)": "d5a06adf",
    "userBidAskNonces(address)": "a39bf29f",
    "userOrderNonce(address,uint256)": "20cd05c7",
    "userSubsetNonce(address,uint256)": "ea179b76"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CreatorFeeBpTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthsInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewProtocolFeeRecipientCannotBeNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingTransferInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorForStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotV2Strategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutsideOfTimeRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncementNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasNoSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"StrategyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPotentialOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"InitiateOwnershipRenouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"InitiateOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"name\":\"NewBidAskNonces\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creatorFeeManager\",\"type\":\"address\"}],\"name\":\"NewCreatorFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCreatorFeeBp\",\"type\":\"uint256\"}],\"name\":\"NewMaxCreatorFeeBp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"OrderNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"SubsetNoncesCancelled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAGIC_VALUE_ORDER_NONCE_EXECUTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelOrderNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelSubsetNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFeeManager\",\"outputs\":[{\"internalType\":\"contract ICreatorFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"bid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ask\",\"type\":\"bool\"}],\"name\":\"incrementBidAskNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCreatorFeeBp\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipStatus\",\"outputs\":[{\"internalType\":\"enum IOwnableTwoSteps.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCreatorFeeManager\",\"type\":\"address\"}],\"name\":\"updateCreatorFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxCreatorFeeBp\",\"type\":\"uint16\"}],\"name\":\"updateMaxCreatorFeeBp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"newStandardProtocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMinTotalFee\",\"type\":\"uint16\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBidAskNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSubsetNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"errors\":{\"NotV2Strategy()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyHasNoSelector()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyNotAvailable(uint256)\":[{\"details\":\"It is returned if there is no implementation address and the strategyId is strictly greater than 0.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"details\":\"It can only be returned for owner operations.\"}]},\"kind\":\"dev\",\"methods\":{\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"details\":\"Strategies have an id that is incremental.      Only callable by owner.\",\"params\":{\"implementation\":\"Implementation address\",\"isMakerBid\":\"Whether the function selector is for maker bid\",\"maxProtocolFeeBp\":\"Maximum protocol fee (in basis point)\",\"minTotalFeeBp\":\"Minimum total fee (in basis point)\",\"selector\":\"Function selector for the strategy\",\"standardProtocolFeeBp\":\"Standard protocol fee (in basis point)\"}},\"cancelOrderNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.\",\"params\":{\"orderNonces\":\"Array of order nonces\"}},\"cancelOwnershipTransfer()\":{\"details\":\"This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership.\"},\"cancelSubsetNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas.\",\"params\":{\"subsetNonces\":\"Array of subset nonces\"}},\"confirmOwnershipTransfer()\":{\"details\":\"This function can only be called by the current potential owner.\"},\"constructor\":{\"params\":{\"_owner\":\"Owner address\",\"_protocolFeeRecipient\":\"Protocol fee recipient address\"}},\"incrementBidAskNonces(bool,bool)\":{\"details\":\"The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.\",\"params\":{\"ask\":\"Whether to increment the user ask nonce\",\"bid\":\"Whether to increment the user bid nonce\"}},\"initiateOwnershipTransfer(address)\":{\"params\":{\"newPotentialOwner\":\"New potential owner address\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCreatorFeeManager(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newCreatorFeeManager\":\"Address of the creator fee manager\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}},\"updateMaxCreatorFeeBp(uint16)\":{\"details\":\"The maximum value that can be set is 25%.      Only callable by owner.\",\"params\":{\"newMaxCreatorFeeBp\":\"New maximum creator fee (in basis point)\"}},\"updateProtocolFeeRecipient(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newProtocolFeeRecipient\":\"New protocol fee recipient address\"}},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the strategy must be active\",\"newMinTotalFee\":\"New minimum total fee (in basis point)\",\"newStandardProtocolFee\":\"New standard protocol fee (in basis point)\",\"strategyId\":\"Strategy id\"}}},\"title\":\"ExecutionManager\",\"version\":1},\"userdoc\":{\"errors\":{\"CreatorFeeBpTooHigh()\":[{\"notice\":\"It is returned if the creator fee (in basis point) is too high.\"}],\"LengthsInvalid()\":[{\"notice\":\"It is returned if there is either a mismatch or an error in the length of the array(s).\"}],\"NewProtocolFeeRecipientCannotBeNullAddress()\":[{\"notice\":\"It is returned if the new protocol fee recipient is set to address(0).\"}],\"NoOngoingTransferInProgress()\":[{\"notice\":\"This is returned when there is no transfer of ownership in progress.\"}],\"NoSelectorForStrategy()\":[{\"notice\":\"It is returned if there is no selector for maker ask/bid for a given strategyId,         depending on the quote type.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotOwner()\":[{\"notice\":\"This is returned when the caller is not the owner.\"}],\"NotV2Strategy()\":[{\"notice\":\"If the strategy has not set properly its implementation contract.\"}],\"OutsideOfTimeRange()\":[{\"notice\":\"It is returned if the current block timestamp is not between start and end times in the maker order.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"RenouncementNotInProgress()\":[{\"notice\":\"This is returned when there is no renouncement in progress but         the owner tries to validate the ownership renouncement.\"}],\"StrategyHasNoSelector()\":[{\"notice\":\"It is returned if the strategy has no selector.\"}],\"StrategyNotAvailable(uint256)\":[{\"notice\":\"It is returned if the strategy id has no implementation.\"}],\"StrategyNotUsed()\":[{\"notice\":\"It is returned if the strategyId is invalid.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"notice\":\"It is returned if the strategy's protocol fee is too high.\"}],\"TransferAlreadyInProgress()\":[{\"notice\":\"This is returned when the transfer is already in progress but the owner tries         initiate a new ownership transfer.\"}],\"TransferNotInProgress()\":[{\"notice\":\"This is returned when there is no ownership transfer in progress but the         ownership change tries to be approved.\"}],\"WrongPotentialOwner()\":[{\"notice\":\"This is returned when the ownership transfer is attempted to be validated by the         a caller that is not the potential owner.\"}]},\"events\":{\"CancelOwnershipTransfer()\":{\"notice\":\"This is emitted if the ownership transfer is cancelled.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"InitiateOwnershipRenouncement()\":{\"notice\":\"This is emitted if the ownership renouncement is initiated.\"},\"InitiateOwnershipTransfer(address,address)\":{\"notice\":\"This is emitted if the ownership transfer is initiated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewBidAskNonces(address,uint256,uint256)\":{\"notice\":\"It is emitted when there is an update of the global bid/ask nonces for a user.\"},\"NewCreatorFeeManager(address)\":{\"notice\":\"It is issued when there is a new creator fee manager.\"},\"NewMaxCreatorFeeBp(uint256)\":{\"notice\":\"It is issued when there is a new maximum creator fee (in basis point).\"},\"NewOwner(address)\":{\"notice\":\"This is emitted when there is a new owner.\"},\"NewProtocolFeeRecipient(address)\":{\"notice\":\"It is issued when there is a new protocol fee recipient address.\"},\"NewStrategy(uint256,uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"It is emitted when a new strategy is added.\"},\"OrderNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when order nonces are cancelled for a user.\"},\"StrategyUpdated(uint256,bool,uint16,uint16)\":{\"notice\":\"It is emitted when an existing strategy is updated.\"},\"SubsetNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when subset nonces are cancelled for a user.\"}},\"kind\":\"user\",\"methods\":{\"MAGIC_VALUE_ORDER_NONCE_EXECUTED()\":{\"notice\":\"Magic value nonce returned if executed (or cancelled).\"},\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"This function allows the owner to add a new execution strategy to the protocol.\"},\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOrderNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of order nonces.\"},\"cancelOwnershipTransfer()\":{\"notice\":\"This function is used to cancel the ownership transfer.\"},\"cancelSubsetNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of subset nonces.\"},\"confirmOwnershipRenouncement()\":{\"notice\":\"This function is used to confirm the ownership renouncement.\"},\"confirmOwnershipTransfer()\":{\"notice\":\"This function is used to confirm the ownership transfer.\"},\"constructor\":{\"notice\":\"Constructor\"},\"creatorFeeManager()\":{\"notice\":\"Creator fee manager.\"},\"incrementBidAskNonces(bool,bool)\":{\"notice\":\"This function increments a user's bid/ask nonces.\"},\"initiateOwnershipRenouncement()\":{\"notice\":\"This function is used to initiate the ownership renouncement.\"},\"initiateOwnershipTransfer(address)\":{\"notice\":\"This function is used to initiate the transfer of ownership to a new owner.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"maxCreatorFeeBp()\":{\"notice\":\"Maximum creator fee (in basis point).\"},\"owner()\":{\"notice\":\"Address of the current owner.\"},\"ownershipStatus()\":{\"notice\":\"Ownership status.\"},\"potentialOwner()\":{\"notice\":\"Address of the potential owner.\"},\"protocolFeeRecipient()\":{\"notice\":\"Protocol fee recipient.\"},\"strategyInfo(uint256)\":{\"notice\":\"This returns the strategy information for a strategy id.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCreatorFeeManager(address)\":{\"notice\":\"This function allows the owner to update the creator fee manager address.\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"},\"updateMaxCreatorFeeBp(uint16)\":{\"notice\":\"This function allows the owner to update the maximum creator fee (in basis point).\"},\"updateProtocolFeeRecipient(address)\":{\"notice\":\"This function allows the owner to update the protocol fee recipient.\"},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"notice\":\"This function allows the owner to update parameters for an existing execution strategy.\"},\"userBidAskNonces(address)\":{\"notice\":\"This tracks the bid and ask nonces for a user address.\"},\"userOrderNonce(address,uint256)\":{\"notice\":\"This checks whether the order nonce for a user was executed or cancelled.\"},\"userSubsetNonce(address,uint256)\":{\"notice\":\"This checks whether the subset nonce for a user was cancelled.\"}},\"notice\":\"This contract handles the execution and resolution of transactions. A transaction is executed on-chain         when an off-chain maker order is matched by on-chain taker order of a different kind.         For instance, a taker ask is executed against a maker bid (or a taker bid against a maker ask).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/ExecutionManager.sol\":\"ExecutionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5\",\"dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke\"]},\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808\",\"dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5\",\"dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y\"]},\"contracts/core/ExecutionManager.sol\":{\"keccak256\":\"0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7\",\"dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn\"]},\"contracts/core/InheritedStrategy.sol\":{\"keccak256\":\"0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860\",\"dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375\",\"dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa\"]},\"contracts/core/StrategyManager.sol\":{\"keccak256\":\"0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8\",\"dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV\"]},\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/errors/SharedErrors.sol\":{\"keccak256\":\"0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9\",\"dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICreatorFeeManager.sol\":{\"keccak256\":\"0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e\",\"dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"contracts/interfaces/IExecutionManager.sol\":{\"keccak256\":\"0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab\",\"dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443\",\"dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS\"]},\"contracts/interfaces/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c\",\"dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db\",\"dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD\"]},\"contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817\",\"dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5\",\"dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreatorFeeBpTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LengthsInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewProtocolFeeRecipientCannotBeNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOngoingTransferInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorForStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotV2Strategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutsideOfTimeRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncementNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyHasNoSelector"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrategyNotAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyProtocolFeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferAlreadyInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongPotentialOwner"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CancelOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "InitiateOwnershipRenouncement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "potentialOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitiateOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBidAskNonces",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creatorFeeManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewCreatorFeeManager",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxCreatorFeeBp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewMaxCreatorFeeBp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFeeRecipient",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubsetNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrderNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSubsetNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipRenouncement"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creatorFeeManager",
          "outputs": [
            {
              "internalType": "contract ICreatorFeeManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "bid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ask",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementBidAskNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipRenouncement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPotentialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCreatorFeeBp",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipStatus",
          "outputs": [
            {
              "internalType": "enum IOwnableTwoSteps.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "potentialOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyInfo",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCreatorFeeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCreatorFeeManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newMaxCreatorFeeBp",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxCreatorFeeBp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newProtocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProtocolFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "newStandardProtocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "newMinTotalFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBidAskNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userOrderNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userSubsetNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "details": "Strategies have an id that is incremental.      Only callable by owner.",
            "params": {
              "implementation": "Implementation address",
              "isMakerBid": "Whether the function selector is for maker bid",
              "maxProtocolFeeBp": "Maximum protocol fee (in basis point)",
              "minTotalFeeBp": "Minimum total fee (in basis point)",
              "selector": "Function selector for the strategy",
              "standardProtocolFeeBp": "Standard protocol fee (in basis point)"
            }
          },
          "cancelOrderNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.",
            "params": {
              "orderNonces": "Array of order nonces"
            }
          },
          "cancelOwnershipTransfer()": {
            "details": "This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership."
          },
          "cancelSubsetNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas.",
            "params": {
              "subsetNonces": "Array of subset nonces"
            }
          },
          "confirmOwnershipTransfer()": {
            "details": "This function can only be called by the current potential owner."
          },
          "constructor": {
            "params": {
              "_owner": "Owner address",
              "_protocolFeeRecipient": "Protocol fee recipient address"
            }
          },
          "incrementBidAskNonces(bool,bool)": {
            "details": "The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.",
            "params": {
              "ask": "Whether to increment the user ask nonce",
              "bid": "Whether to increment the user bid nonce"
            }
          },
          "initiateOwnershipTransfer(address)": {
            "params": {
              "newPotentialOwner": "New potential owner address"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCreatorFeeManager(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newCreatorFeeManager": "Address of the creator fee manager"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "details": "The maximum value that can be set is 25%.      Only callable by owner.",
            "params": {
              "newMaxCreatorFeeBp": "New maximum creator fee (in basis point)"
            }
          },
          "updateProtocolFeeRecipient(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newProtocolFeeRecipient": "New protocol fee recipient address"
            }
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the strategy must be active",
              "newMinTotalFee": "New minimum total fee (in basis point)",
              "newStandardProtocolFee": "New standard protocol fee (in basis point)",
              "strategyId": "Strategy id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": {
            "notice": "Magic value nonce returned if executed (or cancelled)."
          },
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "notice": "This function allows the owner to add a new execution strategy to the protocol."
          },
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOrderNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of order nonces."
          },
          "cancelOwnershipTransfer()": {
            "notice": "This function is used to cancel the ownership transfer."
          },
          "cancelSubsetNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of subset nonces."
          },
          "confirmOwnershipRenouncement()": {
            "notice": "This function is used to confirm the ownership renouncement."
          },
          "confirmOwnershipTransfer()": {
            "notice": "This function is used to confirm the ownership transfer."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "creatorFeeManager()": {
            "notice": "Creator fee manager."
          },
          "incrementBidAskNonces(bool,bool)": {
            "notice": "This function increments a user's bid/ask nonces."
          },
          "initiateOwnershipRenouncement()": {
            "notice": "This function is used to initiate the ownership renouncement."
          },
          "initiateOwnershipTransfer(address)": {
            "notice": "This function is used to initiate the transfer of ownership to a new owner."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "maxCreatorFeeBp()": {
            "notice": "Maximum creator fee (in basis point)."
          },
          "owner()": {
            "notice": "Address of the current owner."
          },
          "ownershipStatus()": {
            "notice": "Ownership status."
          },
          "potentialOwner()": {
            "notice": "Address of the potential owner."
          },
          "protocolFeeRecipient()": {
            "notice": "Protocol fee recipient."
          },
          "strategyInfo(uint256)": {
            "notice": "This returns the strategy information for a strategy id."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCreatorFeeManager(address)": {
            "notice": "This function allows the owner to update the creator fee manager address."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "notice": "This function allows the owner to update the maximum creator fee (in basis point)."
          },
          "updateProtocolFeeRecipient(address)": {
            "notice": "This function allows the owner to update the protocol fee recipient."
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "notice": "This function allows the owner to update parameters for an existing execution strategy."
          },
          "userBidAskNonces(address)": {
            "notice": "This tracks the bid and ask nonces for a user address."
          },
          "userOrderNonce(address,uint256)": {
            "notice": "This checks whether the order nonce for a user was executed or cancelled."
          },
          "userSubsetNonce(address,uint256)": {
            "notice": "This checks whether the subset nonce for a user was cancelled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/ExecutionManager.sol": "ExecutionManager"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2",
        "urls": [
          "bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5",
          "dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke"
        ],
        "license": "MIT"
      },
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90",
        "urls": [
          "bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808",
          "dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56",
        "urls": [
          "bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5",
          "dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y"
        ],
        "license": "MIT"
      },
      "contracts/core/ExecutionManager.sol": {
        "keccak256": "0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608",
        "urls": [
          "bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7",
          "dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn"
        ],
        "license": "MIT"
      },
      "contracts/core/InheritedStrategy.sol": {
        "keccak256": "0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38",
        "urls": [
          "bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860",
          "dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d"
        ],
        "license": "MIT"
      },
      "contracts/core/NonceManager.sol": {
        "keccak256": "0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737",
        "urls": [
          "bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375",
          "dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa"
        ],
        "license": "MIT"
      },
      "contracts/core/StrategyManager.sol": {
        "keccak256": "0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a",
        "urls": [
          "bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8",
          "dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV"
        ],
        "license": "MIT"
      },
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/errors/SharedErrors.sol": {
        "keccak256": "0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf",
        "urls": [
          "bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9",
          "dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICreatorFeeManager.sol": {
        "keccak256": "0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237",
        "urls": [
          "bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e",
          "dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionManager.sol": {
        "keccak256": "0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4",
        "urls": [
          "bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab",
          "dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c",
        "urls": [
          "bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443",
          "dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRoyaltyFeeRegistry.sol": {
        "keccak256": "0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6",
        "urls": [
          "bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c",
          "dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f",
        "urls": [
          "bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db",
          "dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9",
        "urls": [
          "bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817",
          "dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3",
        "urls": [
          "bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5",
          "dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/ExecutionManager.sol",
    "id": 3052,
    "exportedSymbols": {
      "Error_selector_offset": [
        1136
      ],
      "ExecutionManager": [
        3051
      ],
      "ICreatorFeeManager": [
        11182
      ],
      "IExecutionManager": [
        11288
      ],
      "InheritedStrategy": [
        3076
      ],
      "NoSelectorForStrategy_error_length": [
        1133
      ],
      "NoSelectorForStrategy_error_selector": [
        1130
      ],
      "NonceManager": [
        3288
      ],
      "ONE_HUNDRED_PERCENT_IN_BP": [
        1145
      ],
      "OrderStructs": [
        13693
      ],
      "OutsideOfTimeRange_error_length": [
        1127
      ],
      "OutsideOfTimeRange_error_selector": [
        1124
      ],
      "QuoteType": [
        6096
      ],
      "StrategyManager": [
        5384
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:12087:12",
    "nodes": [
      {
        "id": 2505,
        "nodeType": "PragmaDirective",
        "src": "32:24:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2507,
        "nodeType": "ImportDirective",
        "src": "71:59:12",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 13694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2506,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13693,
              "src": "79:12:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2509,
        "nodeType": "ImportDirective",
        "src": "146:70:12",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IExecutionManager.sol",
        "file": "../interfaces/IExecutionManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 11289,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2508,
              "name": "IExecutionManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11288,
              "src": "154:17:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2511,
        "nodeType": "ImportDirective",
        "src": "217:72:12",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICreatorFeeManager.sol",
        "file": "../interfaces/ICreatorFeeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 11183,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2510,
              "name": "ICreatorFeeManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11182,
              "src": "225:18:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2513,
        "nodeType": "ImportDirective",
        "src": "314:58:12",
        "nodes": [],
        "absolutePath": "contracts/core/InheritedStrategy.sol",
        "file": "./InheritedStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 3077,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2512,
              "name": "InheritedStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3076,
              "src": "322:17:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2515,
        "nodeType": "ImportDirective",
        "src": "373:48:12",
        "nodes": [],
        "absolutePath": "contracts/core/NonceManager.sol",
        "file": "./NonceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 3289,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2514,
              "name": "NonceManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3288,
              "src": "381:12:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2517,
        "nodeType": "ImportDirective",
        "src": "422:54:12",
        "nodes": [],
        "absolutePath": "contracts/core/StrategyManager.sol",
        "file": "./StrategyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 5385,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2516,
              "name": "StrategyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5384,
              "src": "430:15:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2523,
        "nodeType": "ImportDirective",
        "src": "490:215:12",
        "nodes": [],
        "absolutePath": "contracts/constants/AssemblyConstants.sol",
        "file": "../constants/AssemblyConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 1140,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2518,
              "name": "NoSelectorForStrategy_error_selector",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1130,
              "src": "498:36:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2519,
              "name": "NoSelectorForStrategy_error_length",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1133,
              "src": "536:34:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2520,
              "name": "OutsideOfTimeRange_error_selector",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1124,
              "src": "572:33:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2521,
              "name": "OutsideOfTimeRange_error_length",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1127,
              "src": "607:31:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2522,
              "name": "Error_selector_offset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1136,
              "src": "640:21:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2525,
        "nodeType": "ImportDirective",
        "src": "720:76:12",
        "nodes": [],
        "absolutePath": "contracts/constants/NumericConstants.sol",
        "file": "../constants/NumericConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 1150,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2524,
              "name": "ONE_HUNDRED_PERCENT_IN_BP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1145,
              "src": "728:25:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2527,
        "nodeType": "ImportDirective",
        "src": "807:49:12",
        "nodes": [],
        "absolutePath": "contracts/enums/QuoteType.sol",
        "file": "../enums/QuoteType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3052,
        "sourceUnit": 6097,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2526,
              "name": "QuoteType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6096,
              "src": "815:9:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3051,
        "nodeType": "ContractDefinition",
        "src": "1258:10861:12",
        "nodes": [
          {
            "id": 2539,
            "nodeType": "VariableDeclaration",
            "src": "1416:35:12",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2537,
              "nodeType": "StructuredDocumentation",
              "src": "1361:50:12",
              "text": " @notice Protocol fee recipient."
            },
            "functionSelector": "64df049e",
            "mutability": "mutable",
            "name": "protocolFeeRecipient",
            "nameLocation": "1431:20:12",
            "scope": 3051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2538,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2543,
            "nodeType": "VariableDeclaration",
            "src": "1527:37:12",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2540,
              "nodeType": "StructuredDocumentation",
              "src": "1458:64:12",
              "text": " @notice Maximum creator fee (in basis point)."
            },
            "functionSelector": "6e90c014",
            "mutability": "mutable",
            "name": "maxCreatorFeeBp",
            "nameLocation": "1541:15:12",
            "scope": 3051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 2541,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1527:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 2542,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1559:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "id": 2547,
            "nodeType": "VariableDeclaration",
            "src": "1623:43:12",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2544,
              "nodeType": "StructuredDocumentation",
              "src": "1571:47:12",
              "text": " @notice Creator fee manager."
            },
            "functionSelector": "838b8f5c",
            "mutability": "mutable",
            "name": "creatorFeeManager",
            "nameLocation": "1649:17:12",
            "scope": 3051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
              "typeString": "contract ICreatorFeeManager"
            },
            "typeName": {
              "id": 2546,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2545,
                "name": "ICreatorFeeManager",
                "nameLocations": [
                  "1623:18:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11182,
                "src": "1623:18:12"
              },
              "referencedDeclaration": 11182,
              "src": "1623:18:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                "typeString": "contract ICreatorFeeManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2563,
            "nodeType": "FunctionDefinition",
            "src": "1818:150:12",
            "nodes": [],
            "body": {
              "id": 2562,
              "nodeType": "Block",
              "src": "1901:67:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2559,
                        "name": "_protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2552,
                        "src": "1939:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2558,
                      "name": "_updateProtocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2846,
                      "src": "1911:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2561,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:50:12"
                }
              ]
            },
            "documentation": {
              "id": 2548,
              "nodeType": "StructuredDocumentation",
              "src": "1673:140:12",
              "text": " @notice Constructor\n @param _owner Owner address\n @param _protocolFeeRecipient Protocol fee recipient address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2555,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2550,
                    "src": "1893:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2556,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2554,
                  "name": "StrategyManager",
                  "nameLocations": [
                    "1877:15:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5384,
                  "src": "1877:15:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1877:23:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1838:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1830:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2552,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "1854:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1846:29:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:47:12"
            },
            "returnParameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2582,
            "nodeType": "FunctionDefinition",
            "src": "2185:216:12",
            "nodes": [],
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "2267:134:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2571,
                      "name": "creatorFeeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "2277:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                        "typeString": "contract ICreatorFeeManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2573,
                          "name": "newCreatorFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2566,
                          "src": "2316:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2572,
                        "name": "ICreatorFeeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11182,
                        "src": "2297:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICreatorFeeManager_$11182_$",
                          "typeString": "type(contract ICreatorFeeManager)"
                        }
                      },
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2297:40:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                        "typeString": "contract ICreatorFeeManager"
                      }
                    },
                    "src": "2277:60:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                      "typeString": "contract ICreatorFeeManager"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:60:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2578,
                        "name": "newCreatorFeeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "2373:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2577,
                      "name": "NewCreatorFeeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11260,
                      "src": "2352:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "EmitStatement",
                  "src": "2347:47:12"
                }
              ]
            },
            "documentation": {
              "id": 2564,
              "nodeType": "StructuredDocumentation",
              "src": "1974:206:12",
              "text": " @notice This function allows the owner to update the creator fee manager address.\n @param newCreatorFeeManager Address of the creator fee manager\n @dev Only callable by owner."
            },
            "functionSelector": "b647a404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2568,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2257:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "2257:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2257:9:12"
              }
            ],
            "name": "updateCreatorFeeManager",
            "nameLocation": "2194:23:12",
            "parameters": {
              "id": 2567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2566,
                  "mutability": "mutable",
                  "name": "newCreatorFeeManager",
                  "nameLocation": "2226:20:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "2218:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:30:12"
            },
            "returnParameters": {
              "id": 2570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2267:0:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2607,
            "nodeType": "FunctionDefinition",
            "src": "2685:279:12",
            "nodes": [],
            "body": {
              "id": 2606,
              "nodeType": "Block",
              "src": "2762:202:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2590,
                      "name": "newMaxCreatorFeeBp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "2776:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "325f353030",
                      "id": 2591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2797:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2500_by_1",
                        "typeString": "int_const 2500"
                      },
                      "value": "2_500"
                    },
                    "src": "2776:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2597,
                  "nodeType": "IfStatement",
                  "src": "2772:85:12",
                  "trueBody": {
                    "id": 2596,
                    "nodeType": "Block",
                    "src": "2804:53:12",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2593,
                            "name": "CreatorFeeBpTooHigh",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11273,
                            "src": "2825:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2825:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2595,
                        "nodeType": "RevertStatement",
                        "src": "2818:28:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2598,
                      "name": "maxCreatorFeeBp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "2867:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2599,
                      "name": "newMaxCreatorFeeBp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "2885:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2867:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "2867:36:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2603,
                        "name": "newMaxCreatorFeeBp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "2938:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 2602,
                      "name": "NewMaxCreatorFeeBp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11265,
                      "src": "2919:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2919:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2605,
                  "nodeType": "EmitStatement",
                  "src": "2914:43:12"
                }
              ]
            },
            "documentation": {
              "id": 2583,
              "nodeType": "StructuredDocumentation",
              "src": "2407:273:12",
              "text": " @notice This function allows the owner to update the maximum creator fee (in basis point).\n @param newMaxCreatorFeeBp New maximum creator fee (in basis point)\n @dev The maximum value that can be set is 25%.\n      Only callable by owner."
            },
            "functionSelector": "46b625bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2587,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2752:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "2752:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2752:9:12"
              }
            ],
            "name": "updateMaxCreatorFeeBp",
            "nameLocation": "2694:21:12",
            "parameters": {
              "id": 2586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "newMaxCreatorFeeBp",
                  "nameLocation": "2723:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2607,
                  "src": "2716:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2715:27:12"
            },
            "returnParameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:0:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2620,
            "nodeType": "FunctionDefinition",
            "src": "3179:157:12",
            "nodes": [],
            "body": {
              "id": 2619,
              "nodeType": "Block",
              "src": "3267:69:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2616,
                        "name": "newProtocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "3305:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2615,
                      "name": "_updateProtocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2846,
                      "src": "3277:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2618,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:52:12"
                }
              ]
            },
            "documentation": {
              "id": 2608,
              "nodeType": "StructuredDocumentation",
              "src": "2970:204:12",
              "text": " @notice This function allows the owner to update the protocol fee recipient.\n @param newProtocolFeeRecipient New protocol fee recipient address\n @dev Only callable by owner."
            },
            "functionSelector": "1df47f80",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2612,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3257:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "3257:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3257:9:12"
              }
            ],
            "name": "updateProtocolFeeRecipient",
            "nameLocation": "3188:26:12",
            "parameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2610,
                  "mutability": "mutable",
                  "name": "newProtocolFeeRecipient",
                  "nameLocation": "3223:23:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2620,
                  "src": "3215:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3214:33:12"
            },
            "returnParameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3267:0:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2820,
            "nodeType": "FunctionDefinition",
            "src": "4021:3692:12",
            "nodes": [],
            "body": {
              "id": 2819,
              "nodeType": "Block",
              "src": "4431:3282:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2649,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4449:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2819,
                      "src": "4441:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2648,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2650,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:13:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2652,
                          "name": "makerOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2627,
                          "src": "4547:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4558:9:12",
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13586,
                        "src": "4547:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2654,
                          "name": "makerOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2627,
                          "src": "4569:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4580:7:12",
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13588,
                        "src": "4569:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2651,
                      "name": "_verifyOrderTimestampValidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "4517:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) view"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4517:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2657,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:71:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2658,
                        "name": "makerOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "4603:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4614:10:12",
                      "memberName": "strategyId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13575,
                      "src": "4603:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4628:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4603:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2765,
                    "nodeType": "Block",
                    "src": "4892:2028:12",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 2687,
                              "name": "strategyInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5189,
                              "src": "4910:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                              }
                            },
                            "id": 2690,
                            "indexExpression": {
                              "expression": {
                                "id": 2688,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "4923:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4934:10:12",
                              "memberName": "strategyId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13575,
                              "src": "4923:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4910:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                              "typeString": "struct IStrategyManager.Strategy storage ref"
                            }
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4946:8:12",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12545,
                          "src": "4910:44:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2763,
                          "nodeType": "Block",
                          "src": "6827:83:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2759,
                                      "name": "makerOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2627,
                                      "src": "6873:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata"
                                      }
                                    },
                                    "id": 2760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6884:10:12",
                                    "memberName": "strategyId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13575,
                                    "src": "6873:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2758,
                                  "name": "StrategyNotAvailable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11287,
                                  "src": "6852:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 2761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6852:43:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2762,
                              "nodeType": "RevertStatement",
                              "src": "6845:50:12"
                            }
                          ]
                        },
                        "id": 2764,
                        "nodeType": "IfStatement",
                        "src": "4906:2004:12",
                        "trueBody": {
                          "id": 2757,
                          "nodeType": "Block",
                          "src": "4956:1865:12",
                          "statements": [
                            {
                              "assignments": [
                                2695
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2695,
                                  "mutability": "mutable",
                                  "name": "quoteType",
                                  "nameLocation": "5798:9:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2757,
                                  "src": "5788:19:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_QuoteType_$6096",
                                    "typeString": "enum QuoteType"
                                  },
                                  "typeName": {
                                    "id": 2694,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2693,
                                      "name": "QuoteType",
                                      "nameLocations": [
                                        "5788:9:12"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 6096,
                                      "src": "5788:9:12"
                                    },
                                    "referencedDeclaration": 6096,
                                    "src": "5788:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_QuoteType_$6096",
                                      "typeString": "enum QuoteType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "documentation": " @dev This is equivalent to\n if (makerOrder.quoteType == QuoteType.Bid) {\n     if (!strategyInfo[makerOrder.strategyId].isMakerBid) {\n         revert NoSelectorForStrategy();\n     }\n } else {\n     if (strategyInfo[makerOrder.strategyId].isMakerBid) {\n         revert NoSelectorForStrategy();\n     }\n }\n because one must be 0 and another must be 1 for the function\n to not revert.\n Both quoteType (an enum with 2 values) and isMakerBid (a bool)\n can only be 0 or 1.",
                              "id": 2698,
                              "initialValue": {
                                "expression": {
                                  "id": 2696,
                                  "name": "makerOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2627,
                                  "src": "5810:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                    "typeString": "struct OrderStructs.Maker calldata"
                                  }
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5821:9:12",
                                "memberName": "quoteType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13567,
                                "src": "5810:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteType_$6096",
                                  "typeString": "enum QuoteType"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5788:42:12"
                            },
                            {
                              "assignments": [
                                2700
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2700,
                                  "mutability": "mutable",
                                  "name": "isMakerBid",
                                  "nameLocation": "5853:10:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2757,
                                  "src": "5848:15:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2699,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5848:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2706,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2701,
                                    "name": "strategyInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5189,
                                    "src": "5866:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                      "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                                    }
                                  },
                                  "id": 2704,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2702,
                                      "name": "makerOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2627,
                                      "src": "5879:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata"
                                      }
                                    },
                                    "id": 2703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5890:10:12",
                                    "memberName": "strategyId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13575,
                                    "src": "5879:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5866:35:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                                    "typeString": "struct IStrategyManager.Strategy storage ref"
                                  }
                                },
                                "id": 2705,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5902:10:12",
                                "memberName": "isMakerBid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12555,
                                "src": "5866:46:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5848:64:12"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "5939:257:12",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "5990:188:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6023:4:12",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "name": "NoSelectorForStrategy_error_selector",
                                                "nodeType": "YulIdentifier",
                                                "src": "6029:36:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "6016:6:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6016:50:12"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6016:50:12"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Error_selector_offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "6098:21:12"
                                              },
                                              {
                                                "name": "NoSelectorForStrategy_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "6121:34:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "6091:6:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6091:65:12"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6091:65:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "quoteType",
                                          "nodeType": "YulIdentifier",
                                          "src": "5967:9:12"
                                        },
                                        {
                                          "name": "isMakerBid",
                                          "nodeType": "YulIdentifier",
                                          "src": "5978:10:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "eq",
                                        "nodeType": "YulIdentifier",
                                        "src": "5964:2:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5964:25:12"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "5961:217:12"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 1136,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6098:21:12",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1133,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6121:34:12",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1130,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6029:36:12",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 2700,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "5978:10:12",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 2695,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "5967:9:12",
                                  "valueSize": 1
                                }
                              ],
                              "id": 2707,
                              "nodeType": "InlineAssembly",
                              "src": "5930:266:12"
                            },
                            {
                              "assignments": [
                                2709,
                                2711
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2709,
                                  "mutability": "mutable",
                                  "name": "status",
                                  "nameLocation": "6220:6:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2757,
                                  "src": "6215:11:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2708,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6215:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2711,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "6241:4:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2757,
                                  "src": "6228:17:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2710,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6228:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2729,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2720,
                                            "name": "strategyInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5189,
                                            "src": "6349:12:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                              "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                                            }
                                          },
                                          "id": 2723,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 2721,
                                              "name": "makerOrder",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2627,
                                              "src": "6362:10:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 2722,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6373:10:12",
                                            "memberName": "strategyId",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13575,
                                            "src": "6362:21:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6349:35:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                                            "typeString": "struct IStrategyManager.Strategy storage ref"
                                          }
                                        },
                                        "id": 2724,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6385:8:12",
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12553,
                                        "src": "6349:44:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "id": 2725,
                                        "name": "takerOrder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2624,
                                        "src": "6395:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                          "typeString": "struct OrderStructs.Taker calldata"
                                        }
                                      },
                                      {
                                        "id": 2726,
                                        "name": "makerOrder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2627,
                                        "src": "6407:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                          "typeString": "struct OrderStructs.Taker calldata"
                                        },
                                        {
                                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2718,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "6326:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2719,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6330:18:12",
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "src": "6326:22:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6326:92:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2712,
                                        "name": "strategyInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5189,
                                        "src": "6249:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                          "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                                        }
                                      },
                                      "id": 2715,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 2713,
                                          "name": "makerOrder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2627,
                                          "src": "6262:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                            "typeString": "struct OrderStructs.Maker calldata"
                                          }
                                        },
                                        "id": 2714,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6273:10:12",
                                        "memberName": "strategyId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13575,
                                        "src": "6262:21:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6249:35:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                                        "typeString": "struct IStrategyManager.Strategy storage ref"
                                      }
                                    },
                                    "id": 2716,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6285:14:12",
                                    "memberName": "implementation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12557,
                                    "src": "6249:50:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6300:4:12",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "6249:55:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6249:187:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6214:222:12"
                            },
                            {
                              "condition": {
                                "id": 2731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "6459:7:12",
                                "subExpression": {
                                  "id": 2730,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2709,
                                  "src": "6460:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2734,
                              "nodeType": "IfStatement",
                              "src": "6455:230:12",
                              "trueBody": {
                                "id": 2733,
                                "nodeType": "Block",
                                "src": "6468:217:12",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "6585:82:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "data",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6622:4:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6628:2:12",
                                                    "type": "",
                                                    "value": "32"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6618:3:12"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "6618:13:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "data",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6639:4:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6633:5:12"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "6633:11:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "6611:6:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6611:34:12"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6611:34:12"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 2711,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "6622:4:12",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 2711,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "6639:4:12",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 2732,
                                    "nodeType": "InlineAssembly",
                                    "src": "6576:91:12"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 2755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 2735,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2649,
                                      "src": "6704:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 2736,
                                      "name": "itemIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2633,
                                      "src": "6711:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 2737,
                                      "name": "amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2636,
                                      "src": "6720:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 2738,
                                      "name": "isNonceInvalidated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2646,
                                      "src": "6729:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2739,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "6703:45:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$",
                                    "typeString": "tuple(uint256,uint256[] memory,uint256[] memory,bool)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2742,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2711,
                                      "src": "6762:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 2744,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6769:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 2743,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6769:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 2746,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6778:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 2745,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6778:7:12",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2747,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6778:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                            "typeString": "type(uint256[] memory)"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 2749,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6789:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 2748,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6789:7:12",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2750,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6789:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                            "typeString": "type(uint256[] memory)"
                                          }
                                        },
                                        {
                                          "id": 2752,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6800:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          },
                                          "typeName": {
                                            "id": 2751,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6800:4:12",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "id": 2753,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6768:37:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                                        "typeString": "tuple(type(uint256),type(uint256[] memory),type(uint256[] memory),type(bool))"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                                        "typeString": "tuple(type(uint256),type(uint256[] memory),type(uint256[] memory),type(bool))"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2740,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "6751:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6755:6:12",
                                    "memberName": "decode",
                                    "nodeType": "MemberAccess",
                                    "src": "6751:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6751:55:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$",
                                    "typeString": "tuple(uint256,uint256[] memory,uint256[] memory,bool)"
                                  }
                                },
                                "src": "6703:103:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2756,
                              "nodeType": "ExpressionStatement",
                              "src": "6703:103:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2766,
                  "nodeType": "IfStatement",
                  "src": "4599:2321:12",
                  "trueBody": {
                    "id": 2686,
                    "nodeType": "Block",
                    "src": "4631:255:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2663,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "4697:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4708:7:12",
                              "memberName": "amounts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13596,
                              "src": "4697:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 2665,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "4717:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4728:7:12",
                              "memberName": "itemIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13593,
                              "src": "4717:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 2662,
                            "name": "_verifyItemIdsAndAmountsEqualLengthsAndValidAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3075,
                            "src": "4645:51:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (uint256[] calldata,uint256[] calldata) pure"
                            }
                          },
                          "id": 2667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4645:91:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2668,
                        "nodeType": "ExpressionStatement",
                        "src": "4645:91:12"
                      },
                      {
                        "expression": {
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2669,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2649,
                                "src": "4751:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2670,
                                "name": "itemIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2633,
                                "src": "4758:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 2671,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2636,
                                "src": "4767:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "id": 2672,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4750:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 2673,
                                  "name": "makerOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2627,
                                  "src": "4779:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                    "typeString": "struct OrderStructs.Maker calldata"
                                  }
                                },
                                "id": 2674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4790:5:12",
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13590,
                                "src": "4779:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2675,
                                  "name": "makerOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2627,
                                  "src": "4797:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                    "typeString": "struct OrderStructs.Maker calldata"
                                  }
                                },
                                "id": 2676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4808:7:12",
                                "memberName": "itemIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13593,
                                "src": "4797:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2677,
                                  "name": "makerOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2627,
                                  "src": "4817:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                    "typeString": "struct OrderStructs.Maker calldata"
                                  }
                                },
                                "id": 2678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4828:7:12",
                                "memberName": "amounts",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13596,
                                "src": "4817:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              }
                            ],
                            "id": 2679,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4778:58:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$",
                              "typeString": "tuple(uint256,uint256[] calldata,uint256[] calldata)"
                            }
                          },
                          "src": "4750:86:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2681,
                        "nodeType": "ExpressionStatement",
                        "src": "4750:86:12"
                      },
                      {
                        "expression": {
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2682,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "4850:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4871:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4850:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2685,
                        "nodeType": "ExpressionStatement",
                        "src": "4850:25:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 2767,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2640,
                            "src": "6985:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                              "typeString": "address[2] memory"
                            }
                          },
                          "id": 2769,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 2768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6996:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6985:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 2770,
                            "name": "feeAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "7000:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          },
                          "id": 2772,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7011:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7000:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2773,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6984:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2775,
                            "name": "makerOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2627,
                            "src": "7072:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7083:10:12",
                          "memberName": "collection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13580,
                          "src": "7072:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2777,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2649,
                          "src": "7107:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2778,
                          "name": "itemIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2633,
                          "src": "7126:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "id": 2774,
                        "name": "_getCreatorRecipientAndCalculateFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2952,
                        "src": "7017:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256[] memory) view returns (address,uint256)"
                        }
                      },
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7017:126:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "6984:159:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "6984:159:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$6096",
                      "typeString": "enum QuoteType"
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2782,
                        "name": "makerOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "7157:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7168:9:12",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13567,
                      "src": "7157:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2784,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6096,
                        "src": "7181:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$6096_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 2785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7191:3:12",
                      "memberName": "Bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6094,
                      "src": "7181:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "7157:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2817,
                    "nodeType": "Block",
                    "src": "7479:228:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2808,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "7547:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7558:10:12",
                              "memberName": "strategyId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13575,
                              "src": "7547:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2810,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "7586:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2811,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "7609:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7620:6:12",
                              "memberName": "signer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13584,
                              "src": "7609:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2813,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "7644:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            {
                              "id": 2814,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "7672:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            ],
                            "id": 2807,
                            "name": "_setTheRestOfFeeAmountsAndRecipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3040,
                            "src": "7493:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,address,uint256[3] memory,address[2] memory) view"
                            }
                          },
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7493:203:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2816,
                        "nodeType": "ExpressionStatement",
                        "src": "7493:203:12"
                      }
                    ]
                  },
                  "id": 2818,
                  "nodeType": "IfStatement",
                  "src": "7153:554:12",
                  "trueBody": {
                    "id": 2806,
                    "nodeType": "Block",
                    "src": "7196:277:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2788,
                                "name": "makerOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "7264:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7275:10:12",
                              "memberName": "strategyId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13575,
                              "src": "7264:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2790,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "7303:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2791,
                                    "name": "takerOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2624,
                                    "src": "7326:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "id": 2792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7337:9:12",
                                  "memberName": "recipient",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13601,
                                  "src": "7326:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7358:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7350:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2793,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7350:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7350:10:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7326:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "expression": {
                                  "id": 2799,
                                  "name": "takerOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2624,
                                  "src": "7372:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                    "typeString": "struct OrderStructs.Taker calldata"
                                  }
                                },
                                "id": 2800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7383:9:12",
                                "memberName": "recipient",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13601,
                                "src": "7372:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7326:66:12",
                              "trueExpression": {
                                "id": 2798,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2629,
                                "src": "7363:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2802,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "7410:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            {
                              "id": 2803,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "7438:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            ],
                            "id": 2787,
                            "name": "_setTheRestOfFeeAmountsAndRecipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3040,
                            "src": "7210:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,address,uint256[3] memory,address[2] memory) view"
                            }
                          },
                          "id": 2804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:252:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2805,
                        "nodeType": "ExpressionStatement",
                        "src": "7210:252:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2621,
              "nodeType": "StructuredDocumentation",
              "src": "3342:674:12",
              "text": " @notice This function is internal and is used to execute a transaction initiated by a taker order.\n @param takerOrder Taker order struct (taker specific parameters for the execution)\n @param makerOrder Maker order struct (maker specific parameter for the execution)\n @param sender The address that sent the transaction\n @return itemIds Array of item ids to be traded\n @return amounts Array of amounts for each item id\n @return recipients Array of recipient addresses\n @return feeAmounts Array of fee amounts\n @return isNonceInvalidated Whether the order's nonce will be invalidated after executing the order"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeStrategyForTakerOrder",
            "nameLocation": "4030:29:12",
            "parameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2624,
                  "mutability": "mutable",
                  "name": "takerOrder",
                  "nameLocation": "4097:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4069:38:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2622,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "4069:12:12",
                        "4082:5:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "4069:18:12"
                    },
                    "referencedDeclaration": 13604,
                    "src": "4069:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "makerOrder",
                  "nameLocation": "4145:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4117:38:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2626,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2625,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "4117:12:12",
                        "4130:5:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "4117:18:12"
                    },
                    "referencedDeclaration": 13599,
                    "src": "4117:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4173:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4165:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4165:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4059:126:12"
            },
            "returnParameters": {
              "id": 2647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2633,
                  "mutability": "mutable",
                  "name": "itemIds",
                  "nameLocation": "4250:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4233:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2631,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4233:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2632,
                    "nodeType": "ArrayTypeName",
                    "src": "4233:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2636,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4288:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4271:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2634,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4271:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2635,
                    "nodeType": "ArrayTypeName",
                    "src": "4271:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "4327:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4309:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2637,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4309:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2639,
                    "length": {
                      "hexValue": "32",
                      "id": 2638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4317:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4309:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "4369:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4351:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2641,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4351:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2643,
                    "length": {
                      "hexValue": "33",
                      "id": 2642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4359:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4351:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "isNonceInvalidated",
                  "nameLocation": "4398:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "4393:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4219:207:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2846,
            "nodeType": "FunctionDefinition",
            "src": "7881:333:12",
            "nodes": [],
            "body": {
              "id": 2845,
              "nodeType": "Block",
              "src": "7959:255:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2826,
                      "name": "newProtocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "7973:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8008:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8000:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8000:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8000:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7973:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2836,
                  "nodeType": "IfStatement",
                  "src": "7969:119:12",
                  "trueBody": {
                    "id": 2835,
                    "nodeType": "Block",
                    "src": "8012:76:12",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2832,
                            "name": "NewProtocolFeeRecipientCannotBeNullAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11276,
                            "src": "8033:42:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8033:44:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2834,
                        "nodeType": "RevertStatement",
                        "src": "8026:51:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2837,
                      "name": "protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2539,
                      "src": "8098:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2838,
                      "name": "newProtocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "8121:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8098:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2840,
                  "nodeType": "ExpressionStatement",
                  "src": "8098:46:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2842,
                        "name": "newProtocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2823,
                        "src": "8183:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2841,
                      "name": "NewProtocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11270,
                      "src": "8159:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8159:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2844,
                  "nodeType": "EmitStatement",
                  "src": "8154:53:12"
                }
              ]
            },
            "documentation": {
              "id": 2821,
              "nodeType": "StructuredDocumentation",
              "src": "7719:157:12",
              "text": " @notice This private function updates the protocol fee recipient.\n @param newProtocolFeeRecipient New protocol fee recipient address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateProtocolFeeRecipient",
            "nameLocation": "7890:27:12",
            "parameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "newProtocolFeeRecipient",
                  "nameLocation": "7926:23:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "7918:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7918:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7917:33:12"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7959:0:12"
            },
            "scope": 3051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2886,
            "nodeType": "FunctionDefinition",
            "src": "8598:486:12",
            "nodes": [],
            "body": {
              "id": 2885,
              "nodeType": "Block",
              "src": "8810:274:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2860,
                      "name": "protocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2858,
                      "src": "8820:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2861,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2849,
                              "src": "8841:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2862,
                                  "name": "strategyInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5189,
                                  "src": "8849:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                    "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                                  }
                                },
                                "id": 2864,
                                "indexExpression": {
                                  "id": 2863,
                                  "name": "strategyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2851,
                                  "src": "8862:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8849:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                                  "typeString": "struct IStrategyManager.Strategy storage ref"
                                }
                              },
                              "id": 2865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8874:21:12",
                              "memberName": "standardProtocolFeeBp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12547,
                              "src": "8849:46:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "8841:54:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2867,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8840:56:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 2868,
                        "name": "ONE_HUNDRED_PERCENT_IN_BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "8899:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8840:84:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8820:104:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2871,
                  "nodeType": "ExpressionStatement",
                  "src": "8820:104:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2872,
                        "name": "protocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2858,
                        "src": "8939:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2873,
                        "name": "creatorFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "8959:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8939:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2875,
                      "name": "minTotalFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2855,
                      "src": "8978:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8939:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2884,
                  "nodeType": "IfStatement",
                  "src": "8935:143:12",
                  "trueBody": {
                    "id": 2883,
                    "nodeType": "Block",
                    "src": "8997:81:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2877,
                            "name": "protocolFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2858,
                            "src": "9011:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2878,
                              "name": "minTotalFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "9031:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2879,
                              "name": "creatorFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2853,
                              "src": "9051:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9031:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9011:56:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2882,
                        "nodeType": "ExpressionStatement",
                        "src": "9011:56:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2847,
              "nodeType": "StructuredDocumentation",
              "src": "8220:373:12",
              "text": " @notice This function is internal and is used to calculate\n         the protocol fee amount for a set of fee amounts.\n @param price Transaction price\n @param strategyId Strategy id\n @param creatorFeeAmount Creator fee amount\n @param minTotalFeeAmount Min total fee amount\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateProtocolFeeAmount",
            "nameLocation": "8607:27:12",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2849,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "8652:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "8644:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8644:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "8675:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "8667:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8667:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "creatorFeeAmount",
                  "nameLocation": "8703:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "8695:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "minTotalFeeAmount",
                  "nameLocation": "8737:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "8729:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8729:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8634:126:12"
            },
            "returnParameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2858,
                  "mutability": "mutable",
                  "name": "protocolFeeAmount",
                  "nameLocation": "8791:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "8783:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8783:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8782:27:12"
            },
            "scope": 3051,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2952,
            "nodeType": "FunctionDefinition",
            "src": "9457:780:12",
            "nodes": [],
            "body": {
              "id": 2951,
              "nodeType": "Block",
              "src": "9664:573:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2903,
                          "name": "creatorFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2547,
                          "src": "9686:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                            "typeString": "contract ICreatorFeeManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                            "typeString": "contract ICreatorFeeManager"
                          }
                        ],
                        "id": 2902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9678:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2901,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9678:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9678:26:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9716:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9708:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9708:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9708:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9678:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2950,
                  "nodeType": "IfStatement",
                  "src": "9674:557:12",
                  "trueBody": {
                    "id": 2949,
                    "nodeType": "Block",
                    "src": "9720:511:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2910,
                                "name": "creator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2897,
                                "src": "9735:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2911,
                                "name": "creatorFeeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2899,
                                "src": "9744:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2912,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9734:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2915,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2889,
                                "src": "9801:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2916,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2891,
                                "src": "9813:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2917,
                                "name": "itemIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2894,
                                "src": "9820:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 2913,
                                "name": "creatorFeeManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2547,
                                "src": "9764:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICreatorFeeManager_$11182",
                                  "typeString": "contract ICreatorFeeManager"
                                }
                              },
                              "id": 2914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9782:18:12",
                              "memberName": "viewCreatorFeeInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11181,
                              "src": "9764:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_address_$_t_uint256_$",
                                "typeString": "function (address,uint256,uint256[] memory) view external returns (address,uint256)"
                              }
                            },
                            "id": 2918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9764:64:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "9734:94:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2920,
                        "nodeType": "ExpressionStatement",
                        "src": "9734:94:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2921,
                            "name": "creator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2897,
                            "src": "9847:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9866:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9858:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2922,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9858:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9858:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9847:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2932,
                                "name": "creatorFeeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2899,
                                "src": "10006:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2933,
                                "name": "ONE_HUNDRED_PERCENT_IN_BP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "10025:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10006:44:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2935,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2891,
                                    "src": "10054:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 2938,
                                        "name": "maxCreatorFeeBp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2543,
                                        "src": "10070:15:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "id": 2937,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10062:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2936,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10062:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10062:24:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10054:32:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2941,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10053:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10006:81:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2947,
                          "nodeType": "IfStatement",
                          "src": "10002:219:12",
                          "trueBody": {
                            "id": 2946,
                            "nodeType": "Block",
                            "src": "10089:132:12",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2943,
                                    "name": "CreatorFeeBpTooHigh",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11273,
                                    "src": "10185:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10185:21:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2945,
                                "nodeType": "RevertStatement",
                                "src": "10178:28:12"
                              }
                            ]
                          }
                        },
                        "id": 2948,
                        "nodeType": "IfStatement",
                        "src": "9843:378:12",
                        "trueBody": {
                          "id": 2931,
                          "nodeType": "Block",
                          "src": "9870:126:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2927,
                                  "name": "creatorFeeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2899,
                                  "src": "9961:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9980:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9961:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2930,
                              "nodeType": "ExpressionStatement",
                              "src": "9961:20:12"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2887,
              "nodeType": "StructuredDocumentation",
              "src": "9090:362:12",
              "text": " @notice This function is internal and is used to get the creator fee address\n         and calculate the creator fee amount.\n @param collection Collection address\n @param price Transaction price\n @param itemIds Array of item ids\n @return creator Creator recipient\n @return creatorFeeAmount Creator fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCreatorRecipientAndCalculateFeeAmount",
            "nameLocation": "9466:41:12",
            "parameters": {
              "id": 2895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2889,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "9525:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9517:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9517:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2891,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "9553:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9545:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9545:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2894,
                  "mutability": "mutable",
                  "name": "itemIds",
                  "nameLocation": "9585:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9568:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2892,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9568:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2893,
                    "nodeType": "ArrayTypeName",
                    "src": "9568:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9507:91:12"
            },
            "returnParameters": {
              "id": 2900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2897,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "9629:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9621:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9621:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2899,
                  "mutability": "mutable",
                  "name": "creatorFeeAmount",
                  "nameLocation": "9646:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9638:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9638:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9620:43:12"
            },
            "scope": 3051,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 3040,
            "nodeType": "FunctionDefinition",
            "src": "10379:1032:12",
            "nodes": [],
            "body": {
              "id": 3039,
              "nodeType": "Block",
              "src": "10601:810:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2971,
                      "mutability": "mutable",
                      "name": "minTotalFeeAmount",
                      "nameLocation": "10663:17:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3039,
                      "src": "10655:25:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10655:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2981,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2972,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2957,
                            "src": "10684:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2973,
                                "name": "strategyInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5189,
                                "src": "10692:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Strategy_$12558_storage_$",
                                  "typeString": "mapping(uint256 => struct IStrategyManager.Strategy storage ref)"
                                }
                              },
                              "id": 2975,
                              "indexExpression": {
                                "id": 2974,
                                "name": "strategyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "10705:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10692:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Strategy_$12558_storage",
                                "typeString": "struct IStrategyManager.Strategy storage ref"
                              }
                            },
                            "id": 2976,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10717:13:12",
                            "memberName": "minTotalFeeBp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12549,
                            "src": "10692:38:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "10684:46:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2978,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10683:48:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2979,
                      "name": "ONE_HUNDRED_PERCENT_IN_BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "10734:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10683:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10655:104:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2982,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "10774:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      "id": 2984,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10785:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10774:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10791:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10774:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3031,
                    "nodeType": "Block",
                    "src": "11041:325:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3004,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "11151:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            "id": 3006,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 3005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11162:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11151:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3008,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2957,
                                "src": "11195:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3009,
                                "name": "strategyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "11202:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3010,
                                  "name": "feeAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2963,
                                  "src": "11214:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                    "typeString": "uint256[3] memory"
                                  }
                                },
                                "id": 3012,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11225:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11214:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3013,
                                "name": "minTotalFeeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2971,
                                "src": "11229:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3007,
                              "name": "_calculateProtocolFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2886,
                              "src": "11167:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 3014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11167:80:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11151:96:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3016,
                        "nodeType": "ExpressionStatement",
                        "src": "11151:96:12"
                      },
                      {
                        "expression": {
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3017,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "11302:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            "id": 3019,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 3018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11313:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11302:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3020,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2957,
                                "src": "11318:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 3021,
                                  "name": "feeAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2963,
                                  "src": "11326:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                    "typeString": "uint256[3] memory"
                                  }
                                },
                                "id": 3023,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11337:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11326:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11318:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 3025,
                                "name": "feeAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2963,
                                "src": "11342:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                  "typeString": "uint256[3] memory"
                                }
                              },
                              "id": 3027,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 3026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11353:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11342:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11318:37:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11302:53:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3030,
                        "nodeType": "ExpressionStatement",
                        "src": "11302:53:12"
                      }
                    ]
                  },
                  "id": 3032,
                  "nodeType": "IfStatement",
                  "src": "10770:596:12",
                  "trueBody": {
                    "id": 3003,
                    "nodeType": "Block",
                    "src": "10794:241:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2987,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "10899:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            "id": 2989,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 2988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10910:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10899:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2990,
                            "name": "minTotalFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2971,
                            "src": "10915:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10899:33:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2992,
                        "nodeType": "ExpressionStatement",
                        "src": "10899:33:12"
                      },
                      {
                        "expression": {
                          "id": 3001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2993,
                              "name": "feeAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "10987:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            "id": 2995,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10998:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10987:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2996,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2957,
                              "src": "11003:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 2997,
                                "name": "feeAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2963,
                                "src": "11011:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                  "typeString": "uint256[3] memory"
                                }
                              },
                              "id": 2999,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 2998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11022:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11011:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11003:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10987:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3002,
                        "nodeType": "ExpressionStatement",
                        "src": "10987:37:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3033,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2967,
                        "src": "11376:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      "id": 3035,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11387:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11376:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3036,
                      "name": "askRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2959,
                      "src": "11392:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11376:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3038,
                  "nodeType": "ExpressionStatement",
                  "src": "11376:28:12"
                }
              ]
            },
            "documentation": {
              "id": 2953,
              "nodeType": "StructuredDocumentation",
              "src": "10243:131:12",
              "text": " @dev This function does not need to return feeAmounts and recipients as they are modified\n      in memory."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTheRestOfFeeAmountsAndRecipients",
            "nameLocation": "10388:36:12",
            "parameters": {
              "id": 2968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "10442:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "10434:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10434:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2957,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "10470:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "10462:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10462:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2959,
                  "mutability": "mutable",
                  "name": "askRecipient",
                  "nameLocation": "10493:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "10485:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10485:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "10533:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "10515:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2960,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10515:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2962,
                    "length": {
                      "hexValue": "33",
                      "id": 2961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10523:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10515:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2967,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "10571:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "10553:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2964,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10553:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2966,
                    "length": {
                      "hexValue": "32",
                      "id": 2965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10561:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10553:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10424:163:12"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10601:0:12"
            },
            "scope": 3051,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 3050,
            "nodeType": "FunctionDefinition",
            "src": "11660:457:12",
            "nodes": [],
            "body": {
              "id": 3049,
              "nodeType": "Block",
              "src": "11748:369:12",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11869:242:12",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11943:158:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11968:4:12",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "name": "OutsideOfTimeRange_error_selector",
                                    "nodeType": "YulIdentifier",
                                    "src": "11974:33:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11961:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11961:47:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11961:47:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Error_selector_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "12032:21:12"
                                  },
                                  {
                                    "name": "OutsideOfTimeRange_error_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12055:31:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12025:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12025:62:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12025:62:12"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "startTime",
                                  "nodeType": "YulIdentifier",
                                  "src": "11892:9:12"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "timestamp",
                                    "nodeType": "YulIdentifier",
                                    "src": "11903:9:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11903:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "11889:2:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11889:26:12"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "endTime",
                                  "nodeType": "YulIdentifier",
                                  "src": "11920:7:12"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "timestamp",
                                    "nodeType": "YulIdentifier",
                                    "src": "11929:9:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11929:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "11917:2:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11917:24:12"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "11886:2:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11886:56:12"
                        },
                        "nodeType": "YulIf",
                        "src": "11883:218:12"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1136,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12032:21:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12055:31:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1124,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11974:33:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3045,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11920:7:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3043,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11892:9:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 3048,
                  "nodeType": "InlineAssembly",
                  "src": "11860:251:12"
                }
              ]
            },
            "documentation": {
              "id": 3041,
              "nodeType": "StructuredDocumentation",
              "src": "11417:238:12",
              "text": " @notice This function is internal and is used to verify the validity of an order\n         in the context of the current block timestamps.\n @param startTime Start timestamp\n @param endTime End timestamp"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrderTimestampValidity",
            "nameLocation": "11669:29:12",
            "parameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3043,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "11707:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3050,
                  "src": "11699:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11699:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3045,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "11726:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3050,
                  "src": "11718:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11718:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11698:36:12"
            },
            "returnParameters": {
              "id": 3047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11748:0:12"
            },
            "scope": 3051,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2529,
              "name": "InheritedStrategy",
              "nameLocations": [
                "1287:17:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3076,
              "src": "1287:17:12"
            },
            "id": 2530,
            "nodeType": "InheritanceSpecifier",
            "src": "1287:17:12"
          },
          {
            "baseName": {
              "id": 2531,
              "name": "NonceManager",
              "nameLocations": [
                "1306:12:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3288,
              "src": "1306:12:12"
            },
            "id": 2532,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:12:12"
          },
          {
            "baseName": {
              "id": 2533,
              "name": "StrategyManager",
              "nameLocations": [
                "1320:15:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5384,
              "src": "1320:15:12"
            },
            "id": 2534,
            "nodeType": "InheritanceSpecifier",
            "src": "1320:15:12"
          },
          {
            "baseName": {
              "id": 2535,
              "name": "IExecutionManager",
              "nameLocations": [
                "1337:17:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11288,
              "src": "1337:17:12"
            },
            "id": 2536,
            "nodeType": "InheritanceSpecifier",
            "src": "1337:17:12"
          }
        ],
        "canonicalName": "ExecutionManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2528,
          "nodeType": "StructuredDocumentation",
          "src": "858:399:12",
          "text": " @title ExecutionManager\n @notice This contract handles the execution and resolution of transactions. A transaction is executed on-chain\n         when an off-chain maker order is matched by on-chain taker order of a different kind.\n         For instance, a taker ask is executed against a maker bid (or a taker bid against a maker ask).\n @author LooksRare protocol team (👀,💎)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3051,
          11288,
          5384,
          1925,
          1425,
          75780,
          76250,
          11149,
          11193,
          12599,
          3288,
          11545,
          3076
        ],
        "name": "ExecutionManager",
        "nameLocation": "1267:16:12",
        "scope": 3052,
        "usedErrors": [
          6170,
          11145,
          11148,
          11273,
          11276,
          11279,
          11282,
          11287,
          12589,
          12592,
          12595,
          12598,
          76216,
          76219,
          76222,
          76225,
          76228,
          76231
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 12
}