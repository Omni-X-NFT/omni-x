{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maximumAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_omniXToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "domainVersion",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_transferManagerERC721",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManagerERC1155",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mainStrategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropRewardsClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "NewEndTimestamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAIN_STRATEGY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXIMUM_AMOUNT_TO_CLAIM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_MANAGER_ERC1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_MANAGER_ERC721",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "canClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderTypes.MakerOrder",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isERC721",
          "type": "bool"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMerkleRootSet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "omniXToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newEndTimestamp",
          "type": "uint256"
        }
      ],
      "name": "updateEndTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6102006040523480156200001257600080fd5b50604051620021fd380380620021fd83398101604081905262000035916200024e565b855160208088019190912086518783012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526000805460ff1916905560018055620000dd336200011a565b6004989098556101e0969096526001600160a01b03948516610140529084166101805283166101a052505090811661016052166101c0526200032a565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200018457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b157600080fd5b81516001600160401b0380821115620001ce57620001ce62000189565b604051601f8301601f19908116603f01168101908282118183101715620001f957620001f962000189565b816040528381526020925086838588010111156200021657600080fd5b600091505b838210156200023a57858201830151818301840152908201906200021b565b600093810190920192909252949350505050565b60008060008060008060008060006101208a8c0312156200026e57600080fd5b8951985060208a015197506200028760408b016200016c565b60608b01519097506001600160401b0380821115620002a557600080fd5b620002b38d838e016200019f565b975060808c0151915080821115620002ca57600080fd5b50620002d98c828d016200019f565b955050620002ea60a08b016200016c565b9350620002fa60c08b016200016c565b92506200030a60e08b016200016c565b91506200031b6101008b016200016c565b90509295985092959850929598565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e051611e09620003f4600039600081816102c401526106740152600081816102630152610f0401526000818161016701526109d701526000818161028a015261091401526000818161020f0152610f510152600081816102eb015281816103d1015281816104530152610b4e015260006113b901526000611408015260006113e30152600061133c01526000611366015260006113900152611e096000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063bd69ba501161007c578063bd69ba50146102bf578063bf5f3aef146102e6578063c6afd5bb1461030d578063dc38bdb514610315578063e96ad3ad14610328578063f2fde38b1461033057600080fd5b80638da5cb5b14610244578063a85adeab14610255578063ad5c46481461025e578063b1357ddd14610285578063b734da09146102ac57600080fd5b80636e1613fb116100ff5780636e1613fb146101cc578063715018a6146101df57806373b2e80e146101e75780637a6d39c61461020a5780637cb647591461023157600080fd5b806315618acd1461013c5780632eb4a7ab1461014657806338928956146101625780635c975abb146101a15780635ff10e39146101b8575b600080fd5b610144610343565b005b61014f60035481565b6040519081526020015b60405180910390f35b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610159565b60005460ff165b6040519015158152602001610159565b6002546101a890600160a01b900460ff1681565b6101446101da3660046118a8565b6104b1565b610144610549565b6101a86101f53660046118dd565b60056020526000908152604090205460ff1681565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b61014461023f3660046118a8565b61055d565b6002546001600160a01b0316610189565b61014f60045481565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101446102ba366004611956565b610609565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b610144610bc5565b6101a86103233660046119e4565b610bdd565b610144610c7e565b61014461033e3660046118dd565b610c96565b61034b610d0f565b60045461035b9062015180611a54565b42116103b95760405162461bcd60e51b815260206004820152602260248201527f4f776e65723a20546f6f206561726c7920746f2072656d6f7665207265776172604482015261647360f01b60648201526084015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190611a67565b905061047a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610d69565b6040518181527f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f906020015b60405180910390a150565b6104b9610d0f565b806104c74262278d00611a54565b116105145760405162461bcd60e51b815260206004820152601c60248201527f4f776e65723a204e65772074696d657374616d7020746f6f206661720000000060448201526064016103b0565b60048190556040518181527fac7d83845fcc6871010ded05a8cb9bddee5cc49fdb8f2d24b96141d401b6bfed906020016104a6565b610551610d0f565b61055b6000610dc0565b565b610565610d0f565b600254600160a01b900460ff16156105bf5760405162461bcd60e51b815260206004820152601e60248201527f4f776e65723a204d65726b6c6520726f6f7420616c726561647920736574000060448201526064016103b0565b6002805460ff60a01b1916600160a01b17905560038190556040517f42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b906104a69083815260200190565b610611610e12565b610619610e58565b600254600160a01b900460ff166106725760405162461bcd60e51b815260206004820152601c60248201527f41697264726f703a204d65726b6c6520726f6f74206e6f74207365740000000060448201526064016103b0565b7f00000000000000000000000000000000000000000000000000000000000000008511156106e25760405162461bcd60e51b815260206004820152601860248201527f41697264726f703a20416d6f756e7420746f6f2068696768000000000000000060448201526064016103b0565b6004544211156107345760405162461bcd60e51b815260206004820152601a60248201527f41697264726f703a20546f6f206c61746520746f20636c61696d00000000000060448201526064016103b0565b3360009081526005602052604090205460ff16156107945760405162461bcd60e51b815260206004820152601860248201527f41697264726f703a20416c726561647920636c61696d6564000000000000000060448201526064016103b0565b61079d82610eb1565b6107f95760405162461bcd60e51b815260206004820152602760248201527f41697264726f703a204f72646572206e6f7420656c696769626c6520666f7220604482015266061697264726f760cc1b60648201526084016103b0565b600061080c61080784611b4d565b610f92565b90506000610819826110a6565b905061082b60408501602086016118dd565b6001600160a01b031661088b610845610180870187611c56565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061088592508691506110f49050565b90611147565b6001600160a01b0316146108e15760405162461bcd60e51b815260206004820152601a60248201527f41697264726f703a205369676e617475726520696e76616c696400000000000060448201526064016103b0565b82156109aa576108f760608501604086016118dd565b60405163e985e9c560e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063e985e9c590604401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190611c9d565b6109a55760405162461bcd60e51b81526004016103b090611cba565b610a68565b6109ba60608501604086016118dd565b60405163e985e9c560e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063e985e9c590604401602060405180830381865afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190611c9d565b610a685760405162461bcd60e51b81526004016103b090611cba565b6040516bffffffffffffffffffffffff193360601b16602082015260348101889052600090605401604051602081830303815290604052805190602001209050610ae987878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915084905061116b565b610b2e5760405162461bcd60e51b815260206004820152601660248201527520b4b9323937b81d1024b73b30b634b210383937b7b360511b60448201526064016103b0565b336000818152600560205260409020805460ff19166001179055610b7d907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908a610d69565b60405188815233907f19552fadade1a47d8fa44f6487230cfff67275de6e68fbfba65171532768fd7d9060200160405180910390a2505050610bbe60018055565b5050505050565b610bcd610d0f565b610bd5610e12565b61055b611181565b60006004544211610c72576040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610c6a84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915084905061116b565b915050610c76565b5060005b949350505050565b610c86610d0f565b610c8e6111db565b61055b611224565b610c9e610d0f565b6001600160a01b038116610d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b610d0c81610dc0565b50565b6002546001600160a01b0316331461055b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b0565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610dbb90849061125d565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005460ff161561055b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103b0565b600260015403610eaa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103b0565b6002600155565b6000610ec06020830183611cfe565b8015610ee3575033610ed860408401602085016118dd565b6001600160a01b0316145b8015610ef3575060008260a00135115b8015610f4057506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f35610100840160e085016118dd565b6001600160a01b0316145b8015610f8c57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f8160e0840160c085016118dd565b6001600160a01b0316145b92915050565b6000807f5ecbfd19307447ee7e4f336494603909c6ececa499f9a16b338a0639daa8ea2f60001b836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e6101600151805190602001206040516020016110879d9c9b9a999897969594939291909c8d529a151560208d01526001600160a01b03998a1660408d015297891660608c015260808b019690965260a08a019490945260c0890192909252851660e08801529093166101008601526101208501929092526101408401919091526101608301526101808201526101a00190565b60408051601f1981840301815291905280516020909101209392505050565b6000610f8c6110b361132f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60008060006111568585611456565b915091506111638161149b565b509392505050565b60008261117885846115e5565b14949350505050565b611189610e12565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111be3390565b6040516001600160a01b03909116815260200160405180910390a1565b60005460ff1661055b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103b0565b61122c6111db565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336111be565b60006112b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661162a9092919063ffffffff16565b805190915015610dbb57808060200190518101906112d09190611c9d565b610dbb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b0565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561138857507f000000000000000000000000000000000000000000000000000000000000000046145b156113b257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160410361148c5760208301516040840151606085015160001a61148087828585611639565b94509450505050611494565b506000905060025b9250929050565b60008160048111156114af576114af611d1b565b036114b75750565b60018160048111156114cb576114cb611d1b565b036115185760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103b0565b600281600481111561152c5761152c611d1b565b036115795760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103b0565b600381600481111561158d5761158d611d1b565b03610d0c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103b0565b600081815b8451811015611163576116168286838151811061160957611609611d31565b60200260200101516116fd565b91508061162281611d47565b9150506115ea565b6060610c76848460008561172f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561167057506000905060036116f4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116c4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116ed576000600192509250506116f4565b9150600090505b94509492505050565b6000818310611719576000828152602084905260409020611728565b60008381526020839052604090205b9392505050565b6060824710156117905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b0565b600080866001600160a01b031685876040516117ac9190611d84565b60006040518083038185875af1925050503d80600081146117e9576040519150601f19603f3d011682016040523d82523d6000602084013e6117ee565b606091505b50915091506117ff8783838761180a565b979650505050505050565b60608315611879578251600003611872576001600160a01b0385163b6118725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b0565b5081610c76565b610c76838381511561188e5781518083602001fd5b8060405162461bcd60e51b81526004016103b09190611da0565b6000602082840312156118ba57600080fd5b5035919050565b80356001600160a01b03811681146118d857600080fd5b919050565b6000602082840312156118ef57600080fd5b611728826118c1565b60008083601f84011261190a57600080fd5b50813567ffffffffffffffff81111561192257600080fd5b6020830191508360208260051b850101111561149457600080fd5b8015158114610d0c57600080fd5b80356118d88161193d565b60008060008060006080868803121561196e57600080fd5b85359450602086013567ffffffffffffffff8082111561198d57600080fd5b61199989838a016118f8565b909650945060408801359150808211156119b257600080fd5b5086016101a081890312156119c657600080fd5b915060608601356119d68161193d565b809150509295509295909350565b600080600080606085870312156119fa57600080fd5b611a03856118c1565b935060208501359250604085013567ffffffffffffffff811115611a2657600080fd5b611a32878288016118f8565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f8c57610f8c611a3e565b600060208284031215611a7957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715611aba57611aba611a80565b60405290565b600082601f830112611ad157600080fd5b813567ffffffffffffffff80821115611aec57611aec611a80565b604051601f8301601f19908116603f01168101908282118183101715611b1457611b14611a80565b81604052838152866020858801011115611b2d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101a08236031215611b6057600080fd5b611b68611a96565b611b718361194b565b8152611b7f602084016118c1565b6020820152611b90604084016118c1565b6040820152606083013560608201526080830135608082015260a083013560a0820152611bbf60c084016118c1565b60c0820152611bd060e084016118c1565b60e08201526101008381013590820152610120808401359082015261014080840135908201526101608084013567ffffffffffffffff80821115611c1357600080fd5b611c1f36838801611ac0565b83850152610180925082860135915080821115611c3b57600080fd5b50611c4836828701611ac0565b918301919091525092915050565b6000808335601e19843603018112611c6d57600080fd5b83018035915067ffffffffffffffff821115611c8857600080fd5b60200191503681900382131561149457600080fd5b600060208284031215611caf57600080fd5b81516117288161193d565b60208082526024908201527f41697264726f703a20436f6c6c656374696f6e206d75737420626520617070726040820152631bdd995960e21b606082015260800190565b600060208284031215611d1057600080fd5b81356117288161193d565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611d5957611d59611a3e565b5060010190565b60005b83811015611d7b578181015183820152602001611d63565b50506000910152565b60008251611d96818460208701611d60565b9190910192915050565b6020815260008251806020840152611dbf816040850160208701611d60565b601f01601f1916919091016040019291505056fea264697066735822122040ef7bbdf2aa131554dd13a3364a398ea51d0c767141ec6a9a823d811d60727b64736f6c63430008110033",
    "sourceMap": "864:6824:58:-:0;;;2224:680;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2550:22:171;;;;;;;;;;2606:25;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;;;-1:-1:-1;3642:73:171;;2660:117;3642:73;;;2552:25:189;;;2593:18;;;2586:34;;;;-1:-1:-1;2636:18:189;;2629:34;;;;2679:18;;;;2672:34;;;;3709:4:171;2722:19:189;;;2715:61;;;3642:73:171;;;;;;;;;;2524:19:189;;;;3642:73:171;;;3632:84;;;;;;;2905:85;;3000:28;;;;3038:21;;-1:-1:-1;996:15:144;;-1:-1:-1;;996:15:144;;;-1:-1:-1;1821:22:145;;936:32:142;719:10:167;936:18:142;:32::i;:::-;2588:12:58::1;:28:::0;;;;2626:47:::1;::::0;;;;-1:-1:-1;;;;;2684:32:58;;::::1;;::::0;2727:48;;::::1;;::::0;2785:50;::::1;;::::0;-1:-1:-1;;2846:29:58;;::::1;;::::0;2885:12:::1;;::::0;864:6824;;2433:187:142;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:189:-;93:13;;-1:-1:-1;;;;;135:31:189;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:840;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:189;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:189;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1136:1;1114:15;;;1110:24;;;1103:35;;;;1118:6;328:840;-1:-1:-1;;;;328:840:189:o;1173:1115::-;1335:6;1343;1351;1359;1367;1375;1383;1391;1399;1452:3;1440:9;1431:7;1427:23;1423:33;1420:53;;;1469:1;1466;1459:12;1420:53;1498:9;1492:16;1482:26;;1548:2;1537:9;1533:18;1527:25;1517:35;;1571:49;1616:2;1605:9;1601:18;1571:49;:::i;:::-;1664:2;1649:18;;1643:25;1561:59;;-1:-1:-1;;;;;;1717:14:189;;;1714:34;;;1744:1;1741;1734:12;1714:34;1767:61;1820:7;1811:6;1800:9;1796:22;1767:61;:::i;:::-;1757:71;;1874:3;1863:9;1859:19;1853:26;1837:42;;1904:2;1894:8;1891:16;1888:36;;;1920:1;1917;1910:12;1888:36;;1943:63;1998:7;1987:8;1976:9;1972:24;1943:63;:::i;:::-;1933:73;;;2025:50;2070:3;2059:9;2055:19;2025:50;:::i;:::-;2015:60;;2094:50;2139:3;2128:9;2124:19;2094:50;:::i;:::-;2084:60;;2163:50;2208:3;2197:9;2193:19;2163:50;:::i;:::-;2153:60;;2232:50;2277:3;2266:9;2262:19;2232:50;:::i;:::-;2222:60;;1173:1115;;;;;;;;;;;:::o;2293:489::-;864:6824:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063bd69ba501161007c578063bd69ba50146102bf578063bf5f3aef146102e6578063c6afd5bb1461030d578063dc38bdb514610315578063e96ad3ad14610328578063f2fde38b1461033057600080fd5b80638da5cb5b14610244578063a85adeab14610255578063ad5c46481461025e578063b1357ddd14610285578063b734da09146102ac57600080fd5b80636e1613fb116100ff5780636e1613fb146101cc578063715018a6146101df57806373b2e80e146101e75780637a6d39c61461020a5780637cb647591461023157600080fd5b806315618acd1461013c5780632eb4a7ab1461014657806338928956146101625780635c975abb146101a15780635ff10e39146101b8575b600080fd5b610144610343565b005b61014f60035481565b6040519081526020015b60405180910390f35b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610159565b60005460ff165b6040519015158152602001610159565b6002546101a890600160a01b900460ff1681565b6101446101da3660046118a8565b6104b1565b610144610549565b6101a86101f53660046118dd565b60056020526000908152604090205460ff1681565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b61014461023f3660046118a8565b61055d565b6002546001600160a01b0316610189565b61014f60045481565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101446102ba366004611956565b610609565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b610144610bc5565b6101a86103233660046119e4565b610bdd565b610144610c7e565b61014461033e3660046118dd565b610c96565b61034b610d0f565b60045461035b9062015180611a54565b42116103b95760405162461bcd60e51b815260206004820152602260248201527f4f776e65723a20546f6f206561726c7920746f2072656d6f7665207265776172604482015261647360f01b60648201526084015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190611a67565b905061047a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610d69565b6040518181527f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f906020015b60405180910390a150565b6104b9610d0f565b806104c74262278d00611a54565b116105145760405162461bcd60e51b815260206004820152601c60248201527f4f776e65723a204e65772074696d657374616d7020746f6f206661720000000060448201526064016103b0565b60048190556040518181527fac7d83845fcc6871010ded05a8cb9bddee5cc49fdb8f2d24b96141d401b6bfed906020016104a6565b610551610d0f565b61055b6000610dc0565b565b610565610d0f565b600254600160a01b900460ff16156105bf5760405162461bcd60e51b815260206004820152601e60248201527f4f776e65723a204d65726b6c6520726f6f7420616c726561647920736574000060448201526064016103b0565b6002805460ff60a01b1916600160a01b17905560038190556040517f42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b906104a69083815260200190565b610611610e12565b610619610e58565b600254600160a01b900460ff166106725760405162461bcd60e51b815260206004820152601c60248201527f41697264726f703a204d65726b6c6520726f6f74206e6f74207365740000000060448201526064016103b0565b7f00000000000000000000000000000000000000000000000000000000000000008511156106e25760405162461bcd60e51b815260206004820152601860248201527f41697264726f703a20416d6f756e7420746f6f2068696768000000000000000060448201526064016103b0565b6004544211156107345760405162461bcd60e51b815260206004820152601a60248201527f41697264726f703a20546f6f206c61746520746f20636c61696d00000000000060448201526064016103b0565b3360009081526005602052604090205460ff16156107945760405162461bcd60e51b815260206004820152601860248201527f41697264726f703a20416c726561647920636c61696d6564000000000000000060448201526064016103b0565b61079d82610eb1565b6107f95760405162461bcd60e51b815260206004820152602760248201527f41697264726f703a204f72646572206e6f7420656c696769626c6520666f7220604482015266061697264726f760cc1b60648201526084016103b0565b600061080c61080784611b4d565b610f92565b90506000610819826110a6565b905061082b60408501602086016118dd565b6001600160a01b031661088b610845610180870187611c56565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061088592508691506110f49050565b90611147565b6001600160a01b0316146108e15760405162461bcd60e51b815260206004820152601a60248201527f41697264726f703a205369676e617475726520696e76616c696400000000000060448201526064016103b0565b82156109aa576108f760608501604086016118dd565b60405163e985e9c560e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063e985e9c590604401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190611c9d565b6109a55760405162461bcd60e51b81526004016103b090611cba565b610a68565b6109ba60608501604086016118dd565b60405163e985e9c560e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063e985e9c590604401602060405180830381865afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190611c9d565b610a685760405162461bcd60e51b81526004016103b090611cba565b6040516bffffffffffffffffffffffff193360601b16602082015260348101889052600090605401604051602081830303815290604052805190602001209050610ae987878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915084905061116b565b610b2e5760405162461bcd60e51b815260206004820152601660248201527520b4b9323937b81d1024b73b30b634b210383937b7b360511b60448201526064016103b0565b336000818152600560205260409020805460ff19166001179055610b7d907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908a610d69565b60405188815233907f19552fadade1a47d8fa44f6487230cfff67275de6e68fbfba65171532768fd7d9060200160405180910390a2505050610bbe60018055565b5050505050565b610bcd610d0f565b610bd5610e12565b61055b611181565b60006004544211610c72576040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610c6a84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915084905061116b565b915050610c76565b5060005b949350505050565b610c86610d0f565b610c8e6111db565b61055b611224565b610c9e610d0f565b6001600160a01b038116610d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b610d0c81610dc0565b50565b6002546001600160a01b0316331461055b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b0565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610dbb90849061125d565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005460ff161561055b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103b0565b600260015403610eaa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103b0565b6002600155565b6000610ec06020830183611cfe565b8015610ee3575033610ed860408401602085016118dd565b6001600160a01b0316145b8015610ef3575060008260a00135115b8015610f4057506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f35610100840160e085016118dd565b6001600160a01b0316145b8015610f8c57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f8160e0840160c085016118dd565b6001600160a01b0316145b92915050565b6000807f5ecbfd19307447ee7e4f336494603909c6ececa499f9a16b338a0639daa8ea2f60001b836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e6101600151805190602001206040516020016110879d9c9b9a999897969594939291909c8d529a151560208d01526001600160a01b03998a1660408d015297891660608c015260808b019690965260a08a019490945260c0890192909252851660e08801529093166101008601526101208501929092526101408401919091526101608301526101808201526101a00190565b60408051601f1981840301815291905280516020909101209392505050565b6000610f8c6110b361132f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60008060006111568585611456565b915091506111638161149b565b509392505050565b60008261117885846115e5565b14949350505050565b611189610e12565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111be3390565b6040516001600160a01b03909116815260200160405180910390a1565b60005460ff1661055b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103b0565b61122c6111db565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336111be565b60006112b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661162a9092919063ffffffff16565b805190915015610dbb57808060200190518101906112d09190611c9d565b610dbb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b0565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561138857507f000000000000000000000000000000000000000000000000000000000000000046145b156113b257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160410361148c5760208301516040840151606085015160001a61148087828585611639565b94509450505050611494565b506000905060025b9250929050565b60008160048111156114af576114af611d1b565b036114b75750565b60018160048111156114cb576114cb611d1b565b036115185760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103b0565b600281600481111561152c5761152c611d1b565b036115795760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103b0565b600381600481111561158d5761158d611d1b565b03610d0c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103b0565b600081815b8451811015611163576116168286838151811061160957611609611d31565b60200260200101516116fd565b91508061162281611d47565b9150506115ea565b6060610c76848460008561172f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561167057506000905060036116f4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116c4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116ed576000600192509250506116f4565b9150600090505b94509492505050565b6000818310611719576000828152602084905260409020611728565b60008381526020839052604090205b9392505050565b6060824710156117905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b0565b600080866001600160a01b031685876040516117ac9190611d84565b60006040518083038185875af1925050503d80600081146117e9576040519150601f19603f3d011682016040523d82523d6000602084013e6117ee565b606091505b50915091506117ff8783838761180a565b979650505050505050565b60608315611879578251600003611872576001600160a01b0385163b6118725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b0565b5081610c76565b610c76838381511561188e5781518083602001fd5b8060405162461bcd60e51b81526004016103b09190611da0565b6000602082840312156118ba57600080fd5b5035919050565b80356001600160a01b03811681146118d857600080fd5b919050565b6000602082840312156118ef57600080fd5b611728826118c1565b60008083601f84011261190a57600080fd5b50813567ffffffffffffffff81111561192257600080fd5b6020830191508360208260051b850101111561149457600080fd5b8015158114610d0c57600080fd5b80356118d88161193d565b60008060008060006080868803121561196e57600080fd5b85359450602086013567ffffffffffffffff8082111561198d57600080fd5b61199989838a016118f8565b909650945060408801359150808211156119b257600080fd5b5086016101a081890312156119c657600080fd5b915060608601356119d68161193d565b809150509295509295909350565b600080600080606085870312156119fa57600080fd5b611a03856118c1565b935060208501359250604085013567ffffffffffffffff811115611a2657600080fd5b611a32878288016118f8565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f8c57610f8c611a3e565b600060208284031215611a7957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715611aba57611aba611a80565b60405290565b600082601f830112611ad157600080fd5b813567ffffffffffffffff80821115611aec57611aec611a80565b604051601f8301601f19908116603f01168101908282118183101715611b1457611b14611a80565b81604052838152866020858801011115611b2d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101a08236031215611b6057600080fd5b611b68611a96565b611b718361194b565b8152611b7f602084016118c1565b6020820152611b90604084016118c1565b6040820152606083013560608201526080830135608082015260a083013560a0820152611bbf60c084016118c1565b60c0820152611bd060e084016118c1565b60e08201526101008381013590820152610120808401359082015261014080840135908201526101608084013567ffffffffffffffff80821115611c1357600080fd5b611c1f36838801611ac0565b83850152610180925082860135915080821115611c3b57600080fd5b50611c4836828701611ac0565b918301919091525092915050565b6000808335601e19843603018112611c6d57600080fd5b83018035915067ffffffffffffffff821115611c8857600080fd5b60200191503681900382131561149457600080fd5b600060208284031215611caf57600080fd5b81516117288161193d565b60208082526024908201527f41697264726f703a20436f6c6c656374696f6e206d75737420626520617070726040820152631bdd995960e21b606082015260800190565b600060208284031215611d1057600080fd5b81356117288161193d565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611d5957611d59611a3e565b5060010190565b60005b83811015611d7b578181015183820152602001611d63565b50506000910152565b60008251611d96818460208701611d60565b9190910192915050565b6020815260008251806020840152611dbf816040850160208701611d60565b601f01601f1916919091016040019291505056fea264697066735822122040ef7bbdf2aa131554dd13a3364a398ea51d0c767141ec6a9a823d811d60727b64736f6c63430008110033",
    "sourceMap": "864:6824:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6867:343;;;:::i;:::-;;1368:25;;;;;;;;;160::189;;;148:2;133:18;1368:25:58;;;;;;;;1188:49;;;;;;;;-1:-1:-1;;;;;360:32:189;;;342:51;;330:2;315:18;1188:49:58;196:203:189;1615:84:144;1662:4;1685:7;;;1615:84;;;569:14:189;;562:22;544:41;;532:2;517:18;1615:84:144;404:187:189;1334:27:58;;;;;-1:-1:-1;;;1334:27:58;;;;;;6539:261;;;;;;:::i;:::-;;:::i;1831:101:142:-;;;:::i;1434:42:58:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1090:38;;;;;6015:248;;;;;;:::i;:::-;;:::i;1201:85:142:-;1273:6;;-1:-1:-1;;;;;1273:6:142;1201:85;;1400:27:58;;;;;;1243:29;;;;;1134:48;;;;;3209:1887;;;;;;:::i;:::-;;:::i;1279:48::-;;;;;1049:34;;;;;5830:82;;;:::i;5333:446::-;;;;;;:::i;:::-;;:::i;6316:83::-;;;:::i;2081:198:142:-;;;;;;:::i;:::-;;:::i;6867:343:58:-;1094:13:142;:11;:13::i;:::-;6955:12:58::1;::::0;:21:::1;::::0;6970:6:::1;6955:21;:::i;:::-;6936:15;:41;6928:88;;;::::0;-1:-1:-1;;;6928:88:58;;4346:2:189;6928:88:58::1;::::0;::::1;4328:21:189::0;4385:2;4365:18;;;4358:30;4424:34;4404:18;;;4397:62;-1:-1:-1;;;4475:18:189;;;4468:32;4517:19;;6928:88:58::1;;;;;;;;;7054:35;::::0;-1:-1:-1;;;7054:35:58;;7083:4:::1;7054:35;::::0;::::1;342:51:189::0;7026:25:58::1;::::0;7054:10:::1;-1:-1:-1::0;;;;;7054:20:58::1;::::0;::::1;::::0;315:18:189;;7054:35:58::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7026:63:::0;-1:-1:-1;7099:54:58::1;-1:-1:-1::0;;;;;7099:10:58::1;:23;7123:10;7026:63:::0;7099:23:::1;:54::i;:::-;7169:34;::::0;160:25:189;;;7169:34:58::1;::::0;148:2:189;133:18;7169:34:58::1;;;;;;;;6918:292;6867:343::o:0;6539:261::-;1094:13:142;:11;:13::i;:::-;6657:15:58;6629:25:::1;:15;6647:7;6629:25;:::i;:::-;:43;6621:84;;;::::0;-1:-1:-1;;;6621:84:58;;4938:2:189;6621:84:58::1;::::0;::::1;4920:21:189::0;4977:2;4957:18;;;4950:30;5016;4996:18;;;4989:58;5064:18;;6621:84:58::1;4736:352:189::0;6621:84:58::1;6715:12;:30:::0;;;6761:32:::1;::::0;160:25:189;;;6761:32:58::1;::::0;148:2:189;133:18;6761:32:58::1;14:177:189::0;1831:101:142;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6015:248:58:-;1094:13:142;:11;:13::i;:::-;6097:15:58::1;::::0;-1:-1:-1;;;6097:15:58;::::1;;;6096:16;6088:59;;;::::0;-1:-1:-1;;;6088:59:58;;5295:2:189;6088:59:58::1;::::0;::::1;5277:21:189::0;5334:2;5314:18;;;5307:30;5373:32;5353:18;;;5346:60;5423:18;;6088:59:58::1;5093:354:189::0;6088:59:58::1;6158:15;:22:::0;;-1:-1:-1;;;;6158:22:58::1;-1:-1:-1::0;;;6158:22:58::1;::::0;;6190:10:::1;:24:::0;;;6230:26:::1;::::0;::::1;::::0;::::1;::::0;6203:11;160:25:189;;148:2;133:18;;14:177;3209:1887:58;1239:19:144;:17;:19::i;:::-;2261:21:145::1;:19;:21::i;:::-;3420:15:58::2;::::0;-1:-1:-1;;;3420:15:58;::::2;;;3412:56;;;::::0;-1:-1:-1;;;3412:56:58;;5654:2:189;3412:56:58::2;::::0;::::2;5636:21:189::0;5693:2;5673:18;;;5666:30;5732;5712:18;;;5705:58;5780:18;;3412:56:58::2;5452:352:189::0;3412:56:58::2;3496:23;3486:6;:33;;3478:70;;;::::0;-1:-1:-1;;;3478:70:58;;6011:2:189;3478:70:58::2;::::0;::::2;5993:21:189::0;6050:2;6030:18;;;6023:30;6089:26;6069:18;;;6062:54;6133:18;;3478:70:58::2;5809:348:189::0;3478:70:58::2;3585:12;;3566:15;:31;;3558:70;;;::::0;-1:-1:-1;;;3558:70:58;;6364:2:189;3558:70:58::2;::::0;::::2;6346:21:189::0;6403:2;6383:18;;;6376:30;6442:28;6422:18;;;6415:56;6488:18;;3558:70:58::2;6162:350:189::0;3558:70:58::2;3698:10;3687:22;::::0;;;:10:::2;:22;::::0;;;;;::::2;;3686:23;3678:60;;;::::0;-1:-1:-1;;;3678:60:58;;6719:2:189;3678:60:58::2;::::0;::::2;6701:21:189::0;6758:2;6738:18;;;6731:30;6797:26;6777:18;;;6770:54;6841:18;;3678:60:58::2;6517:348:189::0;3678:60:58::2;3785:38;3814:8;3785:28;:38::i;:::-;3777:90;;;::::0;-1:-1:-1;;;3777:90:58;;7072:2:189;3777:90:58::2;::::0;::::2;7054:21:189::0;7111:2;7091:18;;;7084:30;7150:34;7130:18;;;7123:62;-1:-1:-1;;;7201:18:189;;;7194:37;7248:19;;3777:90:58::2;6870:403:189::0;3777:90:58::2;3906:15;3924;:13;:8:::0;:13:::2;:::i;:::-;;:15::i;:::-;3906:33;;3987:14;4004:25;4021:7;4004:16;:25::i;:::-;3987:42:::0;-1:-1:-1;4123:15:58::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;4060:78:58::2;:59;4100:18;;::::0;::::2;:8:::0;:18:::2;:::i;:::-;4060:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;4060:31:58::2;::::0;-1:-1:-1;4060:6:58;;-1:-1:-1;4060:29:58::2;::::0;-1:-1:-1;4060:31:58:i:2;:::-;:39:::0;::::2;:59::i;:::-;-1:-1:-1::0;;;;;4060:78:58::2;;4039:151;;;::::0;-1:-1:-1;;;4039:151:58;;10613:2:189;4039:151:58::2;::::0;::::2;10595:21:189::0;10652:2;10632:18;;;10625:30;10691:28;10671:18;;;10664:56;10737:18;;4039:151:58::2;10411:350:189::0;4039:151:58::2;4243:8;4239:426;;;4300:19;::::0;;;::::2;::::0;::::2;;:::i;:::-;4292:82;::::0;-1:-1:-1;;;4292:82:58;;4338:10:::2;4292:82;::::0;::::2;10978:34:189::0;-1:-1:-1;;;;;4350:23:58::2;11048:15:189::0;;11028:18;;;11021:43;4292:45:58;;;::::2;::::0;::::2;::::0;10913:18:189;;4292:82:58::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4267:177;;;;-1:-1:-1::0;;;4267:177:58::2;;;;;;;:::i;:::-;4239:426;;;4509:19;::::0;;;::::2;::::0;::::2;;:::i;:::-;4500:84;::::0;-1:-1:-1;;;4500:84:58;;4547:10:::2;4500:84;::::0;::::2;10978:34:189::0;-1:-1:-1;;;;;4559:24:58::2;11048:15:189::0;;11028:18;;;11021:43;4500:46:58;;;::::2;::::0;::::2;::::0;10913:18:189;;4500:84:58::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4475:179;;;;-1:-1:-1::0;;;4475:179:58::2;;;;;;;:::i;:::-;4756:36;::::0;-1:-1:-1;;4773:10:58::2;11907:2:189::0;11903:15;11899:53;4756:36:58::2;::::0;::::2;11887:66:189::0;11969:12;;;11962:28;;;4731:12:58::2;::::0;12006::189;;4756:36:58::2;;;;;;;;;;;;4746:47;;;;;;4731:62;;4811:49;4830:11;;4811:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;4843:10:58::2;::::0;;-1:-1:-1;4855:4:58;;-1:-1:-1;4811:18:58::2;:49::i;:::-;4803:84;;;::::0;-1:-1:-1;;;4803:84:58;;12231:2:189;4803:84:58::2;::::0;::::2;12213:21:189::0;12270:2;12250:18;;;12243:30;-1:-1:-1;;;12289:18:189;;;12282:52;12351:18;;4803:84:58::2;12029:346:189::0;4803:84:58::2;4935:10;4924:22;::::0;;;:10:::2;:22;::::0;;;;:29;;-1:-1:-1;;4924:29:58::2;4949:4;4924:29;::::0;;4991:43:::2;::::0;:10:::2;-1:-1:-1::0;;;;;4991:23:58::2;::::0;5027:6;4991:23:::2;:43::i;:::-;5050:39;::::0;160:25:189;;;5070:10:58::2;::::0;5050:39:::2;::::0;148:2:189;133:18;5050:39:58::2;;;;;;;3402:1694;;;2303:20:145::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;3209:1887:58::0;;;;;:::o;5830:82::-;1094:13:142;:11;:13::i;:::-;1239:19:144::1;:17;:19::i;:::-;5897:8:58::2;:6;:8::i;5333:446::-:0;5466:4;5505:12;;5486:15;:31;5482:291;;5618:30;;-1:-1:-1;;11907:2:189;11903:15;;;11899:53;5618:30:58;;;11887:66:189;11969:12;;;11962:28;;;5593:12:58;;12006::189;;5618:30:58;;;;;;;;;;;;5608:41;;;;;;5593:56;;5670:49;5689:11;;5670:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5702:10:58;;;-1:-1:-1;5714:4:58;;-1:-1:-1;5670:18:58;:49::i;:::-;5663:56;;;;;5482:291;-1:-1:-1;5757:5:58;5482:291;5333:446;;;;;;:::o;6316:83::-;1094:13:142;:11;:13::i;:::-;1486:16:144::1;:14;:16::i;:::-;6382:10:58::2;:8;:10::i;2081:198:142:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:142;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:142;;12582:2:189;2161:73:142::1;::::0;::::1;12564:21:189::0;12621:2;12601:18;;;12594:30;12660:34;12640:18;;;12633:62;-1:-1:-1;;;12711:18:189;;;12704:36;12757:19;;2161:73:142::1;12380:402:189::0;2161:73:142::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:142;719:10:167;1422:23:142;1414:68;;;;-1:-1:-1;;;1414:68:142;;12989:2:189;1414:68:142;;;12971:21:189;;;13008:18;;;13001:30;13067:34;13047:18;;;13040:62;13119:18;;1414:68:142;12787:356:189;763:205:159;902:58;;;-1:-1:-1;;;;;13340:32:189;;902:58:159;;;13322:51:189;13389:18;;;;13382:34;;;902:58:159;;;;;;;;;;13295:18:189;;;;902:58:159;;;;;;;;-1:-1:-1;;;;;902:58:159;-1:-1:-1;;;902:58:159;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:142:-;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1767:106:144:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:144;;13629:2:189;1828:38:144;;;13611:21:189;13668:2;13648:18;;;13641:30;-1:-1:-1;;;13687:18:189;;;13680:46;13743:18;;1828:38:144;13427:340:189;2336:287:145;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:145;;13974:2:189;2460:63:145;;;13956:21:189;14013:2;13993:18;;;13986:30;14052:33;14032:18;;;14025:61;14103:18;;2460:63:145;13772:355:189;2460:63:145;1759:1;2598:7;:18;2336:287::o;7342:344:58:-;7444:4;7480:19;;;;:8;:19;:::i;:::-;7479:68;;;;-1:-1:-1;7536:10:58;7517:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7517:29:58;;7479:68;:105;;;;;7582:1;7564:8;:15;;;:19;7479:105;:148;;;;-1:-1:-1;;;;;;7622:4:58;7601:25;:17;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7601:25:58;;7479:148;:200;;;;-1:-1:-1;;;;;;7665:13:58;7644:34;:17;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7644:34:58;;7479:200;7460:219;7342:344;-1:-1:-1;;7342:344:58:o;2057:605:40:-;2124:7;2143:23;638:66;2193:16;;2223:10;:21;;;2258:10;:17;;;2289:10;:21;;;2324:10;:16;;;2354:10;:18;;;2386:10;:17;;;2417:10;:19;;;2450:10;:19;;;2483:10;:16;;;2513:10;:20;;;2547:10;:18;;;2589:10;:17;;;2579:28;;;;;;2169:448;;;;;;;;;;;;;;;;;;;14858:25:189;;;14926:14;;14919:22;14914:2;14899:18;;14892:50;-1:-1:-1;;;;;15016:15:189;;;15011:2;14996:18;;14989:43;15068:15;;;15063:2;15048:18;;15041:43;15115:3;15100:19;;15093:35;;;;14969:3;15144:19;;15137:35;;;;15203:3;15188:19;;15181:35;;;;15253:15;;15247:3;15232:19;;15225:44;15306:15;;;15300:3;15285:19;;15278:44;15353:3;15338:19;;15331:35;;;;15397:3;15382:19;;15375:36;;;;15442:3;15427:19;;15420:36;15487:3;15472:19;;15465:36;14845:3;14830:19;;14378:1129;2169:448:40;;;;-1:-1:-1;;2169:448:40;;;;;;;;;2634:21;;2169:448;2634:21;;;;;2057:605;-1:-1:-1;;;2057:605:40:o;4348:165:171:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:170;;-1:-1:-1;;;8470:57:170;;;16915:27:189;16958:11;;;16951:27;;;16994:12;;;16987:28;;;8434:7:170;;17031:12:189;;8470:57:170;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;7256:265;7455:58;;15754:66:189;7455:58:170;;;15742:79:189;15837:12;;;15830:28;;;7325:7:170;;15874:12:189;;7455:58:170;;;;;;;;;;;;7445:69;;;;;;7438:76;;7256:265;;;:::o;3661:227::-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:170;3661:227;-1:-1:-1;;;3661:227:170:o;1156:184:172:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;;1156:184;-1:-1:-1;;;;1156:184:172:o;2186:115:144:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:144::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:167::0;;640:96;2281:12:144::1;2274:20;::::0;-1:-1:-1;;;;;360:32:189;;;342:51;;330:2;315:18;2274:20:144::1;;;;;;;2186:115::o:0;1945:106::-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:144;;16099:2:189;2003:41:144;;;16081:21:189;16138:2;16118:18;;;16111:30;-1:-1:-1;;;16157:18:189;;;16150:50;16217:18;;2003:41:144;15897:344:189;2433:117:144;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:144::1;::::0;;2521:22:::1;719:10:167::0;2530:12:144::1;640:96:167::0;3747:706:159;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:159;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:159;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:159;;16448:2:189;4351:85:159;;;16430:21:189;16487:2;16467:18;;;16460:30;16526:34;16506:18;;;16499:62;-1:-1:-1;;;16577:18:189;;;16570:40;16627:19;;4351:85:159;16246:406:189;3152:308:171;3205:7;3236:4;-1:-1:-1;;;;;3245:12:171;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:171;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:171;;;3401:10;3642:73;;;;18833:25:189;;;;3413:12:171;18874:18:189;;;18867:34;3427:15:171;18917:18:189;;;18910:34;3686:13:171;18960:18:189;;;18953:34;3709:4:171;19003:19:189;;;;18996:61;;;;3642:73:171;;;;;;;;;;18805:19:189;;;;3642:73:171;;;3632:84;;;;;;3152:308::o;2145:730:170:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:170;;-1:-1:-1;2822:35:170;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:170;;17388:2:189;788:34:170;;;17370:21:189;17427:2;17407:18;;;17400:30;17466:26;17446:18;;;17439:54;17510:18;;788:34:170;17186:348:189;730:345:170;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:170;;17741:2:189;903:41:170;;;17723:21:189;17780:2;17760:18;;;17753:30;17819:33;17799:18;;;17792:61;17870:18;;903:41:170;17539:355:189;839:236:170;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:170;;18101:2:189;1020:44:170;;;18083:21:189;18140:2;18120:18;;;18113:30;18179:34;18159:18;;;18152:62;-1:-1:-1;;;18230:18:189;;;18223:32;18272:19;;1020:44:170;17899:398:189;1994:290:172;2077:7;2119:4;2077:7;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;2205:9;:33::i;:::-;2190:48;-1:-1:-1;2171:3:172;;;;:::i;:::-;;;;2133:116;;3873:223:166;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;5069:1494:170:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:170;;-1:-1:-1;6221:30:170;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;19295:25:189;;;19368:4;19356:17;;19336:18;;;19329:45;;;;19390:18;;;19383:34;;;19433:18;;;19426:34;;;6374:24:170;;19267:19:189;;6374:24:170;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:170;;-1:-1:-1;;6374:24:170;;;-1:-1:-1;;;;;;;6412:20:170;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:170;;-1:-1:-1;5069:1494:170;;;;;;;;:::o;8879:147:172:-;8942:7;8972:1;8968;:5;:51;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8968:51;;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8976:20;8961:58;8879:147;-1:-1:-1;;;8879:147:172:o;4960:446:166:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:166;;19673:2:189;5149:81:166;;;19655:21:189;19712:2;19692:18;;;19685:30;19751:34;19731:18;;;19724:62;-1:-1:-1;;;19802:18:189;;;19795:36;19848:19;;5149:81:166;19471:402:189;5149:81:166;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:166;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:166:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:166;;;7908:60;;;;-1:-1:-1;;;7908:60:166;;20627:2:189;7908:60:166;;;20609:21:189;20666:2;20646:18;;;20639:30;20705:31;20685:18;;;20678:59;20754:18;;7908:60:166;20425:353:189;7908:60:166;-1:-1:-1;8003:10:166;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:166;;;;;;;;:::i;596:180:189:-;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;-1:-1:-1;747:23:189;;596:180;-1:-1:-1;596:180:189:o;781:173::-;849:20;;-1:-1:-1;;;;;898:31:189;;888:42;;878:70;;944:1;941;934:12;878:70;781:173;;;:::o;959:186::-;1018:6;1071:2;1059:9;1050:7;1046:23;1042:32;1039:52;;;1087:1;1084;1077:12;1039:52;1110:29;1129:9;1110:29;:::i;1517:367::-;1580:8;1590:6;1644:3;1637:4;1629:6;1625:17;1621:27;1611:55;;1662:1;1659;1652:12;1611:55;-1:-1:-1;1685:20:189;;1728:18;1717:30;;1714:50;;;1760:1;1757;1750:12;1714:50;1797:4;1789:6;1785:17;1773:29;;1857:3;1850:4;1840:6;1837:1;1833:14;1825:6;1821:27;1817:38;1814:47;1811:67;;;1874:1;1871;1864:12;1889:118;1975:5;1968:13;1961:21;1954:5;1951:32;1941:60;;1997:1;1994;1987:12;2012:128;2077:20;;2106:28;2077:20;2106:28;:::i;2145:924::-;2285:6;2293;2301;2309;2317;2370:3;2358:9;2349:7;2345:23;2341:33;2338:53;;;2387:1;2384;2377:12;2338:53;2423:9;2410:23;2400:33;;2484:2;2473:9;2469:18;2456:32;2507:18;2548:2;2540:6;2537:14;2534:34;;;2564:1;2561;2554:12;2534:34;2603:70;2665:7;2656:6;2645:9;2641:22;2603:70;:::i;:::-;2692:8;;-1:-1:-1;2577:96:189;-1:-1:-1;2780:2:189;2765:18;;2752:32;;-1:-1:-1;2796:16:189;;;2793:36;;;2825:1;2822;2815:12;2793:36;-1:-1:-1;2848:24:189;;2906:3;2888:16;;;2884:26;2881:46;;;2923:1;2920;2913:12;2881:46;2946:2;-1:-1:-1;2998:2:189;2983:18;;2970:32;3011:28;2970:32;3011:28;:::i;:::-;3058:5;3048:15;;;2145:924;;;;;;;;:::o;3298:579::-;3402:6;3410;3418;3426;3479:2;3467:9;3458:7;3454:23;3450:32;3447:52;;;3495:1;3492;3485:12;3447:52;3518:29;3537:9;3518:29;:::i;:::-;3508:39;;3594:2;3583:9;3579:18;3566:32;3556:42;;3649:2;3638:9;3634:18;3621:32;3676:18;3668:6;3665:30;3662:50;;;3708:1;3705;3698:12;3662:50;3747:70;3809:7;3800:6;3789:9;3785:22;3747:70;:::i;:::-;3298:579;;;;-1:-1:-1;3836:8:189;-1:-1:-1;;;;3298:579:189:o;3882:127::-;3943:10;3938:3;3934:20;3931:1;3924:31;3974:4;3971:1;3964:15;3998:4;3995:1;3988:15;4014:125;4079:9;;;4100:10;;;4097:36;;;4113:18;;:::i;4547:184::-;4617:6;4670:2;4658:9;4649:7;4645:23;4641:32;4638:52;;;4686:1;4683;4676:12;4638:52;-1:-1:-1;4709:16:189;;4547:184;-1:-1:-1;4547:184:189:o;7278:127::-;7339:10;7334:3;7330:20;7327:1;7320:31;7370:4;7367:1;7360:15;7394:4;7391:1;7384:15;7410:250;7477:2;7471:9;7519:6;7507:19;;7556:18;7541:34;;7577:22;;;7538:62;7535:88;;;7603:18;;:::i;:::-;7639:2;7632:22;7410:250;:::o;7665:718::-;7707:5;7760:3;7753:4;7745:6;7741:17;7737:27;7727:55;;7778:1;7775;7768:12;7727:55;7814:6;7801:20;7840:18;7877:2;7873;7870:10;7867:36;;;7883:18;;:::i;:::-;7958:2;7952:9;7926:2;8012:13;;-1:-1:-1;;8008:22:189;;;8032:2;8004:31;8000:40;7988:53;;;8056:18;;;8076:22;;;8053:46;8050:72;;;8102:18;;:::i;:::-;8142:10;8138:2;8131:22;8177:2;8169:6;8162:18;8223:3;8216:4;8211:2;8203:6;8199:15;8195:26;8192:35;8189:55;;;8240:1;8237;8230:12;8189:55;8304:2;8297:4;8289:6;8285:17;8278:4;8270:6;8266:17;8253:54;8351:1;8344:4;8339:2;8331:6;8327:15;8323:26;8316:37;8371:6;8362:15;;;;;;7665:718;;;;:::o;8388:1492::-;8496:9;8555:6;8547:5;8531:14;8527:26;8523:39;8520:59;;;8575:1;8572;8565:12;8520:59;8603:17;;:::i;:::-;8645:22;8661:5;8645:22;:::i;:::-;8636:7;8629:39;8702:34;8732:2;8725:5;8721:14;8702:34;:::i;:::-;8697:2;8688:7;8684:16;8677:60;8771:34;8801:2;8794:5;8790:14;8771:34;:::i;:::-;8766:2;8757:7;8753:16;8746:60;8864:2;8857:5;8853:14;8840:28;8835:2;8826:7;8822:16;8815:54;8928:3;8921:5;8917:15;8904:29;8898:3;8889:7;8885:17;8878:56;8993:3;8986:5;8982:15;8969:29;8963:3;8954:7;8950:17;8943:56;9034:35;9064:3;9057:5;9053:15;9034:35;:::i;:::-;9028:3;9019:7;9015:17;9008:62;9105:35;9135:3;9128:5;9124:15;9105:35;:::i;:::-;9099:3;9086:17;;9079:62;9160:3;9210:14;;;9197:28;9179:16;;;9172:54;9245:3;9295:14;;;9282:28;9264:16;;;9257:54;9330:3;9380:14;;;9367:28;9349:16;;;9342:54;9415:3;9454:14;;;9441:28;9488:18;9518:14;;;9515:34;;;9545:1;9542;9535:12;9515:34;9583:52;9620:14;9611:6;9604:5;9600:18;9583:52;:::i;:::-;9578:2;9569:7;9565:16;9558:78;9655:3;9645:13;;9707:2;9700:5;9696:14;9683:28;9667:44;;9736:2;9726:8;9723:16;9720:36;;;9752:1;9749;9742:12;9720:36;;9790:54;9829:14;9818:8;9811:5;9807:20;9790:54;:::i;:::-;9772:16;;;9765:80;;;;-1:-1:-1;9776:7:189;8388:1492;-1:-1:-1;;8388:1492:189:o;9885:521::-;9962:4;9968:6;10028:11;10015:25;10122:2;10118:7;10107:8;10091:14;10087:29;10083:43;10063:18;10059:68;10049:96;;10141:1;10138;10131:12;10049:96;10168:33;;10220:20;;;-1:-1:-1;10263:18:189;10252:30;;10249:50;;;10295:1;10292;10285:12;10249:50;10328:4;10316:17;;-1:-1:-1;10359:14:189;10355:27;;;10345:38;;10342:58;;;10396:1;10393;10386:12;11075:245;11142:6;11195:2;11183:9;11174:7;11170:23;11166:32;11163:52;;;11211:1;11208;11201:12;11163:52;11243:9;11237:16;11262:28;11284:5;11262:28;:::i;11325:400::-;11527:2;11509:21;;;11566:2;11546:18;;;11539:30;11605:34;11600:2;11585:18;;11578:62;-1:-1:-1;;;11671:2:189;11656:18;;11649:34;11715:3;11700:19;;11325:400::o;14132:241::-;14188:6;14241:2;14229:9;14220:7;14216:23;14212:32;14209:52;;;14257:1;14254;14247:12;14209:52;14296:9;14283:23;14315:28;14337:5;14315:28;:::i;17054:127::-;17115:10;17110:3;17106:20;17103:1;17096:31;17146:4;17143:1;17136:15;17170:4;17167:1;17160:15;18302:127;18363:10;18358:3;18354:20;18351:1;18344:31;18394:4;18391:1;18384:15;18418:4;18415:1;18408:15;18434:135;18473:3;18494:17;;;18491:43;;18514:18;;:::i;:::-;-1:-1:-1;18561:1:189;18550:13;;18434:135::o;19878:250::-;19963:1;19973:113;19987:6;19984:1;19981:13;19973:113;;;20063:11;;;20057:18;20044:11;;;20037:39;20009:2;20002:10;19973:113;;;-1:-1:-1;;20120:1:189;20102:16;;20095:27;19878:250::o;20133:287::-;20262:3;20300:6;20294:13;20316:66;20375:6;20370:3;20363:4;20355:6;20351:17;20316:66;:::i;:::-;20398:16;;;;;20133:287;-1:-1:-1;;20133:287:189:o;20783:396::-;20932:2;20921:9;20914:21;20895:4;20964:6;20958:13;21007:6;21002:2;20991:9;20987:18;20980:34;21023:79;21095:6;21090:2;21079:9;21075:18;21070:2;21062:6;21058:15;21023:79;:::i;:::-;21163:2;21142:15;-1:-1:-1;;21138:29:189;21123:45;;;;21170:2;21119:54;;20783:396;-1:-1:-1;;20783:396:189:o",
    "linkReferences": {},
    "immutableReferences": {
      "13546": [
        {
          "start": 747,
          "length": 32
        },
        {
          "start": 977,
          "length": 32
        },
        {
          "start": 1107,
          "length": 32
        },
        {
          "start": 2894,
          "length": 32
        }
      ],
      "13548": [
        {
          "start": 527,
          "length": 32
        },
        {
          "start": 3921,
          "length": 32
        }
      ],
      "13550": [
        {
          "start": 650,
          "length": 32
        },
        {
          "start": 2324,
          "length": 32
        }
      ],
      "13552": [
        {
          "start": 359,
          "length": 32
        },
        {
          "start": 2519,
          "length": 32
        }
      ],
      "13554": [
        {
          "start": 611,
          "length": 32
        },
        {
          "start": 3844,
          "length": 32
        }
      ],
      "13556": [
        {
          "start": 708,
          "length": 32
        },
        {
          "start": 1652,
          "length": 32
        }
      ],
      "63586": [
        {
          "start": 5008,
          "length": 32
        }
      ],
      "63588": [
        {
          "start": 4966,
          "length": 32
        }
      ],
      "63590": [
        {
          "start": 4924,
          "length": 32
        }
      ],
      "63592": [
        {
          "start": 5091,
          "length": 32
        }
      ],
      "63594": [
        {
          "start": 5128,
          "length": 32
        }
      ],
      "63596": [
        {
          "start": 5049,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAIN_STRATEGY()": "7a6d39c6",
    "MAXIMUM_AMOUNT_TO_CLAIM()": "bd69ba50",
    "TRANSFER_MANAGER_ERC1155()": "38928956",
    "TRANSFER_MANAGER_ERC721()": "b1357ddd",
    "WETH()": "ad5c4648",
    "canClaim(address,uint256,bytes32[])": "dc38bdb5",
    "claim(uint256,bytes32[],(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes),bool)": "b734da09",
    "endTimestamp()": "a85adeab",
    "hasClaimed(address)": "73b2e80e",
    "isMerkleRootSet()": "5ff10e39",
    "merkleRoot()": "2eb4a7ab",
    "omniXToken()": "bf5f3aef",
    "owner()": "8da5cb5b",
    "pauseAirdrop()": "c6afd5bb",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "setMerkleRoot(bytes32)": "7cb64759",
    "transferOwnership(address)": "f2fde38b",
    "unpauseAirdrop()": "e96ad3ad",
    "updateEndTimestamp(uint256)": "6e1613fb",
    "withdrawTokenRewards()": "15618acd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maximumAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_omniXToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"domainVersion\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_transferManagerERC721\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManagerERC1155\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mainStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropRewardsClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"NewEndTimestamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAIN_STRATEGY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_AMOUNT_TO_CLAIM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isERC721\",\"type\":\"bool\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMerkleRootSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omniXToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newEndTimestamp\",\"type\":\"uint256\"}],\"name\":\"updateEndTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokenRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canClaim(address,uint256,bytes32[])\":{\"params\":{\"amount\":\"amount to claim\",\"merkleProof\":\"array containing the merkle proof\",\"user\":\"address of the user\"}},\"claim(uint256,bytes32[],(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes),bool)\":{\"params\":{\"amount\":\"amount to claim for the airdrop\",\"isERC721\":\"whether the order is for ERC721 (true --> ERC721/ false --> ERC1155)\",\"makerAsk\":\"makerAsk order\",\"merkleProof\":\"array containing the merkle proof\"}},\"constructor\":{\"params\":{\"_endTimestamp\":\"end timestamp for claiming\",\"_mainStrategy\":\"main strategy (\\\"StandardSaleForFixedPrice\\\")\",\"_maximumAmountToClaim\":\"maximum amount to claim per a user\",\"_omniXToken\":\"address of the OmniX token\",\"_transferManagerERC1155\":\"address of the transfer manager for ERC1155 for OmniX exchange\",\"_transferManagerERC721\":\"address of the transfer manager for ERC721 for OmniX exchange\",\"_weth\":\"wrapped ETH address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMerkleRoot(bytes32)\":{\"params\":{\"_merkleRoot\":\"merkle root\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateEndTimestamp(uint256)\":{\"details\":\"Must be within 30 days\",\"params\":{\"newEndTimestamp\":\"new endtimestamp\"}}},\"title\":\"OmniXAirdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canClaim(address,uint256,bytes32[])\":{\"notice\":\"Check whether it is possible to claim (it doesn't check orders)\"},\"claim(uint256,bytes32[],(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes),bool)\":{\"notice\":\"Claim tokens for airdrop\"},\"constructor\":{\"notice\":\"Constructor\"},\"pauseAirdrop()\":{\"notice\":\"Pause airdrop\"},\"setMerkleRoot(bytes32)\":{\"notice\":\"Set merkle root for airdrop\"},\"unpauseAirdrop()\":{\"notice\":\"Unpause airdrop\"},\"updateEndTimestamp(uint256)\":{\"notice\":\"Update end timestamp\"},\"withdrawTokenRewards()\":{\"notice\":\"Transfer tokens back to owner\"}},\"notice\":\"It distributes LOOKS tokens with a Merkle-tree airdrop.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewards/airdrop/OmniXAirdrop.sol\":\"OmniXAirdrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":solmate/=node_modules/solmate/\",\":xdeployer/=node_modules/xdeployer/\"]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xcc3bd38efa4e6637dc0f69e9c80da5648593c8654974e8213232014602834b2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3d80fbf17527b03115ae4141232fe68b40ec6ebae5ae1d67eff96d25aec6e78\",\"dweb:/ipfs/QmfEFZUtGQD7RsZCs1kcGexzZ9MBiSZvXkYX8WDrv7Gn9c\"]},\"contracts/rewards/airdrop/OmniXAirdrop.sol\":{\"keccak256\":\"0xeecd9faa274e0dcabc86733090d74d81d0c65ca1ecff4170a90f19dca2143967\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd8f6ca20d6cfdf1f5a8e0de6736898425806618a369d62f1c90cdfb858c475b\",\"dweb:/ipfs/QmZLankx9zPs8eiPjD1AfYpokKJrGJXH8WGc5NcfK4TvYm\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_endTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maximumAmountToClaim",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_omniXToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "domain",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "domainVersion",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_transferManagerERC721",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_transferManagerERC1155",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_mainStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AirdropRewardsClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MerkleRootSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "endTimestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewEndTimestamp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAIN_STRATEGY",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAXIMUM_AMOUNT_TO_CLAIM",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFER_MANAGER_ERC1155",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFER_MANAGER_ERC721",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "struct OrderTypes.MakerOrder",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isOrderAsk",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "isERC721",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isMerkleRootSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "omniXToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAirdrop"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseAirdrop"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newEndTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateEndTimestamp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokenRewards"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "canClaim(address,uint256,bytes32[])": {
            "params": {
              "amount": "amount to claim",
              "merkleProof": "array containing the merkle proof",
              "user": "address of the user"
            }
          },
          "claim(uint256,bytes32[],(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes),bool)": {
            "params": {
              "amount": "amount to claim for the airdrop",
              "isERC721": "whether the order is for ERC721 (true --> ERC721/ false --> ERC1155)",
              "makerAsk": "makerAsk order",
              "merkleProof": "array containing the merkle proof"
            }
          },
          "constructor": {
            "params": {
              "_endTimestamp": "end timestamp for claiming",
              "_mainStrategy": "main strategy (\"StandardSaleForFixedPrice\")",
              "_maximumAmountToClaim": "maximum amount to claim per a user",
              "_omniXToken": "address of the OmniX token",
              "_transferManagerERC1155": "address of the transfer manager for ERC1155 for OmniX exchange",
              "_transferManagerERC721": "address of the transfer manager for ERC721 for OmniX exchange",
              "_weth": "wrapped ETH address"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setMerkleRoot(bytes32)": {
            "params": {
              "_merkleRoot": "merkle root"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateEndTimestamp(uint256)": {
            "details": "Must be within 30 days",
            "params": {
              "newEndTimestamp": "new endtimestamp"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canClaim(address,uint256,bytes32[])": {
            "notice": "Check whether it is possible to claim (it doesn't check orders)"
          },
          "claim(uint256,bytes32[],(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes),bool)": {
            "notice": "Claim tokens for airdrop"
          },
          "constructor": {
            "notice": "Constructor"
          },
          "pauseAirdrop()": {
            "notice": "Pause airdrop"
          },
          "setMerkleRoot(bytes32)": {
            "notice": "Set merkle root for airdrop"
          },
          "unpauseAirdrop()": {
            "notice": "Unpause airdrop"
          },
          "updateEndTimestamp(uint256)": {
            "notice": "Update end timestamp"
          },
          "withdrawTokenRewards()": {
            "notice": "Transfer tokens back to owner"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":solmate/=node_modules/solmate/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/rewards/airdrop/OmniXAirdrop.sol": "OmniXAirdrop"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/OrderTypes.sol": {
        "keccak256": "0xcc3bd38efa4e6637dc0f69e9c80da5648593c8654974e8213232014602834b2a",
        "urls": [
          "bzz-raw://d3d80fbf17527b03115ae4141232fe68b40ec6ebae5ae1d67eff96d25aec6e78",
          "dweb:/ipfs/QmfEFZUtGQD7RsZCs1kcGexzZ9MBiSZvXkYX8WDrv7Gn9c"
        ],
        "license": "MIT"
      },
      "contracts/rewards/airdrop/OmniXAirdrop.sol": {
        "keccak256": "0xeecd9faa274e0dcabc86733090d74d81d0c65ca1ecff4170a90f19dca2143967",
        "urls": [
          "bzz-raw://dd8f6ca20d6cfdf1f5a8e0de6736898425806618a369d62f1c90cdfb858c475b",
          "dweb:/ipfs/QmZLankx9zPs8eiPjD1AfYpokKJrGJXH8WGc5NcfK4TvYm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1",
        "urls": [
          "bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616",
          "dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/rewards/airdrop/OmniXAirdrop.sol",
    "id": 13993,
    "exportedSymbols": {
      "ECDSA": [
        63580
      ],
      "EIP712": [
        63734
      ],
      "IERC1155": [
        59935
      ],
      "IERC20": [
        60967
      ],
      "IERC721": [
        62417
      ],
      "MerkleProof": [
        64236
      ],
      "OmniXAirdrop": [
        13992
      ],
      "OrderTypes": [
        7528
      ],
      "Ownable": [
        58409
      ],
      "Pausable": [
        58536
      ],
      "ReentrancyGuard": [
        58590
      ],
      "SafeERC20": [
        61374
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7656:58",
    "nodes": [
      {
        "id": 13503,
        "nodeType": "PragmaDirective",
        "src": "32:23:58",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 13505,
        "nodeType": "ImportDirective",
        "src": "57:67:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 58410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13504,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58409,
              "src": "65:7:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13507,
        "nodeType": "ImportDirective",
        "src": "125:71:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 58537,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13506,
              "name": "Pausable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58536,
              "src": "133:8:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13509,
        "nodeType": "ImportDirective",
        "src": "197:85:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 58591,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13508,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58590,
              "src": "205:15:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13511,
        "nodeType": "ImportDirective",
        "src": "283:87:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 64237,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13510,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64236,
              "src": "291:11:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13514,
        "nodeType": "ImportDirective",
        "src": "371:90:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 64240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13512,
              "name": "EIP712",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63734,
              "src": "379:6:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 13513,
              "name": "ECDSA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63580,
              "src": "387:5:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13517,
        "nodeType": "ImportDirective",
        "src": "463:90:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 61375,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13515,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60967,
              "src": "471:6:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 13516,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61374,
              "src": "479:9:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13519,
        "nodeType": "ImportDirective",
        "src": "554:73:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 62418,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13518,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62417,
              "src": "562:7:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13521,
        "nodeType": "ImportDirective",
        "src": "628:76:58",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 59936,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13520,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59935,
              "src": "636:8:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13523,
        "nodeType": "ImportDirective",
        "src": "706:58:58",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderTypes.sol",
        "file": "../../libraries/OrderTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13993,
        "sourceUnit": 7529,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13522,
              "name": "OrderTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7528,
              "src": "714:10:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13992,
        "nodeType": "ContractDefinition",
        "src": "864:6824:58",
        "nodes": [
          {
            "id": 13536,
            "nodeType": "UsingForDirective",
            "src": "938:27:58",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13533,
              "name": "SafeERC20",
              "nameLocations": [
                "944:9:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61374,
              "src": "944:9:58"
            },
            "typeName": {
              "id": 13535,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13534,
                "name": "IERC20",
                "nameLocations": [
                  "958:6:58"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60967,
                "src": "958:6:58"
              },
              "referencedDeclaration": 60967,
              "src": "958:6:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$60967",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 13540,
            "nodeType": "UsingForDirective",
            "src": "970:43:58",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13537,
              "name": "OrderTypes",
              "nameLocations": [
                "976:10:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7528,
              "src": "976:10:58"
            },
            "typeName": {
              "id": 13539,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13538,
                "name": "OrderTypes.MakerOrder",
                "nameLocations": [
                  "991:10:58",
                  "1002:10:58"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7333,
                "src": "991:21:58"
              },
              "referencedDeclaration": 7333,
              "src": "991:21:58",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MakerOrder_$7333_storage_ptr",
                "typeString": "struct OrderTypes.MakerOrder"
              }
            }
          },
          {
            "id": 13543,
            "nodeType": "UsingForDirective",
            "src": "1018:24:58",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13541,
              "name": "ECDSA",
              "nameLocations": [
                "1024:5:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63580,
              "src": "1024:5:58"
            },
            "typeName": {
              "id": 13542,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 13546,
            "nodeType": "VariableDeclaration",
            "src": "1049:34:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "bf5f3aef",
            "mutability": "immutable",
            "name": "omniXToken",
            "nameLocation": "1073:10:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$60967",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13545,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13544,
                "name": "IERC20",
                "nameLocations": [
                  "1049:6:58"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60967,
                "src": "1049:6:58"
              },
              "referencedDeclaration": 60967,
              "src": "1049:6:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$60967",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13548,
            "nodeType": "VariableDeclaration",
            "src": "1090:38:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "7a6d39c6",
            "mutability": "immutable",
            "name": "MAIN_STRATEGY",
            "nameLocation": "1115:13:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1090:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13550,
            "nodeType": "VariableDeclaration",
            "src": "1134:48:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "b1357ddd",
            "mutability": "immutable",
            "name": "TRANSFER_MANAGER_ERC721",
            "nameLocation": "1159:23:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13552,
            "nodeType": "VariableDeclaration",
            "src": "1188:49:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "38928956",
            "mutability": "immutable",
            "name": "TRANSFER_MANAGER_ERC1155",
            "nameLocation": "1213:24:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13551,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1188:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13554,
            "nodeType": "VariableDeclaration",
            "src": "1243:29:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "ad5c4648",
            "mutability": "immutable",
            "name": "WETH",
            "nameLocation": "1268:4:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13553,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1243:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13556,
            "nodeType": "VariableDeclaration",
            "src": "1279:48:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "bd69ba50",
            "mutability": "immutable",
            "name": "MAXIMUM_AMOUNT_TO_CLAIM",
            "nameLocation": "1304:23:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13555,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1279:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13558,
            "nodeType": "VariableDeclaration",
            "src": "1334:27:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "5ff10e39",
            "mutability": "mutable",
            "name": "isMerkleRootSet",
            "nameLocation": "1346:15:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 13557,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1334:4:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13560,
            "nodeType": "VariableDeclaration",
            "src": "1368:25:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1383:10:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13559,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1368:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13562,
            "nodeType": "VariableDeclaration",
            "src": "1400:27:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "a85adeab",
            "mutability": "mutable",
            "name": "endTimestamp",
            "nameLocation": "1415:12:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13561,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1400:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13566,
            "nodeType": "VariableDeclaration",
            "src": "1434:42:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "73b2e80e",
            "mutability": "mutable",
            "name": "hasClaimed",
            "nameLocation": "1466:10:58",
            "scope": 13992,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 13565,
              "keyType": {
                "id": 13563,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1442:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:24:58",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 13564,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1453:4:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 13572,
            "nodeType": "EventDefinition",
            "src": "1483:64:58",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "19552fadade1a47d8fa44f6487230cfff67275de6e68fbfba65171532768fd7d",
            "name": "AirdropRewardsClaim",
            "nameLocation": "1489:19:58",
            "parameters": {
              "id": 13571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13568,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1525:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13572,
                  "src": "1509:20:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13570,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1539:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13572,
                  "src": "1531:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1508:38:58"
            }
          },
          {
            "id": 13576,
            "nodeType": "EventDefinition",
            "src": "1552:40:58",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b",
            "name": "MerkleRootSet",
            "nameLocation": "1558:13:58",
            "parameters": {
              "id": 13575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13574,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1580:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13576,
                  "src": "1572:18:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13573,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:20:58"
            }
          },
          {
            "id": 13580,
            "nodeType": "EventDefinition",
            "src": "1597:44:58",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ac7d83845fcc6871010ded05a8cb9bddee5cc49fdb8f2d24b96141d401b6bfed",
            "name": "NewEndTimestamp",
            "nameLocation": "1603:15:58",
            "parameters": {
              "id": 13579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13578,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTimestamp",
                  "nameLocation": "1627:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13580,
                  "src": "1619:20:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1619:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1618:22:58"
            }
          },
          {
            "id": 13584,
            "nodeType": "EventDefinition",
            "src": "1646:38:58",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f",
            "name": "TokensWithdrawn",
            "nameLocation": "1652:15:58",
            "parameters": {
              "id": 13583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13582,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1676:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13584,
                  "src": "1668:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:16:58"
            }
          },
          {
            "id": 13641,
            "nodeType": "FunctionDefinition",
            "src": "2224:680:58",
            "nodes": [],
            "body": {
              "id": 13640,
              "nodeType": "Block",
              "src": "2578:326:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13610,
                      "name": "endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13562,
                      "src": "2588:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13611,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13587,
                      "src": "2603:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2588:28:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13613,
                  "nodeType": "ExpressionStatement",
                  "src": "2588:28:58"
                },
                {
                  "expression": {
                    "id": 13616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13614,
                      "name": "MAXIMUM_AMOUNT_TO_CLAIM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13556,
                      "src": "2626:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13615,
                      "name": "_maximumAmountToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13589,
                      "src": "2652:21:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2626:47:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13617,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:47:58"
                },
                {
                  "expression": {
                    "id": 13622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13618,
                      "name": "omniXToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13546,
                      "src": "2684:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60967",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13620,
                          "name": "_omniXToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13591,
                          "src": "2704:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13619,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60967,
                        "src": "2697:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$60967_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 13621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2697:19:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60967",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2684:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60967",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13623,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:32:58"
                },
                {
                  "expression": {
                    "id": 13626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13624,
                      "name": "TRANSFER_MANAGER_ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13550,
                      "src": "2727:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13625,
                      "name": "_transferManagerERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13597,
                      "src": "2753:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2727:48:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13627,
                  "nodeType": "ExpressionStatement",
                  "src": "2727:48:58"
                },
                {
                  "expression": {
                    "id": 13630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13628,
                      "name": "TRANSFER_MANAGER_ERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13552,
                      "src": "2785:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13629,
                      "name": "_transferManagerERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13599,
                      "src": "2812:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2785:50:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13631,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:50:58"
                },
                {
                  "expression": {
                    "id": 13634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13632,
                      "name": "MAIN_STRATEGY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13548,
                      "src": "2846:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13633,
                      "name": "_mainStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13601,
                      "src": "2862:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2846:29:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13635,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:29:58"
                },
                {
                  "expression": {
                    "id": 13638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13636,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13554,
                      "src": "2885:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13637,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13603,
                      "src": "2892:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2885:12:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13639,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:12:58"
                }
              ]
            },
            "documentation": {
              "id": 13585,
              "nodeType": "StructuredDocumentation",
              "src": "1690:529:58",
              "text": " @notice Constructor\n @param _endTimestamp end timestamp for claiming\n @param _omniXToken address of the OmniX token\n @param _transferManagerERC721 address of the transfer manager for ERC721 for OmniX exchange\n @param _transferManagerERC1155 address of the transfer manager for ERC1155 for OmniX exchange\n @param _mainStrategy main strategy (\"StandardSaleForFixedPrice\")\n @param _weth wrapped ETH address\n @param _maximumAmountToClaim maximum amount to claim per a user"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13606,
                    "name": "domain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13593,
                    "src": "2550:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13607,
                    "name": "domainVersion",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13595,
                    "src": "2558:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13608,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13605,
                  "name": "EIP712",
                  "nameLocations": [
                    "2543:6:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63734,
                  "src": "2543:6:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2543:29:58"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13587,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "2253:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2245:21:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13589,
                  "mutability": "mutable",
                  "name": "_maximumAmountToClaim",
                  "nameLocation": "2284:21:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2276:29:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13591,
                  "mutability": "mutable",
                  "name": "_omniXToken",
                  "nameLocation": "2323:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2315:19:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13593,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "2358:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2344:20:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13595,
                  "mutability": "mutable",
                  "name": "domainVersion",
                  "nameLocation": "2388:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2374:27:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2374:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13597,
                  "mutability": "mutable",
                  "name": "_transferManagerERC721",
                  "nameLocation": "2419:22:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2411:30:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13599,
                  "mutability": "mutable",
                  "name": "_transferManagerERC1155",
                  "nameLocation": "2459:23:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2451:31:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13601,
                  "mutability": "mutable",
                  "name": "_mainStrategy",
                  "nameLocation": "2500:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2492:21:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13603,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "2531:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "2523:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:307:58"
            },
            "returnParameters": {
              "id": 13609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13794,
            "nodeType": "FunctionDefinition",
            "src": "3209:1887:58",
            "nodes": [],
            "body": {
              "id": 13793,
              "nodeType": "Block",
              "src": "3402:1694:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13660,
                        "name": "isMerkleRootSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13558,
                        "src": "3420:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a204d65726b6c6520726f6f74206e6f7420736574",
                        "id": 13661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3437:30:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac22274d51e17a411b3be93cee21202b685ee6f3cae2acefdb02dd628857d4c",
                          "typeString": "literal_string \"Airdrop: Merkle root not set\""
                        },
                        "value": "Airdrop: Merkle root not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac22274d51e17a411b3be93cee21202b685ee6f3cae2acefdb02dd628857d4c",
                          "typeString": "literal_string \"Airdrop: Merkle root not set\""
                        }
                      ],
                      "id": 13659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3412:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3412:56:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13663,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:56:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13665,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13644,
                          "src": "3486:6:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 13666,
                          "name": "MAXIMUM_AMOUNT_TO_CLAIM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13556,
                          "src": "3496:23:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3486:33:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a20416d6f756e7420746f6f2068696768",
                        "id": 13668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:26:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d096d3213c705fd8770a5e42a83b48e9b707bad9825798dd12ea04a59428f51",
                          "typeString": "literal_string \"Airdrop: Amount too high\""
                        },
                        "value": "Airdrop: Amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d096d3213c705fd8770a5e42a83b48e9b707bad9825798dd12ea04a59428f51",
                          "typeString": "literal_string \"Airdrop: Amount too high\""
                        }
                      ],
                      "id": 13664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3478:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:70:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13670,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:70:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13672,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3566:5:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3572:9:58",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3566:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 13674,
                          "name": "endTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13562,
                          "src": "3585:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3566:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a20546f6f206c61746520746f20636c61696d",
                        "id": 13676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3599:28:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a00940830528c12ba8928d805ad14fdd16a4326af117dcd76733848782e3dad8",
                          "typeString": "literal_string \"Airdrop: Too late to claim\""
                        },
                        "value": "Airdrop: Too late to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a00940830528c12ba8928d805ad14fdd16a4326af117dcd76733848782e3dad8",
                          "typeString": "literal_string \"Airdrop: Too late to claim\""
                        }
                      ],
                      "id": 13671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3558:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3558:70:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13678,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:70:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3686:23:58",
                        "subExpression": {
                          "baseExpression": {
                            "id": 13680,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13566,
                            "src": "3687:10:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 13683,
                          "indexExpression": {
                            "expression": {
                              "id": 13681,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3698:3:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3702:6:58",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3698:10:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3687:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a20416c726561647920636c61696d6564",
                        "id": 13685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3711:26:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee9ddc76b6cabead1c9e4432b650ae9a606e5914801b7402405c52d8027e8c98",
                          "typeString": "literal_string \"Airdrop: Already claimed\""
                        },
                        "value": "Airdrop: Already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee9ddc76b6cabead1c9e4432b650ae9a606e5914801b7402405c52d8027e8c98",
                          "typeString": "literal_string \"Airdrop: Already claimed\""
                        }
                      ],
                      "id": 13679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3678:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3678:60:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13687,
                  "nodeType": "ExpressionStatement",
                  "src": "3678:60:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13690,
                            "name": "makerAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13650,
                            "src": "3814:8:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                              "typeString": "struct OrderTypes.MakerOrder calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                              "typeString": "struct OrderTypes.MakerOrder calldata"
                            }
                          ],
                          "id": 13689,
                          "name": "_isOrderMatchingRequirements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13991,
                          "src": "3785:28:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$7333_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct OrderTypes.MakerOrder calldata) view returns (bool)"
                          }
                        },
                        "id": 13691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3785:38:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a204f72646572206e6f7420656c696769626c6520666f722061697264726f70",
                        "id": 13692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3825:41:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d1bf2fa20550776f2f42c58f416d5d9211ba65d35d9c08ba7c846b406a30a4a",
                          "typeString": "literal_string \"Airdrop: Order not eligible for airdrop\""
                        },
                        "value": "Airdrop: Order not eligible for airdrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d1bf2fa20550776f2f42c58f416d5d9211ba65d35d9c08ba7c846b406a30a4a",
                          "typeString": "literal_string \"Airdrop: Order not eligible for airdrop\""
                        }
                      ],
                      "id": 13688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3777:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:90:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13694,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:90:58"
                },
                {
                  "assignments": [
                    13696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13696,
                      "mutability": "mutable",
                      "name": "askHash",
                      "nameLocation": "3914:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 13793,
                      "src": "3906:15:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13695,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3906:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13700,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13697,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13650,
                        "src": "3924:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                          "typeString": "struct OrderTypes.MakerOrder calldata"
                        }
                      },
                      "id": 13698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3933:4:58",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7399,
                      "src": "3924:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$7333_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$7333_memory_ptr_$",
                        "typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:15:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3906:33:58"
                },
                {
                  "assignments": [
                    13702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13702,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "3995:6:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 13793,
                      "src": "3987:14:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13701,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3987:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13704,
                        "name": "askHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13696,
                        "src": "4021:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 13703,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63733,
                      "src": "4004:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 13705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:25:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3987:42:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13712,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13650,
                                "src": "4100:8:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                  "typeString": "struct OrderTypes.MakerOrder calldata"
                                }
                              },
                              "id": 13713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4109:9:58",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7332,
                              "src": "4100:18:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 13708,
                                  "name": "digest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13702,
                                  "src": "4060:6:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 13709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4067:22:58",
                                "memberName": "toEthSignedMessageHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63537,
                                "src": "4060:29:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                  "typeString": "function (bytes32) pure returns (bytes32)"
                                }
                              },
                              "id": 13710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4060:31:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 13711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4092:7:58",
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63346,
                            "src": "4060:39:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 13714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4060:59:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 13715,
                            "name": "makerAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13650,
                            "src": "4123:8:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                              "typeString": "struct OrderTypes.MakerOrder calldata"
                            }
                          },
                          "id": 13716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4132:6:58",
                          "memberName": "signer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7310,
                          "src": "4123:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4060:78:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a205369676e617475726520696e76616c6964",
                        "id": 13718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4152:28:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf165ce49ce2cf5ed04ba1257592aa1dd37097f73f7e738c1edc88d2a3623e4f",
                          "typeString": "literal_string \"Airdrop: Signature invalid\""
                        },
                        "value": "Airdrop: Signature invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf165ce49ce2cf5ed04ba1257592aa1dd37097f73f7e738c1edc88d2a3623e4f",
                          "typeString": "literal_string \"Airdrop: Signature invalid\""
                        }
                      ],
                      "id": 13707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4039:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:151:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13720,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:151:58"
                },
                {
                  "condition": {
                    "id": 13721,
                    "name": "isERC721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13652,
                    "src": "4243:8:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13749,
                    "nodeType": "Block",
                    "src": "4461:204:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 13742,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4547:3:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 13743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4551:6:58",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4547:10:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 13744,
                                  "name": "TRANSFER_MANAGER_ERC1155",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13552,
                                  "src": "4559:24:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13738,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13650,
                                        "src": "4509:8:58",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                          "typeString": "struct OrderTypes.MakerOrder calldata"
                                        }
                                      },
                                      "id": 13739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4518:10:58",
                                      "memberName": "collection",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7312,
                                      "src": "4509:19:58",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 13737,
                                    "name": "IERC1155",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59935,
                                    "src": "4500:8:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1155_$59935_$",
                                      "typeString": "type(contract IERC1155)"
                                    }
                                  },
                                  "id": 13740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4500:29:58",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1155_$59935",
                                    "typeString": "contract IERC1155"
                                  }
                                },
                                "id": 13741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4530:16:58",
                                "memberName": "isApprovedForAll",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59904,
                                "src": "4500:46:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view external returns (bool)"
                                }
                              },
                              "id": 13745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4500:84:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41697264726f703a20436f6c6c656374696f6e206d75737420626520617070726f766564",
                              "id": 13746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4602:38:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e325d6b7ae3c7a74d84196d91b96f79381dfbf3b21b5f773e3feb82cc798df3e",
                                "typeString": "literal_string \"Airdrop: Collection must be approved\""
                              },
                              "value": "Airdrop: Collection must be approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e325d6b7ae3c7a74d84196d91b96f79381dfbf3b21b5f773e3feb82cc798df3e",
                                "typeString": "literal_string \"Airdrop: Collection must be approved\""
                              }
                            ],
                            "id": 13736,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4475:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 13747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4475:179:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13748,
                        "nodeType": "ExpressionStatement",
                        "src": "4475:179:58"
                      }
                    ]
                  },
                  "id": 13750,
                  "nodeType": "IfStatement",
                  "src": "4239:426:58",
                  "trueBody": {
                    "id": 13735,
                    "nodeType": "Block",
                    "src": "4253:202:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 13728,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4338:3:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 13729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4342:6:58",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4338:10:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 13730,
                                  "name": "TRANSFER_MANAGER_ERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13550,
                                  "src": "4350:23:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13724,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13650,
                                        "src": "4300:8:58",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                          "typeString": "struct OrderTypes.MakerOrder calldata"
                                        }
                                      },
                                      "id": 13725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4309:10:58",
                                      "memberName": "collection",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7312,
                                      "src": "4300:19:58",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 13723,
                                    "name": "IERC721",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62417,
                                    "src": "4292:7:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721_$62417_$",
                                      "typeString": "type(contract IERC721)"
                                    }
                                  },
                                  "id": 13726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4292:28:58",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$62417",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                "id": 13727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4321:16:58",
                                "memberName": "isApprovedForAll",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 62416,
                                "src": "4292:45:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view external returns (bool)"
                                }
                              },
                              "id": 13731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4292:82:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41697264726f703a20436f6c6c656374696f6e206d75737420626520617070726f766564",
                              "id": 13732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4392:38:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e325d6b7ae3c7a74d84196d91b96f79381dfbf3b21b5f773e3feb82cc798df3e",
                                "typeString": "literal_string \"Airdrop: Collection must be approved\""
                              },
                              "value": "Airdrop: Collection must be approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e325d6b7ae3c7a74d84196d91b96f79381dfbf3b21b5f773e3feb82cc798df3e",
                                "typeString": "literal_string \"Airdrop: Collection must be approved\""
                              }
                            ],
                            "id": 13722,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4267:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 13733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4267:177:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13734,
                        "nodeType": "ExpressionStatement",
                        "src": "4267:177:58"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    13752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13752,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "4739:4:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 13793,
                      "src": "4731:12:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4731:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13761,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13756,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4773:3:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4777:6:58",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4773:10:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13758,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13644,
                            "src": "4785:6:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 13754,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4756:3:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4760:12:58",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4756:16:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4756:36:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13753,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4746:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4746:47:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4731:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13765,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13647,
                            "src": "4830:11:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 13766,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13560,
                            "src": "4843:10:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 13767,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13752,
                            "src": "4855:4:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 13763,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64236,
                            "src": "4811:11:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$64236_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 13764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4823:6:58",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63758,
                          "src": "4811:18:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 13768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4811:49:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f703a20496e76616c69642070726f6f66",
                        "id": 13769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4862:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ce71983775c69342c400ec69c9030b26e42cdd88f76795ddb989ef19e141684",
                          "typeString": "literal_string \"Airdrop: Invalid proof\""
                        },
                        "value": "Airdrop: Invalid proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ce71983775c69342c400ec69c9030b26e42cdd88f76795ddb989ef19e141684",
                          "typeString": "literal_string \"Airdrop: Invalid proof\""
                        }
                      ],
                      "id": 13762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4803:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4803:84:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13771,
                  "nodeType": "ExpressionStatement",
                  "src": "4803:84:58"
                },
                {
                  "expression": {
                    "id": 13777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13772,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13566,
                        "src": "4924:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13775,
                      "indexExpression": {
                        "expression": {
                          "id": 13773,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4935:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4939:6:58",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4935:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4924:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 13776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4949:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4924:29:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13778,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:29:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5015:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5019:6:58",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5015:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13784,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13644,
                        "src": "5027:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13779,
                        "name": "omniXToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13546,
                        "src": "4991:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$60967",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5002:12:58",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61125,
                      "src": "4991:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$60967_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$60967_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:43:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13786,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:43:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13788,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5070:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5074:6:58",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5070:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13790,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13644,
                        "src": "5082:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13787,
                      "name": "AirdropRewardsClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13572,
                      "src": "5050:19:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5050:39:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13792,
                  "nodeType": "EmitStatement",
                  "src": "5045:44:58"
                }
              ]
            },
            "documentation": {
              "id": 13642,
              "nodeType": "StructuredDocumentation",
              "src": "2910:294:58",
              "text": " @notice Claim tokens for airdrop\n @param amount amount to claim for the airdrop\n @param merkleProof array containing the merkle proof\n @param makerAsk makerAsk order\n @param isERC721 whether the order is for ERC721 (true --> ERC721/ false --> ERC1155)"
            },
            "functionSelector": "b734da09",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13654,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3375:13:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58463,
                  "src": "3375:13:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "3375:13:58"
              },
              {
                "id": 13657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13656,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3389:12:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58566,
                  "src": "3389:12:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "3389:12:58"
              }
            ],
            "name": "claim",
            "nameLocation": "3218:5:58",
            "parameters": {
              "id": 13653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13644,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3241:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "3233:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13647,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3276:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "3257:30:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13645,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3257:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13646,
                    "nodeType": "ArrayTypeName",
                    "src": "3257:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13650,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "3328:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "3297:39:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                    "typeString": "struct OrderTypes.MakerOrder"
                  },
                  "typeName": {
                    "id": 13649,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13648,
                      "name": "OrderTypes.MakerOrder",
                      "nameLocations": [
                        "3297:10:58",
                        "3308:10:58"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7333,
                      "src": "3297:21:58"
                    },
                    "referencedDeclaration": 7333,
                    "src": "3297:21:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$7333_storage_ptr",
                      "typeString": "struct OrderTypes.MakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13652,
                  "mutability": "mutable",
                  "name": "isERC721",
                  "nameLocation": "3351:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "3346:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3223:142:58"
            },
            "returnParameters": {
              "id": 13658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3402:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13834,
            "nodeType": "FunctionDefinition",
            "src": "5333:446:58",
            "nodes": [],
            "body": {
              "id": 13833,
              "nodeType": "Block",
              "src": "5472:307:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13807,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5486:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 13808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5492:9:58",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5486:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 13809,
                      "name": "endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13562,
                      "src": "5505:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5486:31:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13831,
                    "nodeType": "Block",
                    "src": "5736:37:58",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 13829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5757:5:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 13806,
                        "id": 13830,
                        "nodeType": "Return",
                        "src": "5750:12:58"
                      }
                    ]
                  },
                  "id": 13832,
                  "nodeType": "IfStatement",
                  "src": "5482:291:58",
                  "trueBody": {
                    "id": 13828,
                    "nodeType": "Block",
                    "src": "5519:211:58",
                    "statements": [
                      {
                        "assignments": [
                          13812
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13812,
                            "mutability": "mutable",
                            "name": "node",
                            "nameLocation": "5601:4:58",
                            "nodeType": "VariableDeclaration",
                            "scope": 13828,
                            "src": "5593:12:58",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 13811,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5593:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13820,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13816,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13797,
                                  "src": "5635:4:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 13817,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13799,
                                  "src": "5641:6:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 13814,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5618:3:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 13815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5622:12:58",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5618:16:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 13818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5618:30:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 13813,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5608:9:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 13819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5608:41:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5593:56:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13823,
                              "name": "merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13802,
                              "src": "5689:11:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                "typeString": "bytes32[] calldata"
                              }
                            },
                            {
                              "id": 13824,
                              "name": "merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13560,
                              "src": "5702:10:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 13825,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13812,
                              "src": "5714:4:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                "typeString": "bytes32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 13821,
                              "name": "MerkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64236,
                              "src": "5670:11:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MerkleProof_$64236_$",
                                "typeString": "type(library MerkleProof)"
                              }
                            },
                            "id": 13822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5682:6:58",
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63758,
                            "src": "5670:18:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 13826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5670:49:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 13806,
                        "id": 13827,
                        "nodeType": "Return",
                        "src": "5663:56:58"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13795,
              "nodeType": "StructuredDocumentation",
              "src": "5102:226:58",
              "text": " @notice Check whether it is possible to claim (it doesn't check orders)\n @param user address of the user\n @param amount amount to claim\n @param merkleProof array containing the merkle proof"
            },
            "functionSelector": "dc38bdb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canClaim",
            "nameLocation": "5342:8:58",
            "parameters": {
              "id": 13803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13797,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5368:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13834,
                  "src": "5360:12:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5360:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13799,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5390:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13834,
                  "src": "5382:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13802,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "5425:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13834,
                  "src": "5406:30:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13800,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5406:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13801,
                    "nodeType": "ArrayTypeName",
                    "src": "5406:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5350:92:58"
            },
            "returnParameters": {
              "id": 13806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13834,
                  "src": "5466:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5465:6:58"
            },
            "scope": 13992,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13846,
            "nodeType": "FunctionDefinition",
            "src": "5830:82:58",
            "nodes": [],
            "body": {
              "id": 13845,
              "nodeType": "Block",
              "src": "5887:25:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13842,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58519,
                      "src": "5897:6:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5897:8:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13844,
                  "nodeType": "ExpressionStatement",
                  "src": "5897:8:58"
                }
              ]
            },
            "documentation": {
              "id": 13835,
              "nodeType": "StructuredDocumentation",
              "src": "5785:40:58",
              "text": " @notice Pause airdrop"
            },
            "functionSelector": "c6afd5bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13838,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13837,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5863:9:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "5863:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "5863:9:58"
              },
              {
                "id": 13840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13839,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5873:13:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58463,
                  "src": "5873:13:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "5873:13:58"
              }
            ],
            "name": "pauseAirdrop",
            "nameLocation": "5839:12:58",
            "parameters": {
              "id": 13836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5851:2:58"
            },
            "returnParameters": {
              "id": 13841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5887:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13873,
            "nodeType": "FunctionDefinition",
            "src": "6015:248:58",
            "nodes": [],
            "body": {
              "id": 13872,
              "nodeType": "Block",
              "src": "6078:185:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6096:16:58",
                        "subExpression": {
                          "id": 13855,
                          "name": "isMerkleRootSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13558,
                          "src": "6097:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65723a204d65726b6c6520726f6f7420616c726561647920736574",
                        "id": 13857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6114:32:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_256dac85b926679d1b3007983b7209396b51286afc85189729a0f010d4962c3a",
                          "typeString": "literal_string \"Owner: Merkle root already set\""
                        },
                        "value": "Owner: Merkle root already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_256dac85b926679d1b3007983b7209396b51286afc85189729a0f010d4962c3a",
                          "typeString": "literal_string \"Owner: Merkle root already set\""
                        }
                      ],
                      "id": 13854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6088:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6088:59:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13859,
                  "nodeType": "ExpressionStatement",
                  "src": "6088:59:58"
                },
                {
                  "expression": {
                    "id": 13862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13860,
                      "name": "isMerkleRootSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13558,
                      "src": "6158:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 13861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6176:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6158:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13863,
                  "nodeType": "ExpressionStatement",
                  "src": "6158:22:58"
                },
                {
                  "expression": {
                    "id": 13866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13864,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13560,
                      "src": "6190:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13865,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13849,
                      "src": "6203:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6190:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 13867,
                  "nodeType": "ExpressionStatement",
                  "src": "6190:24:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13869,
                        "name": "_merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13849,
                        "src": "6244:11:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 13868,
                      "name": "MerkleRootSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13576,
                      "src": "6230:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 13870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6230:26:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13871,
                  "nodeType": "EmitStatement",
                  "src": "6225:31:58"
                }
              ]
            },
            "documentation": {
              "id": 13847,
              "nodeType": "StructuredDocumentation",
              "src": "5918:92:58",
              "text": " @notice Set merkle root for airdrop\n @param _merkleRoot merkle root"
            },
            "functionSelector": "7cb64759",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13851,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6068:9:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "6068:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "6068:9:58"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "6024:13:58",
            "parameters": {
              "id": 13850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13849,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "6046:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13873,
                  "src": "6038:19:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6037:21:58"
            },
            "returnParameters": {
              "id": 13853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6078:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13885,
            "nodeType": "FunctionDefinition",
            "src": "6316:83:58",
            "nodes": [],
            "body": {
              "id": 13884,
              "nodeType": "Block",
              "src": "6372:27:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13881,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58535,
                      "src": "6382:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:10:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13883,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:10:58"
                }
              ]
            },
            "documentation": {
              "id": 13874,
              "nodeType": "StructuredDocumentation",
              "src": "6269:42:58",
              "text": " @notice Unpause airdrop"
            },
            "functionSelector": "e96ad3ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13876,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6351:9:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "6351:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "6351:9:58"
              },
              {
                "id": 13879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13878,
                  "name": "whenPaused",
                  "nameLocations": [
                    "6361:10:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58471,
                  "src": "6361:10:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "6361:10:58"
              }
            ],
            "name": "unpauseAirdrop",
            "nameLocation": "6325:14:58",
            "parameters": {
              "id": 13875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:2:58"
            },
            "returnParameters": {
              "id": 13880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6372:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13912,
            "nodeType": "FunctionDefinition",
            "src": "6539:261:58",
            "nodes": [],
            "body": {
              "id": 13911,
              "nodeType": "Block",
              "src": "6611:189:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13894,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6629:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 13895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6635:9:58",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6629:15:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 13896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6647:7:58",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "6629:25:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 13898,
                          "name": "newEndTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13888,
                          "src": "6657:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6629:43:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65723a204e65772074696d657374616d7020746f6f20666172",
                        "id": 13900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6674:30:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2939706313ec44af8c4890491af2cbff7fc4b8ab87cb00c4e3390d222c7dcae6",
                          "typeString": "literal_string \"Owner: New timestamp too far\""
                        },
                        "value": "Owner: New timestamp too far"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2939706313ec44af8c4890491af2cbff7fc4b8ab87cb00c4e3390d222c7dcae6",
                          "typeString": "literal_string \"Owner: New timestamp too far\""
                        }
                      ],
                      "id": 13893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6621:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6621:84:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13902,
                  "nodeType": "ExpressionStatement",
                  "src": "6621:84:58"
                },
                {
                  "expression": {
                    "id": 13905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13903,
                      "name": "endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13562,
                      "src": "6715:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13904,
                      "name": "newEndTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13888,
                      "src": "6730:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6715:30:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13906,
                  "nodeType": "ExpressionStatement",
                  "src": "6715:30:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13908,
                        "name": "newEndTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13888,
                        "src": "6777:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13907,
                      "name": "NewEndTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13580,
                      "src": "6761:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6761:32:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13910,
                  "nodeType": "EmitStatement",
                  "src": "6756:37:58"
                }
              ]
            },
            "documentation": {
              "id": 13886,
              "nodeType": "StructuredDocumentation",
              "src": "6405:129:58",
              "text": " @notice Update end timestamp\n @param newEndTimestamp new endtimestamp\n @dev Must be within 30 days"
            },
            "functionSelector": "6e1613fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13890,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6601:9:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "6601:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "6601:9:58"
              }
            ],
            "name": "updateEndTimestamp",
            "nameLocation": "6548:18:58",
            "parameters": {
              "id": 13889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13888,
                  "mutability": "mutable",
                  "name": "newEndTimestamp",
                  "nameLocation": "6575:15:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13912,
                  "src": "6567:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6567:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6566:25:58"
            },
            "returnParameters": {
              "id": 13892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6611:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13952,
            "nodeType": "FunctionDefinition",
            "src": "6867:343:58",
            "nodes": [],
            "body": {
              "id": 13951,
              "nodeType": "Block",
              "src": "6918:292:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13919,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6936:5:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6942:9:58",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6936:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 13921,
                                "name": "endTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13562,
                                "src": "6955:12:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 13922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6970:6:58",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              },
                              "src": "6955:21:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 13924,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6954:23:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6936:41:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65723a20546f6f206561726c7920746f2072656d6f76652072657761726473",
                        "id": 13926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6979:36:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d7fcc131b3f00c982612e7f1617474acb56abdb64b7f9c8f8ec413e9a2d9fc",
                          "typeString": "literal_string \"Owner: Too early to remove rewards\""
                        },
                        "value": "Owner: Too early to remove rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d7fcc131b3f00c982612e7f1617474acb56abdb64b7f9c8f8ec413e9a2d9fc",
                          "typeString": "literal_string \"Owner: Too early to remove rewards\""
                        }
                      ],
                      "id": 13918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6928:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:88:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13928,
                  "nodeType": "ExpressionStatement",
                  "src": "6928:88:58"
                },
                {
                  "assignments": [
                    13930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13930,
                      "mutability": "mutable",
                      "name": "balanceToWithdraw",
                      "nameLocation": "7034:17:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 13951,
                      "src": "7026:25:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13929,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7026:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13938,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13935,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7083:4:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OmniXAirdrop_$13992",
                              "typeString": "contract OmniXAirdrop"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OmniXAirdrop_$13992",
                              "typeString": "contract OmniXAirdrop"
                            }
                          ],
                          "id": 13934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7075:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13933,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7075:7:58",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7075:13:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13931,
                        "name": "omniXToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13546,
                        "src": "7054:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$60967",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7065:9:58",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60924,
                      "src": "7054:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7054:35:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7026:63:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13942,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7123:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7127:6:58",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7123:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13944,
                        "name": "balanceToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13930,
                        "src": "7135:17:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13939,
                        "name": "omniXToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13546,
                        "src": "7099:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$60967",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7110:12:58",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61125,
                      "src": "7099:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$60967_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$60967_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7099:54:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13946,
                  "nodeType": "ExpressionStatement",
                  "src": "7099:54:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13948,
                        "name": "balanceToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13930,
                        "src": "7185:17:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13947,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13584,
                      "src": "7169:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7169:34:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13950,
                  "nodeType": "EmitStatement",
                  "src": "7164:39:58"
                }
              ]
            },
            "documentation": {
              "id": 13913,
              "nodeType": "StructuredDocumentation",
              "src": "6806:56:58",
              "text": " @notice Transfer tokens back to owner"
            },
            "functionSelector": "15618acd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13916,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13915,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6908:9:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "6908:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "6908:9:58"
              }
            ],
            "name": "withdrawTokenRewards",
            "nameLocation": "6876:20:58",
            "parameters": {
              "id": 13914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6896:2:58"
            },
            "returnParameters": {
              "id": 13917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6918:0:58"
            },
            "scope": 13992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13991,
            "nodeType": "FunctionDefinition",
            "src": "7342:344:58",
            "nodes": [],
            "body": {
              "id": 13990,
              "nodeType": "Block",
              "src": "7450:236:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 13988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 13982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 13970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "expression": {
                                  "id": 13961,
                                  "name": "makerAsk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13956,
                                  "src": "7480:8:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                    "typeString": "struct OrderTypes.MakerOrder calldata"
                                  }
                                },
                                "id": 13962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7489:10:58",
                                "memberName": "isOrderAsk",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7308,
                                "src": "7480:19:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 13963,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7479:21:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 13968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 13964,
                                    "name": "makerAsk",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13956,
                                    "src": "7517:8:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                      "typeString": "struct OrderTypes.MakerOrder calldata"
                                    }
                                  },
                                  "id": 13965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7526:6:58",
                                  "memberName": "signer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7310,
                                  "src": "7517:15:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 13966,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7536:3:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 13967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7540:6:58",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7536:10:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7517:29:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 13969,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7516:31:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7479:68:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 13971,
                                  "name": "makerAsk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13956,
                                  "src": "7564:8:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                    "typeString": "struct OrderTypes.MakerOrder calldata"
                                  }
                                },
                                "id": 13972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7573:6:58",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7318,
                                "src": "7564:15:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 13973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7582:1:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7564:19:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 13975,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7563:21:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7479:105:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 13980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 13977,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13956,
                                "src": "7601:8:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                  "typeString": "struct OrderTypes.MakerOrder calldata"
                                }
                              },
                              "id": 13978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7610:8:58",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7322,
                              "src": "7601:17:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 13979,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13554,
                              "src": "7622:4:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7601:25:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 13981,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7600:27:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7479:148:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13983,
                              "name": "makerAsk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13956,
                              "src": "7644:8:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                "typeString": "struct OrderTypes.MakerOrder calldata"
                              }
                            },
                            "id": 13984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7653:8:58",
                            "memberName": "strategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7320,
                            "src": "7644:17:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 13985,
                            "name": "MAIN_STRATEGY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13548,
                            "src": "7665:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7644:34:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 13987,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7643:36:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7479:200:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13960,
                  "id": 13989,
                  "nodeType": "Return",
                  "src": "7460:219:58"
                }
              ]
            },
            "documentation": {
              "id": 13953,
              "nodeType": "StructuredDocumentation",
              "src": "7216:121:58",
              "text": " @notice Check whether order is matching requirements for airdrop\n @param makerAsk makerAsk order"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOrderMatchingRequirements",
            "nameLocation": "7351:28:58",
            "parameters": {
              "id": 13957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13956,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "7411:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 13991,
                  "src": "7380:39:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                    "typeString": "struct OrderTypes.MakerOrder"
                  },
                  "typeName": {
                    "id": 13955,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13954,
                      "name": "OrderTypes.MakerOrder",
                      "nameLocations": [
                        "7380:10:58",
                        "7391:10:58"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7333,
                      "src": "7380:21:58"
                    },
                    "referencedDeclaration": 7333,
                    "src": "7380:21:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$7333_storage_ptr",
                      "typeString": "struct OrderTypes.MakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7379:41:58"
            },
            "returnParameters": {
              "id": 13960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13991,
                  "src": "7444:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7444:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7443:6:58"
            },
            "scope": 13992,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13525,
              "name": "EIP712",
              "nameLocations": [
                "889:6:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63734,
              "src": "889:6:58"
            },
            "id": 13526,
            "nodeType": "InheritanceSpecifier",
            "src": "889:6:58"
          },
          {
            "baseName": {
              "id": 13527,
              "name": "Pausable",
              "nameLocations": [
                "897:8:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58536,
              "src": "897:8:58"
            },
            "id": 13528,
            "nodeType": "InheritanceSpecifier",
            "src": "897:8:58"
          },
          {
            "baseName": {
              "id": 13529,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "907:15:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58590,
              "src": "907:15:58"
            },
            "id": 13530,
            "nodeType": "InheritanceSpecifier",
            "src": "907:15:58"
          },
          {
            "baseName": {
              "id": 13531,
              "name": "Ownable",
              "nameLocations": [
                "924:7:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58409,
              "src": "924:7:58"
            },
            "id": 13532,
            "nodeType": "InheritanceSpecifier",
            "src": "924:7:58"
          }
        ],
        "canonicalName": "OmniXAirdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13524,
          "nodeType": "StructuredDocumentation",
          "src": "766:97:58",
          "text": " @title OmniXAirdrop\n @notice It distributes LOOKS tokens with a Merkle-tree airdrop."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13992,
          58409,
          58590,
          58536,
          62970,
          63734
        ],
        "name": "OmniXAirdrop",
        "nameLocation": "873:12:58",
        "scope": 13993,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 58
}