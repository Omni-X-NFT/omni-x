{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "NewProtocolFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderTypes.TakerOrder",
          "name": "takerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderTypes.MakerOrder",
          "name": "makerBid",
          "type": "tuple"
        }
      ],
      "name": "canExecuteTakerAsk",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderTypes.TakerOrder",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderTypes.MakerOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "canExecuteTakerBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewProtocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260c860015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107a8806100836000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639dd1cda61161005b5780639dd1cda6146100bf578063a22233b5146100d0578063c346b3b914610106578063f2fde38b1461011957600080fd5b8063715018a614610082578063787dce3d1461008c5780638da5cb5b1461009f575b600080fd5b61008a61012c565b005b61008a61009a3660046103a5565b610140565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6001546040519081526020016100b6565b6100e96100de3660046103be565b600080809250925092565b6040805193151584526020840192909252908201526060016100b6565b6100e96101143660046103be565b610183565b61008a610127366004610447565b6101ea565b610134610268565b61013e60006102c2565b565b610148610268565b60018190556040518181527f3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a69060200160405180910390a150565b600080808061019961019487610507565b610312565b9450505050506101b28560600135876040013583610344565b80156101c357504285610120013511155b80156101d457504285610140013510155b966080860135965060a090950135949350505050565b6101f2610268565b6001600160a01b03811661025c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610265816102c2565b50565b6000546001600160a01b0316331461013e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610253565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806000856080015180602001905181019061033291906105ac565b939a9299509097509550909350915050565b600081600003610357575082821461039e565b606482101561037e5761036b82600a61071a565b6103759084610726565b8414905061039e565b61038960648361073d565b61039490600a61071a565b6103759084610750565b9392505050565b6000602082840312156103b757600080fd5b5035919050565b600080604083850312156103d157600080fd5b823567ffffffffffffffff808211156103e957600080fd5b9084019060a082870312156103fd57600080fd5b9092506020840135908082111561041357600080fd5b5083016101a0818603121561042757600080fd5b809150509250929050565b6001600160a01b038116811461026557600080fd5b60006020828403121561045957600080fd5b813561039e81610432565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261048b57600080fd5b813567ffffffffffffffff808211156104a6576104a6610464565b604051601f8301601f19908116603f011681019082821181831017156104ce576104ce610464565b816040528381528660208588010111156104e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060a0823603121561051957600080fd5b60405160a0810167ffffffffffffffff828210818311171561053d5761053d610464565b8160405284359150811515821461055357600080fd5b90825260208401359061056582610432565b8160208401526040850135604084015260608501356060840152608085013591508082111561059357600080fd5b506105a03682860161047a565b60808301525092915050565b600080600080600060a086880312156105c457600080fd5b855161ffff811681146105d657600080fd5b60208701519095506105e781610432565b60408701519094506105f881610432565b606087015190935061060981610432565b80925050608086015190509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561066f5781600019048211156106555761065561061e565b8085161561066257918102915b93841c9390800290610639565b509250929050565b60008261068657506001610714565b8161069357506000610714565b81600181146106a957600281146106b3576106cf565b6001915050610714565b60ff8411156106c4576106c461061e565b50506001821b610714565b5060208310610133831016604e8410600b84101617156106f2575081810a610714565b6106fc8383610634565b80600019048211156107105761071061061e565b0290505b92915050565b600061039e8383610677565b80820281158282048414176107145761071461061e565b818103818111156107145761071461061e565b60008261076d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e6dd274ba9b15a37bff5db4bc03614f9cbafbf1363dc91c331e5fabb8574755964736f6c63430008110033",
    "sourceMap": "415:2579:72:-:0;;;636:3;604:35;;415:2579;;;;;;;;;-1:-1:-1;936:32:142;719:10:167;936:18:142;:32::i;:::-;415:2579:72;;2433:187:142;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;415:2579:72:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80639dd1cda61161005b5780639dd1cda6146100bf578063a22233b5146100d0578063c346b3b914610106578063f2fde38b1461011957600080fd5b8063715018a614610082578063787dce3d1461008c5780638da5cb5b1461009f575b600080fd5b61008a61012c565b005b61008a61009a3660046103a5565b610140565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6001546040519081526020016100b6565b6100e96100de3660046103be565b600080809250925092565b6040805193151584526020840192909252908201526060016100b6565b6100e96101143660046103be565b610183565b61008a610127366004610447565b6101ea565b610134610268565b61013e60006102c2565b565b610148610268565b60018190556040518181527f3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a69060200160405180910390a150565b600080808061019961019487610507565b610312565b9450505050506101b28560600135876040013583610344565b80156101c357504285610120013511155b80156101d457504285610140013510155b966080860135965060a090950135949350505050565b6101f2610268565b6001600160a01b03811661025c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610265816102c2565b50565b6000546001600160a01b0316331461013e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610253565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806000856080015180602001905181019061033291906105ac565b939a9299509097509550909350915050565b600081600003610357575082821461039e565b606482101561037e5761036b82600a61071a565b6103759084610726565b8414905061039e565b61038960648361073d565b61039490600a61071a565b6103759084610750565b9392505050565b6000602082840312156103b757600080fd5b5035919050565b600080604083850312156103d157600080fd5b823567ffffffffffffffff808211156103e957600080fd5b9084019060a082870312156103fd57600080fd5b9092506020840135908082111561041357600080fd5b5083016101a0818603121561042757600080fd5b809150509250929050565b6001600160a01b038116811461026557600080fd5b60006020828403121561045957600080fd5b813561039e81610432565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261048b57600080fd5b813567ffffffffffffffff808211156104a6576104a6610464565b604051601f8301601f19908116603f011681019082821181831017156104ce576104ce610464565b816040528381528660208588010111156104e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060a0823603121561051957600080fd5b60405160a0810167ffffffffffffffff828210818311171561053d5761053d610464565b8160405284359150811515821461055357600080fd5b90825260208401359061056582610432565b8160208401526040850135604084015260608501356060840152608085013591508082111561059357600080fd5b506105a03682860161047a565b60808301525092915050565b600080600080600060a086880312156105c457600080fd5b855161ffff811681146105d657600080fd5b60208701519095506105e781610432565b60408701519094506105f881610432565b606087015190935061060981610432565b80925050608086015190509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561066f5781600019048211156106555761065561061e565b8085161561066257918102915b93841c9390800290610639565b509250929050565b60008261068657506001610714565b8161069357506000610714565b81600181146106a957600281146106b3576106cf565b6001915050610714565b60ff8411156106c4576106c461061e565b50506001821b610714565b5060208310610133831016604e8410600b84101617156106f2575081810a610714565b6106fc8383610634565b80600019048211156107105761071061061e565b0290505b92915050565b600061039e8383610677565b80820281158282048414176107145761071461061e565b818103818111156107145761071461061e565b60008261076d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e6dd274ba9b15a37bff5db4bc03614f9cbafbf1363dc91c331e5fabb8574755964736f6c63430008110033",
    "sourceMap": "415:2579:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:142;;;:::i;:::-;;2626:159:72;;;;;;:::i;:::-;;:::i;1201:85:142:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:142;;;345:51:189;;333:2;318:18;1201:85:142;;;;;;;;2888:104:72;2973:12;;2888:104;;553:25:189;;;541:2;526:18;2888:104:72;407:177:189;2241:267:72;;;;;;:::i;:::-;2410:4;;;2241:267;;;;;;;;;;1494:14:189;;1487:22;1469:41;;1541:2;1526:18;;1519:34;;;;1569:18;;;1562:34;1457:2;1442:18;2241:267:72;1273:329:189;1444:593:72;;;;;;:::i;:::-;;:::i;2081:198:142:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2626:159:72:-;1094:13:142;:11;:13::i;:::-;2703:12:72::1;:29:::0;;;2748:30:::1;::::0;553:25:189;;;2748:30:72::1;::::0;541:2:189;526:18;2748:30:72::1;;;;;;;2626:159:::0;:::o;1444:593::-;1631:4;;;;1731:23;:21;:8;:21;:::i;:::-;;:23::i;:::-;1702:52;;;;;;1786:58;1799:8;:14;;;1815:8;:14;;;1831:12;1786;:58::i;:::-;:117;;;;;1887:15;1865:8;:18;;;:37;;1786:117;:174;;;;;1944:15;1924:8;:16;;;:35;;1786:174;1764:266;1975:16;;;;;-1:-1:-1;2005:15:72;;;;;;1444:593;-1:-1:-1;;;;1444:593:72:o;2081:198:142:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:142;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:142;;4094:2:189;2161:73:142::1;::::0;::::1;4076:21:189::0;4133:2;4113:18;;;4106:30;4172:34;4152:18;;;4145:62;-1:-1:-1;;;4223:18:189;;;4216:36;4269:19;;2161:73:142::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:142;719:10:167;1422:23:142;1414:68;;;;-1:-1:-1;;;1414:68:142;;4501:2:189;1414:68:142;;;4483:21:189;;;4520:18;;;4513:30;4579:34;4559:18;;;4552:62;4631:18;;1414:68:142;4299:356:189;2433:187:142;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3081:298:40:-;3165:6;3173:7;3182;3191;3200;3308:10;:17;;;3297:75;;;;;;;;;;;;:::i;:::-;3290:82;;;;-1:-1:-1;3290:82:40;;-1:-1:-1;3290:82:40;-1:-1:-1;3290:82:40;;-1:-1:-1;3081:298:40;-1:-1:-1;;3081:298:40:o;695:467:72:-;794:4;887:12;903:1;887:17;883:273;;-1:-1:-1;927:16:72;;;920:23;;883:273;987:3;972:12;:18;968:188;;;1033:18;1039:12;1033:2;:18;:::i;:::-;1024:27;;:6;:27;:::i;:::-;1014:6;:37;1006:46;;;;968:188;1125:18;1140:3;1125:12;:18;:::i;:::-;1118:26;;:2;:26;:::i;:::-;1109:35;;:6;:35;:::i;968:188::-;695:467;;;;;:::o;14:180:189:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:189;;14:180;-1:-1:-1;14:180:189:o;589:679::-;717:6;725;778:2;766:9;757:7;753:23;749:32;746:52;;;794:1;791;784:12;746:52;834:9;821:23;863:18;904:2;896:6;893:14;890:34;;;920:1;917;910:12;890:34;943:22;;;;999:3;981:16;;;977:26;974:46;;;1016:1;1013;1006:12;974:46;1039:2;;-1:-1:-1;1094:2:189;1079:18;;1066:32;;1110:16;;;1107:36;;;1139:1;1136;1129:12;1107:36;-1:-1:-1;1162:24:189;;1220:3;1202:16;;;1198:26;1195:46;;;1237:1;1234;1227:12;1195:46;1260:2;1250:12;;;589:679;;;;;:::o;1607:131::-;-1:-1:-1;;;;;1682:31:189;;1672:42;;1662:70;;1728:1;1725;1718:12;1743:247;1802:6;1855:2;1843:9;1834:7;1830:23;1826:32;1823:52;;;1871:1;1868;1861:12;1823:52;1910:9;1897:23;1929:31;1954:5;1929:31;:::i;1995:127::-;2056:10;2051:3;2047:20;2044:1;2037:31;2087:4;2084:1;2077:15;2111:4;2108:1;2101:15;2127:718;2169:5;2222:3;2215:4;2207:6;2203:17;2199:27;2189:55;;2240:1;2237;2230:12;2189:55;2276:6;2263:20;2302:18;2339:2;2335;2332:10;2329:36;;;2345:18;;:::i;:::-;2420:2;2414:9;2388:2;2474:13;;-1:-1:-1;;2470:22:189;;;2494:2;2466:31;2462:40;2450:53;;;2518:18;;;2538:22;;;2515:46;2512:72;;;2564:18;;:::i;:::-;2604:10;2600:2;2593:22;2639:2;2631:6;2624:18;2685:3;2678:4;2673:2;2665:6;2661:15;2657:26;2654:35;2651:55;;;2702:1;2699;2692:12;2651:55;2766:2;2759:4;2751:6;2747:17;2740:4;2732:6;2728:17;2715:54;2813:1;2806:4;2801:2;2793:6;2789:15;2785:26;2778:37;2833:6;2824:15;;;;;;2127:718;;;;:::o;2850:1037::-;2958:9;3017:4;3009:5;2993:14;2989:26;2985:37;2982:57;;;3035:1;3032;3025:12;2982:57;3068:2;3062:9;3110:4;3102:6;3098:17;3134:18;3202:6;3190:10;3187:22;3182:2;3170:10;3167:18;3164:46;3161:72;;;3213:18;;:::i;:::-;3253:10;3249:2;3242:22;3301:5;3288:19;3273:34;;3352:7;3345:15;3338:23;3329:7;3326:36;3316:64;;3376:1;3373;3366:12;3316:64;3389:23;;;3460:2;3449:14;;3436:28;;3473:33;3436:28;3473:33;:::i;:::-;3539:7;3534:2;3526:6;3522:15;3515:32;3604:2;3597:5;3593:14;3580:28;3575:2;3567:6;3563:15;3556:53;3666:2;3659:5;3655:14;3642:28;3637:2;3629:6;3625:15;3618:53;3718:3;3711:5;3707:15;3694:29;3680:43;;3746:2;3738:6;3735:14;3732:34;;;3762:1;3759;3752:12;3732:34;;3800:52;3837:14;3828:6;3821:5;3817:18;3800:52;:::i;:::-;3794:3;3782:16;;3775:78;-1:-1:-1;3786:6:189;2850:1037;-1:-1:-1;;2850:1037:189:o;4660:765::-;4789:6;4797;4805;4813;4821;4874:3;4862:9;4853:7;4849:23;4845:33;4842:53;;;4891:1;4888;4881:12;4842:53;4923:9;4917:16;4973:6;4966:5;4962:18;4955:5;4952:29;4942:57;;4995:1;4992;4985:12;4942:57;5068:2;5053:18;;5047:25;5018:5;;-1:-1:-1;5081:33:189;5047:25;5081:33;:::i;:::-;5185:2;5170:18;;5164:25;5133:7;;-1:-1:-1;5198:33:189;5164:25;5198:33;:::i;:::-;5302:2;5287:18;;5281:25;5250:7;;-1:-1:-1;5315:33:189;5281:25;5315:33;:::i;:::-;5367:7;5357:17;;;5414:3;5403:9;5399:19;5393:26;5383:36;;4660:765;;;;;;;;:::o;5430:127::-;5491:10;5486:3;5482:20;5479:1;5472:31;5522:4;5519:1;5512:15;5546:4;5543:1;5536:15;5562:422;5651:1;5694:5;5651:1;5708:270;5729:7;5719:8;5716:21;5708:270;;;5788:4;5784:1;5780:6;5776:17;5770:4;5767:27;5764:53;;;5797:18;;:::i;:::-;5847:7;5837:8;5833:22;5830:55;;;5867:16;;;;5830:55;5946:22;;;;5906:15;;;;5708:270;;;5712:3;5562:422;;;;;:::o;5989:806::-;6038:5;6068:8;6058:80;;-1:-1:-1;6109:1:189;6123:5;;6058:80;6157:4;6147:76;;-1:-1:-1;6194:1:189;6208:5;;6147:76;6239:4;6257:1;6252:59;;;;6325:1;6320:130;;;;6232:218;;6252:59;6282:1;6273:10;;6296:5;;;6320:130;6357:3;6347:8;6344:17;6341:43;;;6364:18;;:::i;:::-;-1:-1:-1;;6420:1:189;6406:16;;6435:5;;6232:218;;6534:2;6524:8;6521:16;6515:3;6509:4;6506:13;6502:36;6496:2;6486:8;6483:16;6478:2;6472:4;6469:12;6465:35;6462:77;6459:159;;;-1:-1:-1;6571:19:189;;;6603:5;;6459:159;6650:34;6675:8;6669:4;6650:34;:::i;:::-;6720:6;6716:1;6712:6;6708:19;6699:7;6696:32;6693:58;;;6731:18;;:::i;:::-;6769:20;;-1:-1:-1;5989:806:189;;;;;:::o;6800:131::-;6860:5;6889:36;6916:8;6910:4;6889:36;:::i;6936:168::-;7009:9;;;7040;;7057:15;;;7051:22;;7037:37;7027:71;;7078:18;;:::i;7109:128::-;7176:9;;;7197:11;;;7194:37;;;7211:18;;:::i;7242:217::-;7282:1;7308;7298:132;;7352:10;7347:3;7343:20;7340:1;7333:31;7387:4;7384:1;7377:15;7415:4;7412:1;7405:15;7298:132;-1:-1:-1;7444:9:189;;7242:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "canExecuteTakerAsk((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": "c346b3b9",
    "canExecuteTakerBid((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": "a22233b5",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setProtocolFee(uint256)": "787dce3d",
    "transferOwnership(address)": "f2fde38b",
    "viewProtocolFee()": "9dd1cda6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"NewProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteTakerAsk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"canExecuteTakerBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canExecuteTakerAsk((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"makerBid\":\"maker bid order\",\"takerAsk\":\"taker ask order\"},\"returns\":{\"_0\":\"(whether strategy can be executed, tokenId to execute, amount of tokens to execute)\"}},\"canExecuteTakerBid((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))\":{\"returns\":{\"_0\":\"(whether strategy can be executed, tokenId to execute, amount of tokens to execute)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setProtocolFee(uint256)\":{\"params\":{\"newProtocolFee\":\"protocol fee\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"viewProtocolFee()\":{\"returns\":{\"_0\":\"protocol fee\"}}},\"title\":\"StrategyStargateSaleForCollection\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canExecuteTakerAsk((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Check whether a taker ask order can be executed against a maker bid\"},\"canExecuteTakerBid((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Check whether a taker bid order can be executed against a maker ask\"},\"setProtocolFee(uint256)\":{\"notice\":\"Set new protocol fee for this strategy\"},\"viewProtocolFee()\":{\"notice\":\"Return protocol fee for this strategy\"}},\"notice\":\"Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategy/StrategyStargateSaleForCollection.sol\":\"StrategyStargateSaleForCollection\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":solmate/=node_modules/solmate/\",\":xdeployer/=node_modules/xdeployer/\"]},\"sources\":{\"contracts/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x9f4776449fd4c10a2fb4a6fcdad1fdd593c1f69280758a14c4c94b60cd2b57d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3536f2b9f7d3d50e2a3b7a69380c990c1d85083a6c7dbfbf72c1032fcaa1299e\",\"dweb:/ipfs/QmbVCsEXzqae6a1vCm7uhz41uooE4KHJLiHDhBvjqH175A\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xcc3bd38efa4e6637dc0f69e9c80da5648593c8654974e8213232014602834b2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3d80fbf17527b03115ae4141232fe68b40ec6ebae5ae1d67eff96d25aec6e78\",\"dweb:/ipfs/QmfEFZUtGQD7RsZCs1kcGexzZ9MBiSZvXkYX8WDrv7Gn9c\"]},\"contracts/strategy/StrategyStargateSaleForCollection.sol\":{\"keccak256\":\"0x31a9ecdfc0cbdac130158476c010a3146f84e4a66c239abe6945891247c5a865\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490b0534eabfb992c19702947f67215206fc66d5311ef8ffd39e4ce880730f7e\",\"dweb:/ipfs/QmYc8W5Y4v9rPDzU1p2SXQbgbACjscwg5sYxENPPv9mrxq\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderTypes.TakerOrder",
              "name": "takerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isOrderAsk",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderTypes.MakerOrder",
              "name": "makerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isOrderAsk",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canExecuteTakerAsk",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderTypes.TakerOrder",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isOrderAsk",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderTypes.MakerOrder",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isOrderAsk",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "canExecuteTakerBid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newProtocolFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "viewProtocolFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "canExecuteTakerAsk((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": {
            "params": {
              "makerBid": "maker bid order",
              "takerAsk": "taker ask order"
            },
            "returns": {
              "_0": "(whether strategy can be executed, tokenId to execute, amount of tokens to execute)"
            }
          },
          "canExecuteTakerBid((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": {
            "returns": {
              "_0": "(whether strategy can be executed, tokenId to execute, amount of tokens to execute)"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setProtocolFee(uint256)": {
            "params": {
              "newProtocolFee": "protocol fee"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "viewProtocolFee()": {
            "returns": {
              "_0": "protocol fee"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canExecuteTakerAsk((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Check whether a taker ask order can be executed against a maker bid"
          },
          "canExecuteTakerBid((bool,address,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Check whether a taker bid order can be executed against a maker ask"
          },
          "setProtocolFee(uint256)": {
            "notice": "Set new protocol fee for this strategy"
          },
          "viewProtocolFee()": {
            "notice": "Return protocol fee for this strategy"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":solmate/=node_modules/solmate/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/strategy/StrategyStargateSaleForCollection.sol": "StrategyStargateSaleForCollection"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x9f4776449fd4c10a2fb4a6fcdad1fdd593c1f69280758a14c4c94b60cd2b57d7",
        "urls": [
          "bzz-raw://3536f2b9f7d3d50e2a3b7a69380c990c1d85083a6c7dbfbf72c1032fcaa1299e",
          "dweb:/ipfs/QmbVCsEXzqae6a1vCm7uhz41uooE4KHJLiHDhBvjqH175A"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderTypes.sol": {
        "keccak256": "0xcc3bd38efa4e6637dc0f69e9c80da5648593c8654974e8213232014602834b2a",
        "urls": [
          "bzz-raw://d3d80fbf17527b03115ae4141232fe68b40ec6ebae5ae1d67eff96d25aec6e78",
          "dweb:/ipfs/QmfEFZUtGQD7RsZCs1kcGexzZ9MBiSZvXkYX8WDrv7Gn9c"
        ],
        "license": "MIT"
      },
      "contracts/strategy/StrategyStargateSaleForCollection.sol": {
        "keccak256": "0x31a9ecdfc0cbdac130158476c010a3146f84e4a66c239abe6945891247c5a865",
        "urls": [
          "bzz-raw://490b0534eabfb992c19702947f67215206fc66d5311ef8ffd39e4ce880730f7e",
          "dweb:/ipfs/QmYc8W5Y4v9rPDzU1p2SXQbgbACjscwg5sYxENPPv9mrxq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/strategy/StrategyStargateSaleForCollection.sol",
    "id": 22064,
    "exportedSymbols": {
      "IExecutionStrategy": [
        5589
      ],
      "OrderTypes": [
        7528
      ],
      "Ownable": [
        58409
      ],
      "StrategyStargateSaleForCollection": [
        22063
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2962:72",
    "nodes": [
      {
        "id": 21890,
        "nodeType": "PragmaDirective",
        "src": "32:23:72",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 21892,
        "nodeType": "ImportDirective",
        "src": "57:67:72",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 58410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21891,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58409,
              "src": "65:7:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21894,
        "nodeType": "ImportDirective",
        "src": "125:55:72",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderTypes.sol",
        "file": "../libraries/OrderTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 7529,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21893,
              "name": "OrderTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7528,
              "src": "133:10:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21896,
        "nodeType": "ImportDirective",
        "src": "181:72:72",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IExecutionStrategy.sol",
        "file": "../interfaces/IExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 5590,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21895,
              "name": "IExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5589,
              "src": "189:18:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 22063,
        "nodeType": "ContractDefinition",
        "src": "415:2579:72",
        "nodes": [
          {
            "id": 21905,
            "nodeType": "EventDefinition",
            "src": "536:42:72",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a6",
            "name": "NewProtocolFee",
            "nameLocation": "542:14:72",
            "parameters": {
              "id": 21904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21903,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "565:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 21905,
                  "src": "557:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:21:72"
            }
          },
          {
            "id": 21908,
            "nodeType": "VariableDeclaration",
            "src": "604:35:72",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_protocolFee",
            "nameLocation": "621:12:72",
            "scope": 22063,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21906,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323030",
              "id": 21907,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "636:3:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200_by_1",
                "typeString": "int_const 200"
              },
              "value": "200"
            },
            "visibility": "internal"
          },
          {
            "id": 21912,
            "nodeType": "UsingForDirective",
            "src": "646:43:72",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 21909,
              "name": "OrderTypes",
              "nameLocations": [
                "652:10:72"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7528,
              "src": "652:10:72"
            },
            "typeName": {
              "id": 21911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21910,
                "name": "OrderTypes.TakerOrder",
                "nameLocations": [
                  "667:10:72",
                  "678:10:72"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7344,
                "src": "667:21:72"
              },
              "referencedDeclaration": 7344,
              "src": "667:21:72",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TakerOrder_$7344_storage_ptr",
                "typeString": "struct OrderTypes.TakerOrder"
              }
            }
          },
          {
            "id": 21960,
            "nodeType": "FunctionDefinition",
            "src": "695:467:72",
            "nodes": [],
            "body": {
              "id": 21959,
              "nodeType": "Block",
              "src": "800:362:72",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21923,
                      "name": "currencyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21918,
                      "src": "887:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 21924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "903:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "887:17:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 21931,
                        "name": "currencyRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21918,
                        "src": "972:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 21932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "972:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 21956,
                      "nodeType": "Block",
                      "src": "1077:79:72",
                      "statements": [
                        {
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21944,
                                  "name": "price1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21914,
                                  "src": "1099:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21945,
                                    "name": "price2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21916,
                                    "src": "1109:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 21951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 21946,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1118:2:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 21949,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 21947,
                                            "name": "currencyRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21918,
                                            "src": "1125:12:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "313030",
                                            "id": 21948,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1140:3:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "src": "1125:18:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 21950,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1124:20:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1118:26:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1109:35:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1099:45:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 21954,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1098:47:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 21922,
                          "id": 21955,
                          "nodeType": "Return",
                          "src": "1091:54:72"
                        }
                      ]
                    },
                    "id": 21957,
                    "nodeType": "IfStatement",
                    "src": "968:188:72",
                    "trueBody": {
                      "id": 21943,
                      "nodeType": "Block",
                      "src": "992:71:72",
                      "statements": [
                        {
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21934,
                                  "name": "price1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21914,
                                  "src": "1014:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21935,
                                    "name": "price2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21916,
                                    "src": "1024:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 21938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 21936,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1033:2:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "id": 21937,
                                      "name": "currencyRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21918,
                                      "src": "1039:12:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1033:18:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1024:27:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1014:37:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 21941,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1013:39:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 21922,
                          "id": 21942,
                          "nodeType": "Return",
                          "src": "1006:46:72"
                        }
                      ]
                    }
                  },
                  "id": 21958,
                  "nodeType": "IfStatement",
                  "src": "883:273:72",
                  "trueBody": {
                    "id": 21930,
                    "nodeType": "Block",
                    "src": "906:48:72",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21926,
                            "name": "price1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21914,
                            "src": "927:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 21927,
                            "name": "price2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21916,
                            "src": "937:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "927:16:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 21922,
                        "id": 21929,
                        "nodeType": "Return",
                        "src": "920:23:72"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "comparePrice",
            "nameLocation": "704:12:72",
            "parameters": {
              "id": 21919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21914,
                  "mutability": "mutable",
                  "name": "price1",
                  "nameLocation": "725:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 21960,
                  "src": "717:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21916,
                  "mutability": "mutable",
                  "name": "price2",
                  "nameLocation": "741:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 21960,
                  "src": "733:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21918,
                  "mutability": "mutable",
                  "name": "currencyRate",
                  "nameLocation": "757:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 21960,
                  "src": "749:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:54:72"
            },
            "returnParameters": {
              "id": 21922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21960,
                  "src": "794:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:6:72"
            },
            "scope": 22063,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 22012,
            "nodeType": "FunctionDefinition",
            "src": "1444:593:72",
            "nodes": [],
            "body": {
              "id": 22011,
              "nodeType": "Block",
              "src": "1692:345:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    21978
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 21978,
                      "mutability": "mutable",
                      "name": "currencyRate",
                      "nameLocation": "1715:12:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 22011,
                      "src": "1707:20:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21977,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1707:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21982,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21979,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "1731:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$7344_calldata_ptr",
                          "typeString": "struct OrderTypes.TakerOrder calldata"
                        }
                      },
                      "id": 21980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1740:12:72",
                      "memberName": "decodeParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7475,
                      "src": "1731:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_TakerOrder_$7344_memory_ptr_$returns$_t_uint16_$_t_address_$_t_address_$_t_address_$_t_uint256_$bound_to$_t_struct$_TakerOrder_$7344_memory_ptr_$",
                        "typeString": "function (struct OrderTypes.TakerOrder memory) pure returns (uint16,address,address,address,uint256)"
                      }
                    },
                    "id": 21981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:23:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint16_$_t_address_$_t_address_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(uint16,address,address,address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:52:72"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 22003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 21984,
                                      "name": "makerBid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21967,
                                      "src": "1799:8:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                        "typeString": "struct OrderTypes.MakerOrder calldata"
                                      }
                                    },
                                    "id": 21985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1808:5:72",
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7314,
                                    "src": "1799:14:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 21986,
                                      "name": "takerAsk",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21964,
                                      "src": "1815:8:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TakerOrder_$7344_calldata_ptr",
                                        "typeString": "struct OrderTypes.TakerOrder calldata"
                                      }
                                    },
                                    "id": 21987,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1824:5:72",
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7339,
                                    "src": "1815:14:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 21988,
                                    "name": "currencyRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21978,
                                    "src": "1831:12:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 21983,
                                  "name": "comparePrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21960,
                                  "src": "1786:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                                  }
                                },
                                "id": 21989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1786:58:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 21994,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 21990,
                                        "name": "makerBid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21967,
                                        "src": "1865:8:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                          "typeString": "struct OrderTypes.MakerOrder calldata"
                                        }
                                      },
                                      "id": 21991,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1874:9:72",
                                      "memberName": "startTime",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7326,
                                      "src": "1865:18:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 21992,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "1887:5:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 21993,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1893:9:72",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "1887:15:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1865:37:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 21995,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1864:39:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1786:117:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 22001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 21997,
                                      "name": "makerBid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21967,
                                      "src": "1924:8:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                                        "typeString": "struct OrderTypes.MakerOrder calldata"
                                      }
                                    },
                                    "id": 21998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1933:7:72",
                                    "memberName": "endTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7328,
                                    "src": "1924:16:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 21999,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "1944:5:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 22000,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1950:9:72",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1944:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1924:35:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 22002,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1923:37:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1786:174:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 22004,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1785:176:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 22005,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21967,
                          "src": "1975:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                            "typeString": "struct OrderTypes.MakerOrder calldata"
                          }
                        },
                        "id": 22006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1984:7:72",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7316,
                        "src": "1975:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 22007,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21967,
                          "src": "2005:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                            "typeString": "struct OrderTypes.MakerOrder calldata"
                          }
                        },
                        "id": 22008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2014:6:72",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7318,
                        "src": "2005:15:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 22009,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1771:259:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 21976,
                  "id": 22010,
                  "nodeType": "Return",
                  "src": "1764:266:72"
                }
              ]
            },
            "baseFunctions": [
              5568
            ],
            "documentation": {
              "id": 21961,
              "nodeType": "StructuredDocumentation",
              "src": "1168:271:72",
              "text": " @notice Check whether a taker ask order can be executed against a maker bid\n @param takerAsk taker ask order\n @param makerBid maker bid order\n @return (whether strategy can be executed, tokenId to execute, amount of tokens to execute)"
            },
            "functionSelector": "c346b3b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canExecuteTakerAsk",
            "nameLocation": "1453:18:72",
            "overrides": {
              "id": 21969,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1592:8:72"
            },
            "parameters": {
              "id": 21968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21964,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "1503:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 22012,
                  "src": "1472:39:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$7344_calldata_ptr",
                    "typeString": "struct OrderTypes.TakerOrder"
                  },
                  "typeName": {
                    "id": 21963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 21962,
                      "name": "OrderTypes.TakerOrder",
                      "nameLocations": [
                        "1472:10:72",
                        "1483:10:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7344,
                      "src": "1472:21:72"
                    },
                    "referencedDeclaration": 7344,
                    "src": "1472:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$7344_storage_ptr",
                      "typeString": "struct OrderTypes.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21967,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "1544:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 22012,
                  "src": "1513:39:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                    "typeString": "struct OrderTypes.MakerOrder"
                  },
                  "typeName": {
                    "id": 21966,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 21965,
                      "name": "OrderTypes.MakerOrder",
                      "nameLocations": [
                        "1513:10:72",
                        "1524:10:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7333,
                      "src": "1513:21:72"
                    },
                    "referencedDeclaration": 7333,
                    "src": "1513:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$7333_storage_ptr",
                      "typeString": "struct OrderTypes.MakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:82:72"
            },
            "returnParameters": {
              "id": 21976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21971,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22012,
                  "src": "1631:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21970,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21973,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22012,
                  "src": "1649:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21975,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22012,
                  "src": "1670:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:70:72"
            },
            "scope": 22063,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 22035,
            "nodeType": "FunctionDefinition",
            "src": "2241:267:72",
            "nodes": [],
            "body": {
              "id": 22034,
              "nodeType": "Block",
              "src": "2471:37:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 22029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2489:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 22030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2496:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 22031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2499:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 22032,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2488:13:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(bool,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 22028,
                  "id": 22033,
                  "nodeType": "Return",
                  "src": "2481:20:72"
                }
              ]
            },
            "baseFunctions": [
              5583
            ],
            "documentation": {
              "id": 22013,
              "nodeType": "StructuredDocumentation",
              "src": "2043:193:72",
              "text": " @notice Check whether a taker bid order can be executed against a maker ask\n @return (whether strategy can be executed, tokenId to execute, amount of tokens to execute)"
            },
            "functionSelector": "a22233b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canExecuteTakerBid",
            "nameLocation": "2250:18:72",
            "overrides": {
              "id": 22021,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2371:8:72"
            },
            "parameters": {
              "id": 22020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22035,
                  "src": "2269:30:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$7344_calldata_ptr",
                    "typeString": "struct OrderTypes.TakerOrder"
                  },
                  "typeName": {
                    "id": 22015,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22014,
                      "name": "OrderTypes.TakerOrder",
                      "nameLocations": [
                        "2269:10:72",
                        "2280:10:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7344,
                      "src": "2269:21:72"
                    },
                    "referencedDeclaration": 7344,
                    "src": "2269:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$7344_storage_ptr",
                      "typeString": "struct OrderTypes.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22035,
                  "src": "2301:30:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MakerOrder_$7333_calldata_ptr",
                    "typeString": "struct OrderTypes.MakerOrder"
                  },
                  "typeName": {
                    "id": 22018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22017,
                      "name": "OrderTypes.MakerOrder",
                      "nameLocations": [
                        "2301:10:72",
                        "2312:10:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7333,
                      "src": "2301:21:72"
                    },
                    "referencedDeclaration": 7333,
                    "src": "2301:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$7333_storage_ptr",
                      "typeString": "struct OrderTypes.MakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2268:64:72"
            },
            "returnParameters": {
              "id": 22028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22023,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22035,
                  "src": "2410:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22022,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22035,
                  "src": "2428:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22035,
                  "src": "2449:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2396:70:72"
            },
            "scope": 22063,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 22052,
            "nodeType": "FunctionDefinition",
            "src": "2626:159:72",
            "nodes": [],
            "body": {
              "id": 22051,
              "nodeType": "Block",
              "src": "2693:92:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 22045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22043,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21908,
                      "src": "2703:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22044,
                      "name": "newProtocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22038,
                      "src": "2718:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2703:29:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22046,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:29:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22048,
                        "name": "newProtocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22038,
                        "src": "2763:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22047,
                      "name": "NewProtocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21905,
                      "src": "2748:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:30:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22050,
                  "nodeType": "EmitStatement",
                  "src": "2743:35:72"
                }
              ]
            },
            "documentation": {
              "id": 22036,
              "nodeType": "StructuredDocumentation",
              "src": "2514:107:72",
              "text": " @notice Set new protocol fee for this strategy\n @param newProtocolFee protocol fee"
            },
            "functionSelector": "787dce3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22040,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2683:9:72"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "2683:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:9:72"
              }
            ],
            "name": "setProtocolFee",
            "nameLocation": "2635:14:72",
            "parameters": {
              "id": 22039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22038,
                  "mutability": "mutable",
                  "name": "newProtocolFee",
                  "nameLocation": "2658:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 22052,
                  "src": "2650:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2649:24:72"
            },
            "returnParameters": {
              "id": 22042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:0:72"
            },
            "scope": 22063,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 22062,
            "nodeType": "FunctionDefinition",
            "src": "2888:104:72",
            "nodes": [],
            "body": {
              "id": 22061,
              "nodeType": "Block",
              "src": "2956:36:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 22059,
                    "name": "_protocolFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21908,
                    "src": "2973:12:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22058,
                  "id": 22060,
                  "nodeType": "Return",
                  "src": "2966:19:72"
                }
              ]
            },
            "baseFunctions": [
              5588
            ],
            "documentation": {
              "id": 22053,
              "nodeType": "StructuredDocumentation",
              "src": "2791:92:72",
              "text": " @notice Return protocol fee for this strategy\n @return protocol fee"
            },
            "functionSelector": "9dd1cda6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewProtocolFee",
            "nameLocation": "2897:15:72",
            "overrides": {
              "id": 22055,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2929:8:72"
            },
            "parameters": {
              "id": 22054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2912:2:72"
            },
            "returnParameters": {
              "id": 22058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22062,
                  "src": "2947:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2946:9:72"
            },
            "scope": 22063,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21898,
              "name": "Ownable",
              "nameLocations": [
                "461:7:72"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58409,
              "src": "461:7:72"
            },
            "id": 21899,
            "nodeType": "InheritanceSpecifier",
            "src": "461:7:72"
          },
          {
            "baseName": {
              "id": 21900,
              "name": "IExecutionStrategy",
              "nameLocations": [
                "470:18:72"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5589,
              "src": "470:18:72"
            },
            "id": 21901,
            "nodeType": "InheritanceSpecifier",
            "src": "470:18:72"
          }
        ],
        "canonicalName": "StrategyStargateSaleForCollection",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21897,
          "nodeType": "StructuredDocumentation",
          "src": "255:159:72",
          "text": " @title StrategyStargateSaleForCollection\n @notice Strategy that executes an order at a fixed price that\n can be taken either by a bid or an ask."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22063,
          5589,
          58409,
          62970
        ],
        "name": "StrategyStargateSaleForCollection",
        "nameLocation": "424:33:72",
        "scope": 22064,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 72
}