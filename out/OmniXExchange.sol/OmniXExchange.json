{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChainIdInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreatorFeeBpTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20TransferFromFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthsInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "MerkleProofTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewGasLimitETHTransferTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewProtocolFeeRecipientCannotBeNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingTransferInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorForStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoncesInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotV2Strategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullSignerAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutsideOfTimeRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuoteTypeInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncementNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameDomainSeparator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureEOAInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureERC1271Invalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SignatureLengthInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureParameterSInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "SignatureParameterVInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyHasNoSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "StrategyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyNotUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyProtocolFeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferAlreadyInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongPotentialOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "AffiliatePayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CancelOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InitiateOwnershipRenouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "InitiateOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "name": "NewBidAskNonces",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creatorFeeManager",
          "type": "address"
        }
      ],
      "name": "NewCreatorFeeManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewDomainSeparator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "NewGasLimitETHTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCreatorFeeBp",
          "type": "uint256"
        }
      ],
      "name": "NewMaxCreatorFeeBp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "NewProtocolFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "OrderNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "SubsetNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "askUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerAsk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerBid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelOrderNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelSubsetNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorFeeManager",
      "outputs": [
        {
          "internalType": "contract ICreatorFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker[]",
          "name": "takerBids",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker[]",
          "name": "makerAsks",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "makerSignatures",
          "type": "bytes[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree[]",
          "name": "merkleTrees",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAtomic",
          "type": "bool"
        }
      ],
      "name": "executeMultipleTakerBids",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerBid",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "proofLength",
          "type": "uint256"
        }
      ],
      "name": "hashBatchOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "batchOrderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "bid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ask",
          "type": "bool"
        }
      ],
      "name": "incrementBidAskNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "initiateOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCreatorFeeBp",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipStatus",
      "outputs": [
        {
          "internalType": "enum IOwnableTwoSteps.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "restrictedExecuteTakerBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "protocolFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferManager",
      "outputs": [
        {
          "internalType": "contract TransferManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCreatorFeeManager",
          "type": "address"
        }
      ],
      "name": "updateCreatorFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDomainSeparator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "updateETHGasLimitForTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxCreatorFeeBp",
          "type": "uint16"
        }
      ],
      "name": "updateMaxCreatorFeeBp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "updateProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "newStandardProtocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMinTotalFee",
          "type": "uint16"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBidAskNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userSubsetNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c03462000390576001600160401b03601f6200443138819003918201601f1916840191838311858410176200037a57808592604094855283396080948591810103126200039057620000528162000395565b9060206200006281830162000395565b936200007e60606200007683860162000395565b940162000395565b600380546001600160a01b0319166001600160a01b0396871690811790915582519081529094907f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908490a1600160085581519360e08501858110898211176200037a5783526001855283850196603288528386019560328752606081019660c888528b820199600098898c5260a09b8c8501918b835260c08601938c85528c805260098c528a8d209651151560ff16905160081b62ffff0016955160181b64ffff00000016915160281b66ffff000000000016925160a81c6affffffff00000000000000169351151560581b6bff00000000000000000000001694600160601b6001900319905160601b16951717171717179055835186815285810160329052848101603290526060810160c89052868b82015286898201528660c082015260e07f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a291a182600a54911690811562000369576001600160b01b0319168117607d60a31b17600a5583519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10908590a1600b805460ff60a01b1916600160a01b1790551687526108fc600e558051808201878111828210176200035557825260018152601960f91b9083015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9281019283527f9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a818301527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a560608201524688820152308682015285815260c081019692939092871183881017620003415750859052519020600d5546600c5581526140869283620003ab84395182818161090c0152818161392501526139c60152518181816113c001526134610152f35b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b85526041600452602485fd5b8451630f966bcb60e41b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b0382168203620003905756fe60806040526004361015610013575b600080fd5b60003560e01c8063134849a61461036f5780631d3c4268146103665780631df47f801461035d57806320cd05c71461035457806323452b9c1461034b5780632bb5a9e6146103425780633e56753914610339578063463357ec1461033057806346b625bc1461032757806346ea25521461031e5780634cbac9dc14610315578063548788761461030c5780635a195d19146103035780635b6ac011146102fa57806364df049e146102f157806367d9dd79146102e85780636e90c014146102df5780637200b829146102d65780637762df25146102cd57806379ed31d4146102c45780637a7d8851146102bb578063838b8f5c146102b25780638585ae03146102a957806386c07642146102a057806389ccfe89146102975780638da5cb5b1461028e57806391be136014610285578063974e7c9f1461027c5780639a8a059214610273578063a02bab571461026a578063a39bf29f14610261578063ad5c464814610258578063ae1cce5a1461024f578063b647a40414610246578063bb91c3391461023d578063c0b6f56114610234578063d5a06adf1461022b578063d5b010f514610222578063d5b7f06514610219578063e72853e114610210578063ea179b7614610207578063f4288a21146101fe5763f698da25146101f657600080fd5b61000e611afc565b5061000e611a64565b5061000e611a13565b5061000e611965565b5061000e6118cf565b5061000e6117cd565b5061000e611646565b5061000e611597565b5061000e61151a565b5061000e6114a9565b5061000e6113ef565b5061000e6113a9565b5061000e611362565b5061000e6112f1565b5061000e6112d2565b5061000e611269565b5061000e611021565b5061000e610fe5565b5061000e610ecb565b5061000e610ea1565b5061000e610dbc565b5061000e610cda565b5061000e610c9c565b5061000e610bf5565b5061000e610bcb565b5061000e610b15565b5061000e610aef565b5061000e610ac8565b5061000e610a9e565b5061000e610a15565b5061000e6109d2565b5061000e610965565b5061000e61093b565b5061000e6108f5565b5061000e610865565b5061000e6107e5565b5061000e610742565b5061000e610708565b5061000e61062e565b5061000e6105d7565b5061000e61054a565b5061000e6104bf565b5061000e6103d6565b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b602060031982011261000e57600435906001600160401b03821161000e576103d291600401610378565b9091565b503461000e576103e5366103a8565b801561046b5760005b81811061042d57507fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f6916104286040519283923384611e80565b0390a1005b60019033600052610465602060028152604090816000209061045085888a611e3e565b3560005252600020600160ff19825416179055565b016103ee565b6040516397983bdb60e01b8152600490fd5b6001600160a01b0381160361000e57565b6084359061049b8261047d565b565b359061049b8261047d565b8015150361000e57565b60a4359061049b826104a8565b503461000e57604036600319011261000e577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54360406004356105008161047d565b6024359061050d826104a8565b610515613ccf565b6001600160a01b031660008181526007602052839020805460ff191660ff8415151617905590825191825215156020820152a1005b503461000e57602036600319011261000e576004356105688161047d565b610570613ccf565b6001600160a01b031680156105c5576020817f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10926bffffffffffffffffffffffff60a01b600a541617600a55604051908152a1005b604051630f966bcb60e41b8152600490fd5b503461000e57604036600319011261000e576004356105f58161047d565b60018060a01b0316600052600160205260406000206024356000526020526020604060002054604051908152f35b600091031261000e57565b503461000e576000806003193601126106dc57610649613ccf565b60045460ff8160a01c1660038110156106cf575b80156106bd578061066f6001926106f6565b146106aa575b506004805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b03191660045538610675565b60405163ccf69db760e01b8152600490fd5b6106d76106df565b61065d565b80fd5b50634e487b7160e01b600052602160045260246000fd5b6003111561070057565b61049b6106df565b503461000e57600036600319011261000e57602060ff60045460a01c16604051906003811015610736578152f35b61073e6106df565b8152f35b503461000e57600036600319011261000e5761075c613ccf565b600260ff60045460a01c1660038110156107d8575b036107c657600380546001600160a01b03191690556004805460ff60a01b19169055604051600081527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908060208101610428565b60405163022e289160e11b8152600490fd5b6107e06106df565b610771565b503461000e57600036600319011261000e5760206040517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b6004359061ffff8216820361000e57565b6024359061ffff8216820361000e57565b6044359061ffff8216820361000e57565b6064359061ffff8216820361000e57565b503461000e57602036600319011261000e5761087f610821565b610887613ccf565b61ffff8116906109c482116108e357600a805461ffff60a01b191660a09290921b61ffff60a01b169190911790556040519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a1005b6040516397d7dcfb60e01b8152600490fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e57600036600319011261000e576005546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3460206004356109a6816104a8565b6109ae613ccf565b151560045460ff60a81b8260a81b169060ff60a81b191617600455604051908152a1005b503461000e57602036600319011261000e576004356109f08161047d565b60018060a01b03166000526007602052602060ff604060002054166040519015158152f35b503461000e576000806003193601126106dc57610a30613ccf565b60045460ff8160a01c166003811015610a91575b610a7f5760ff60a01b1916600160a11b176004557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b604051633a76bcd760e11b8152600490fd5b610a996106df565b610a44565b503461000e57600036600319011261000e57600a546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e57602060ff60045460a81c166040519015158152f35b503461000e57600036600319011261000e57602061ffff600a5460a01c16604051908152f35b503461000e57600036600319011261000e57600454600160ff8260a01c16610b3c816106f6565b03610bb9576001600160a01b03163303610ba757600380546001600160a01b03191633908117909155600480546001600160a81b03191690556040519081527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908060208101610428565b6040516357ee7dc960e11b8152600490fd5b604051632f27941360e11b8152600490fd5b503461000e57600036600319011261000e576004546040516001600160a01b039091168152602090f35b503461000e57610c04366103a8565b801561046b5760005b818110610c4757507f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec425916104286040519283923384611e80565b33600052600190610c9660208381526040908160002090610c6985888a611e3e565b35600052526000207f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db9055565b01610c0d565b503461000e57602036600319011261000e57600435610cba8161047d565b60018060a01b031660005260066020526020604060002054604051908152f35b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b9081604091031261000e5790565b90816101e091031261000e5790565b9060a060031983011261000e576001600160401b0360043581811161000e5783610d4d91600401610d04565b9260243582811161000e5781610d6591600401610d12565b926044359280841161000e578260238501121561000e5783600401359381851161000e57836024868301011161000e57602401939260643591821161000e57610db091600401610d04565b90610db961048e565b90565b50610dc636610d21565b92909194600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5560e085013594610dfa8661047d565b6001600160a01b03861660009081526007602052604090205460ff1615610e7d57610e4f610e5694610e5e98610e38610e333686612040565b613b76565b958661010086013593610e4a8561047d565b61360b565b339161311b565b91339061333c565b610e66613f32565b600b805460ff60a01b1916600160a01b179055005b005b604051634f79548760e01b8152600490fd5b604051630ddf739360e11b8152600490fd5b503461000e57604036600319011261000e576020610ec3602435600435611bc4565b604051908152f35b503461000e576000806003193601126106dc57610ee6613ccf565b600c544614610fd357601960f91b6020604051610f0281611b52565b600181520152610fa360405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a60408201527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a560608201524660808201523060a082015260a08152610f9b81611b6d565b519020600d55565b610fac46600c55565b7f5b2d1f36cd3ec425baab07b99853532e2ba6387a472ddbff437c5cc96f2f20ca8180a180f35b60405163a69915e560e01b8152600490fd5b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b6001600160e01b031981160361000e57565b503461000e5760c036600319011261000e5761103b610821565b611043610832565b9061104c610843565b916064359261105a8461100f565b608435611066816104a8565b60a435906110738261047d565b61107b613ccf565b61ffff80841681861681811192831561125d575b50508115611251575b5061123f576001600160e01b031986161561122d576040516345b2b38160e01b81526020816004816001600160a01b0387165afa908115611220575b6000916111f2575b50156111e0577f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29561042893611177611113611ee5565b6001815261ffff8916602082015261ffff8816604082015261ffff831660608201526001600160e01b03198416608082015284151560a08201526001600160a01b03861660c08201526111726008546000526009602052604060002090565b61379e565b6008549561118c611187886138ae565b600855565b6040805197885261ffff98891660208901529088169087015290951660608501526001600160e01b0319909416608084015292151560a08301526001600160a01b0390921660c082015290819060e0820190565b60405163ef8c37d760e01b8152600490fd5b611213915060203d8111611219575b61120b8183611ba3565b810190613789565b386110dc565b503d611201565b61122861275e565b6110d4565b604051636168384960e11b8152600490fd5b60405163b704b7c160e01b8152600490fd5b6101f491501138611098565b8816119150388061108f565b503461000e57602036600319011261000e57600435611286613ccf565b6108fc81106112c0576020817ffc3a20d07f3d5bcc0b01a52011f630765611323fa9afa69f63ba2aa19f7364b692600e55604051908152a1005b6040516356b68a6b60e11b8152600490fd5b503461000e57600036600319011261000e576020600c54604051908152f35b503461000e57602036600319011261000e577fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc60206004356113328161047d565b61133a613ccf565b600580546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b503461000e57602036600319011261000e576004356113808161047d565b60018060a01b031660005260006020526040806000206001815491015482519182526020820152f35b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e57604036600319011261000e5760043561140d8161047d565b6005546001600160a01b03916024359183163303611497576127108211611485577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d89281166000526006602052816040600020556104286040519283928360209093929193604081019460018060a01b031681520152565b604051632242dac960e01b8152600490fd5b604051639f63004360e01b8152600490fd5b503461000e57602036600319011261000e577fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa76460206004356114ea8161047d565b6114f2613ccf565b600b80546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b503461000e57602036600319011261000e57600435600052600960205260e06040600020546040519060ff81161515825261ffff808260081c166020840152808260181c1660408401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b503461000e57602036600319011261000e576004356115b58161047d565b6115bd613ccf565b60045460ff8160a01c166003811015611639575b610a7f576001600160a81b0319166001600160a01b03821617600160a01b176004557fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9061042890604080513381526001600160a01b03909216602083015290918291820190565b6116416106df565b6115d1565b503461000e57608036600319011261000e57600435602435611667816104a8565b61166f610843565b91611678610854565b92611681613ccf565b6008548210156117bb576116b76116b06116a5846000526009602052604060002090565b5460281c61ffff1690565b61ffff1690565b61ffff908186169081119182156117af575b505061123f577f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9936104289161171e8561170d866000526009602052604060002090565b9060ff801983541691151516179055565b61174e81611736866000526009602052604060002090565b9062ffff0082549160081b169062ffff001916179055565b61178282611766866000526009602052604060002090565b9064ffff00000082549160181b169064ffff0000001916179055565b6040519485948592909493606092608085019685521515602085015261ffff809216604085015216910152565b831611905038806116c9565b60405163bd7056c760e01b8152600490fd5b503461000e57604036600319011261000e577fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4460043561180c816104a8565b602435611818816104a8565b60001943014381116118c2575b336000908152602081905260409020805492914060801c9190600101549361189f575b61186d575b506040805133815260208101929092528101919091528060608101610428565b6118779192611ece565b908160016118973360018060a01b03166000526000602052604060002090565b01553861184d565b91816118aa91611ece565b33600090815260208190526040902081905591611848565b6118ca611ea2565b611825565b503461000e57608036600319011261000e576001600160401b0360043581811161000e57611901903690600401610d04565b9060243590811161000e5761191a903690600401610d12565b604435916119278361047d565b3033036119535761194f9261193f926064359261311b565b6040519081529081906020820190565b0390f35b60405163a78d09b960e01b8152600490fd5b503461000e5761197436610d21565b9290600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5560e0850135946119a68661047d565b6001600160a01b03861660008181526007602052604090205460ff1615908115611a0a575b50610e7d57610e66966119ff611a04946119e86101008501611edb565b9687916119f8610e333688612040565b809761360b565b6128be565b9261333c565b905015386119cb565b503461000e57604036600319011261000e57600435611a318161047d565b60018060a01b031660005260026020526040600020602435600052602052602060ff604060002054166040519015158152f35b5060c036600319011261000e576001600160401b0360043581811161000e57611a91903690600401610378565b60243583811161000e57611aa9903690600401610378565b9060443585811161000e57611ac2903690600401610378565b9060643596871161000e57611ade610e7b973690600401610378565b94909360843596611aee8861047d565b611af66104b2565b98612153565b503461000e57600036600319011261000e576020600d54604051908152f35b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611b4557604052565b611b4d611b1b565b604052565b604081019081106001600160401b03821117611b4557604052565b60c081019081106001600160401b03821117611b4557604052565b606081019081106001600160401b03821117611b4557604052565b90601f801991011681019081106001600160401b03821117611b4557604052565b9060018103611c275750611c13611c217f9661287f7a4aa4867db46a2453ee15bebac4e8fc25667a58718da658f15de643925b6040805160208101958652908101919091529182906060820190565b03601f198101835282611ba3565b51902090565b60028103611c5d5750611c13611c217fa54ab330ea9e1dfccee2b86f3666989e7fbd479704416c757c8de8e820142a0892611bf7565b60038103611c935750611c13611c217f93390f5d45ede9dea305f16aec86b2472af4f823851637f1b7019ad0775cea4992611bf7565b60048103611cc95750611c13611c217f9dda2c8358da895e43d574bb15954ce5727b22e923a2d8f28261f297bce42f0b92611bf7565b60058103611cff5750611c13611c217f92dc717124e161262f9d10c7079e7d54dc51271893fba54aa4a0f270fecdcc9892611bf7565b60068103611d355750611c13611c217fce02aee5a7a35d40d974463c4c6e5534954fb07a7e7bc966fee268a15337bfd892611bf7565b60078103611d6b5750611c13611c217ff7a65efd167a18f7091b2bb929d687dd94503cf0a43620487055ed7d6b72755992611bf7565b60088103611da15750611c13611c217fdef24acacad1318b664520f7c10e8bc6d1e7f6f6f7c8b031e70624ceb42266a692611bf7565b60098103611dd75750611c13611c217f4cb4080dc4e7bae88b4dc4307ad5117fa4f26195998a1b5f40368809d7f4c7f292611bf7565b600a8103611e0d5750611c13611c217ff8b1f864164d8d6e0b45f1399bd711223117a4ab0b057a9c2d7779e86a7c88db92611bf7565b6040516375dec1c560e11b81526004810191909152602490fd5b50634e487b7160e01b600052603260045260246000fd5b9190811015611e4f575b60051b0190565b611e57611e27565b611e48565b81835290916001600160fb1b03831161000e5760209260051b809284830137010190565b6001600160a01b039091168152604060208201819052610db993910191611e5c565b50634e487b7160e01b600052601160045260246000fd5b91908203918211611ec657565b61049b611ea2565b91908201809211611ec657565b35610db98161047d565b6040519060e082018281106001600160401b03821117611b4557604052565b604051906101e082018281106001600160401b03821117611b4557604052565b6040519061049b82611b88565b6002111561000e57565b359061049b82611f31565b6020906001600160401b038111611f5e5760051b0190565b611e57611b1b565b9291611f7182611f46565b91611f7f6040519384611ba3565b829481845260208094019160051b810192831161000e57905b828210611fa55750505050565b81358152908301908301611f98565b9080601f8301121561000e57816020610db993359101611f66565b6020906001600160401b038111611fec575b601f01601f19160190565b611ff4611b1b565b611fe1565b81601f8201121561000e5780359061201082611fcf565b9261201e6040519485611ba3565b8284526020838301011161000e57816000926020809301838601378301015290565b91906101e08382031261000e57612055611f04565b9261205f81611f3b565b84526020810135602085015260408101356040850152606081013560608501526080810135608085015261209560a08201611f3b565b60a08501526120a660c0820161049d565b60c08501526120b760e0820161049d565b60e08501526101006120ca81830161049d565b908501526101208181013590850152610140808201359085015261016080820135908501526001600160401b03916101808083013584811161000e5782612112918501611fb4565b908601526101a08083013584811161000e5782612130918501611fb4565b908601526101c0928383013590811161000e5761214d9201611ff9565b90830152565b999897969391959490600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5580158015612414575b61046b576121c79a60e0946121d26121ce6121ab886121a5858e612427565b01611edb565b6001600160a01b0381166000908152600760205260409020909f565b5460ff1690565b1590565b610e7d5760009a156122ea5797969594939291906000985b828a10612225575050505050505050505061220892935b339061333c565b612210613f32565b600b805460ff60a01b1916600160a01b179055565b9091929394959697989a88888f888f898f89612243848b8e94612451565b95846122b4575b50936122898461229e97946122838261226f60019e9c99610e4f986122a49f9c612482565b9861227d610e33368b612040565b9a612482565b936124b2565b90866122986101008701611edb565b9361360b565b90611ece565b9b019897969594939291906121ea565b9650505050505091506122c8898301611edb565b6001600160a01b03918216911603610e7d57888f91888f89898f968a9061224a565b8a9c98979493929c5b8d811061230e57505050505050505050612208939450612201565b8d8161231b81858d612451565b91816123ee575b61238992916123319187612482565b908a61236861234e86612347610e333687612040565b938d612482565b612359878b8d6124b2565b90846122986101008801611edb565b6040518094819263d5b7f06560e01b8352602095869533916004860161271f565b03816000305af19182916000936123bf575b50506123ab575b506001016122f3565b6123b8906001929d611ece565b9b906123a2565b6123df929350803d106123e7575b6123d78183611ba3565b810190612501565b90388061239b565b503d6123cd565b50506123fb888201611edb565b6001600160a01b038c8116911603610e7d57818f612322565b5080851881831882861817171515612186565b9015612444575b8035906101de198136030182121561000e570190565b61244c611e27565b61242e565b9190811015612475575b60051b810135906101de198136030182121561000e570190565b61247d611e27565b61245b565b91908110156124a5575b60051b81013590603e198136030182121561000e570190565b6124ad611e27565b61248c565b91908110156124f4575b60051b81013590601e198136030182121561000e5701908135916001600160401b03831161000e57602001823603811361000e579190565b6124fc611e27565b6124bc565b9081602091031261000e575190565b9035601e198236030181121561000e5701602081359101916001600160401b03821161000e57813603831361000e57565b908060209392818452848401376000828201840152601f01601f1916010190565b90604061258c610db99380356125778161047d565b6001600160a01b031684526020810190612510565b9190928160208201520191612541565b6002111561070057565b906125b08261259c565b52565b9035601e198236030181121561000e5701602081359101916001600160401b03821161000e578160051b3603831361000e57565b610db9916125fd816125f884611f3b565b6125a6565b6020820135602082015260408201356040820152606082013560608201526080820135608082015261263e61263460a08401611f3b565b60a08301906125a6565b61265d61264d60c0840161049d565b6001600160a01b031660c0830152565b61267c61266c60e0840161049d565b6001600160a01b031660e0830152565b61269c61010061268d81850161049d565b6001600160a01b031690830152565b6101208083013590820152610140808301359082015261016080830135908201526127006126e46101806126d2818601866125b3565b90916101e08091870152850191611e5c565b6101a06126f3818601866125b3565b9185840390860152611e5c565b916127116101c09182810190612510565b929091818503910152612541565b9060609261273c61274a9297969597608085526080850190612562565b9083820360208501526125e7565b6001600160a01b0390951660408201520152565b506040513d6000823e3d90fd5b35610db981611f31565b90815180825260208080930193019160005b828110612795575050505090565b835185529381019392810192600101612787565b6000915b600283106127ba57505050565b81516001600160a01b0316815260019290920191602091820191016127ad565b6000915b600383106127eb57505050565b6001908251815260208091019201920191906127de565b9561288a9061287a6128b7976128ab9761049b9d9f9e9c976128659061285561289c996101809f998f60406060928051835260208101516020840152015115156040820152019060018060a01b03169052565b6001600160a01b031660808d0152565b60a08b01526001600160a01b031660c08a0152565b6001600160a01b031660e0880152565b6101e080610100880152860190612775565b90848203610120860152612775565b966101408301906127a9565b01906127da565b91906128c98161276b565b6128d28161259c565b612a8a576128e36101008201611edb565b6001600160a01b0381166000908152600160205260409020909290936129186060840135809690600052602052604060002090565b546001600160a01b03851660009081526020819052604090205460208501351490811591612a4d575b8115612a2d575b50612a1b5782339061295992612c02565b8861296d87849b8b85999699989798613580565b60c088019161297b83611edb565b85858c3361298b60a08f0161276b565b61299495613910565b60e08901918a6129a384611edb565b906129af918a8a61352f565b6129b7611f24565b9889526020890152151560408801526129cf90611edb565b906129d990611edb565b906040519860808a99013590336129f0998b612802565b037f9aaa45d6db2ef74ead0751ea9113263d1dec1b50cea05f0ca2002cb8063564a491a16040015190565b604051631782f9fd60e31b8152600490fd5b9050828115159182612a42575b505038612948565b141590508238612a3a565b9050612a846121c7612a718760018060a01b03166000526002602052604060002090565b6040870135600052602052604060002090565b90612941565b60405163d641ac7b60e01b8152600490fd5b60405190612aa982611b52565b6040368337565b60405190612abd82611b88565b6060368337565b9091612adb610db993604084526040840190612562565b9160208184039101526125e7565b3d15612b14573d90612afa82611fcf565b91612b086040519384611ba3565b82523d6000602084013e565b606090565b81601f8201121561000e57805191612b3083611f46565b92612b3e6040519485611ba3565b808452602092838086019260051b82010192831161000e578301905b828210612b68575050505090565b81518152908301908301612b5a565b60808183031261000e578051926020820151926001600160401b039384811161000e5781612ba6918501612b19565b93604084015190811161000e57606091612bc1918501612b19565b920151610db9816104a8565b903590601e198136030182121561000e57018035906001600160401b03821161000e57602001918160051b3603831361000e57565b919290612c0d612a9c565b91612c16612ab0565b916000612c2d6101408301356101208401356130c1565b60808201359081612d2d578483928792612c936101a0612c849b989701612c8b612c7b88612c75612c5e8583612bcd565b612c6d61018085018095612bcd565b9290506130dc565b89612bcd565b9d909289612bcd565b3691611f66565b9b3691611f66565b9a60019761016087013592612cce612cb88f5b86612cb360c08d01611edb565b612ebc565b6020890152602089019060018060a01b03169052565b612cd78861276b565b612ce08161259c565b612d1a5761049b97506001600160a01b03612cfa83611edb565b1615159050612d0a575091612fd5565b612d149150611edb565b91612fd5565b505050612d1461010061049b9601611edb565b612d446121c7836000526009602052604060002090565b15612e3657612d528361276b565b612d73612d69846000526009602052604060002090565b5460581c60ff1690565b14612e29578080612d98612d91856000526009602052604060002090565b5460601c90565b612dc0612daf866000526009602052604060002090565b5460a81b6001600160e01b03191690565b8287612ddf8d611c136040519384926020840197885260248401612ac4565b51925af197612dec612ae9565b9815612e2157612cce94939287928792612e128c602080612cb89f518301019101612b77565b9d9294919d9a909d9e8f612ca6565b885160208a01fd5b63ab98484690526004601cfd5b604051636b9e163560e11b815260048101839052602490fd5b919082604091031261000e5760208251612e688161047d565b92015190565b610db9939260609260018060a01b0316825260208201528160408201520190612775565b9061271091828102928184041490151715611ec657565b81810292918115918404141715611ec657565b600b546000948594909391612ee1906001600160a01b03165b6001600160a01b031690565b6001600160a01b0393818516612ef9575b5050505050565b612f22975083949650926040938451988994859384936370c1092160e01b855260048501612e6e565b03915afa8015612fc8575b6000948591612f94575b508093851615600014612f55575060009250505b3880808080612ef2565b612f61612f7c91612e92565b91612f766116b0600a5461ffff9060a01c1690565b90612ea9565b1015612f4b576040516397d7dcfb60e01b8152600490fd5b9050612fb891945060403d8111612fc1575b612fb08183611ba3565b810190612e4f565b93909338612f37565b503d612fa6565b612fd061275e565b612f2d565b9061049b949293918060005260096020526127109061ffff90826130038360406000205460181c1686612ea9565b04926020860192835192831560001461303b57505050505061302a91816040850152611eb9565b90526001600160a01b039091169052565b61302a96939495929160406130609260009081526009602052205460081c1684612ea9565b0492818185018086116130b4575b10613091575b50506130899192604086019384525190611eb9565b905190611eb9565b613089935081039081116130a7575b9138613074565b6130af611ea2565b6130a0565b6130bc611ea2565b61306e565b904211904210176130ce57565b637476320f6000526004601cfd5b90600092811881151761310e5760051b90815b6130f857505050565b601f1980830192820101351561310e57816130ef565b632e0c0f7183526004601cfd5b90929192600161312a8261276b565b6131338161259c565b03612a8a576131456101008201611edb565b906131786131658360018060a01b03166000526001602052604060002090565b6060830135600052602052604060002090565b546001600160a01b038316600090815260208190526040902060010154602083013514908115916132ff575b81156132df575b50612a1b576131bb338285612c02565b95938399898299849b60608a9896980135906131d8918a8d613580565b826131e560e08b01611edb565b906131f191898961352f565b6131fd60c08a01611edb565b9961320a60a08b0161276b565b906001600160a01b0361321c84611edb565b161560001460409f7f3ee3de4684413690dee6fff1a0a4f92916a1b97d1c5a83cdf24671844306b2e39e60809e6132b99d61327d96613260956132d0578a92613910565b613268611f24565b93845260608b0135602085015215158e840152565b613289612ed582611edb565b6132c1575081905b61329d60e08a01611edb565b916132aa60c08b01611edb565b938e519b8c9b0135928b612802565b0390a1015190565b6132ca90611edb565b90613291565b6132d989611edb565b92613910565b90508481151591826132f4575b5050386131ab565b1415905084386132ec565b90506133366121c76133238560018060a01b03166000526002602052604060002090565b6040850135600052602052604060002090565b906131a4565b909291928261334c575b50505050565b613378936001600160a01b039081811680613381575b5050600a546001600160a01b0316905091613442565b38808080613346565b60ff60045460a81c1615613362578060005260066020526133b26133aa60406000205488612ea9565b612710900490565b90816133bf575b50613362565b81613425916133f28895947f49e92b6b3114f7e128555cd58c568f7c2e0e56fe9b4c46b6125bc308184623b3979a611eb9565b98871603613431575b604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b0390a1388080806133b9565b61343d81848887613442565b6133fb565b919291906001600160a01b0382166134855750509061049b91600e54917f0000000000000000000000000000000000000000000000000000000000000000613f5f565b813b1561351d576040516323b872dd60e01b602082019081526001600160a01b0392831660248301529490911660448201526064810192909252600092839283906134d38160848101611c13565b51925af16134df612ae9565b901561350b578051806134f0575050565b816020806121ce936135059501019101613789565b61350b57565b60405163e560521360e01b8152600490fd5b6040516309ee12d560e01b8152600490fd5b929190602090805180613563575b500151918261354c5750505050565b61337893602060018060a01b039101511691613442565b855161357a91906001600160a01b03168686613442565b3861353d565b909290156135d057507f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db915b60018060a01b03166000526001602052604060002090600052602052604060002055565b916135ac565b903590601e198136030182121561000e57018035906001600160401b03821161000e57602001918160061b3603831361000e57565b939291906020948581019561362087836135d6565b80989150613636575b50505061049b9450613714565b600a88116136fb5761364a908394936135d6565b9335938493926000925b82841061368b5750505050036136795761049b9461367191611bc4565b388080613629565b60405163c8ac23c360e01b8152600490fd5b91939083955061369d81948685613a54565b01356136a881611f31565b6136b18161259c565b6136dc576136c0858584613a54565b35600052825260016040600020945b0192909185949392613654565b6136e7858584613a54565b3590600052825260016040600020946136cf565b6040516375dec1c560e11b815260048101899052602490fd5b92600c5446146000146137775761049b93600d549060405190602082019261190160f01b84526022830152604282015260428152608081018181106001600160401b0382111761376a575b604052519020613d21565b613772611b1b565b61375f565b604051636fd794c760e01b8152600490fd5b9081602091031261000e5751610db9816104a8565b61388460c061049b936137c081511515859060ff801983541691151516179055565b6020810151845462ffff00191660089190911b62ffff001617845561380161ffff6040830151865464ffff0000001916911660181b64ffff00000016178555565b606081015166ffff000000000085549160281b168066ffff00000000001983161786556affffffff00000000000000608084015160a81c16916affffffffffff000000000019161717845561387661385c60a0830151151590565b855460ff60581b191690151560581b60ff60581b16178555565b01516001600160a01b031690565b81546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916179055565b60019060001981146138be570190565b6138c6611ea2565b0190565b6001600160a01b0391821681529181166020830152909116604082015260a060608201819052610db993919261390291840190612775565b916080818403910152612775565b9394919061391d8161259c565b806139ac57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561000e5760009461397a86926040519889978896879563a7bc96d360e01b8752600487016138ca565b03925af1801561399f575b61398c5750565b8061399961049b92611b32565b80610623565b6139a761275e565b613985565b806139b860019261259c565b146139c4575050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561000e57600094613a1b869260405198899788968795635052036360e11b8752600487016138ca565b03925af18015613a47575b613a34575b80808080612ef2565b80613999613a4192611b32565b38613a2b565b613a4f61275e565b613a26565b9190811015613a65575b60061b0190565b613a6d611e27565b613a5e565b969491926101009693999894919961012089019a7e3c1bce41a2de73dfe64d6eeb2b3d7f15f1c0c382d9d963c2c6daeb75f0e5398a52613ab18161259c565b60208a015260408901526060880152608087015260a0860152613ad38161259c565b60c08501526001600160a01b0391821660e085015216910152565b805160208092019160005b828110613b07575050505090565b835185529381019392810192600101613af9565b9081519160005b838110613b33575050016000815290565b8060208092840101518185015201613b22565b61049b90613b68613b6294936040519586936020850190613b1b565b90613b1b565b03601f198101845283611ba3565b613cc7815191613b858361259c565b602092613cc284613bde8185015160408601516060870151608088015160a089015191613bb18361259c565b60c08a01516001600160a01b031660e08b01519094906001600160a01b0316956040519a8b998a01613a72565b03613bf1601f1991828101855284611ba3565b6101008401518690613cb6906001600160a01b03169561012081015190610140810151610160820151610180830151604051613c4081613c348a82018095613aee565b038a8101835282611ba3565b519020916101c06101a0850151604051613c6d81613c618c82018095613aee565b038c8101835282611ba3565b519020940151805190880120604080516001600160a01b03909d16988d019889526020890196909652948701526060860152608085015260a084015260c0830152859160e00190565b03908101845283611ba3565b613b46565b805191012090565b6003546001600160a01b03163303613ce357565b6040516330cd747160e01b8152600490fd5b9081602091031261000e5751610db98161100f565b604090610db9949281528160208201520191612541565b929091823b613d5857613d349293613df8565b6001600160a01b0390811691161461049b5760405163d1085d1b60e01b8152600490fd5b90613d7e92602092604051809581948293630b135d3f60e11b998a855260048501613d0a565b03916001600160a01b03165afa908115613deb575b600091613dbd575b506001600160e01b0319161461049b5760405163f6cd0e2f60e01b8152600490fd5b613dde915060203d8111613de4575b613dd68183611ba3565b810190613cf5565b38613d9b565b503d613dcc565b613df361275e565b613d93565b909160418103613eef5750604082013560001a91602081013590355b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211613edd5760ff8416601b8114159081613ed1575b50613eb6576040805193845260ff9490941660208085019190915293830152606082015260008080529060809060015afa15613ea9575b600051906001600160a01b03821615613e9757565b60405163f05a20c760e01b8152600490fd5b613eb161275e565b613e82565b60405163105e24e960e21b815260ff85166004820152602490fd5b601c9150141538613e4b565b6040516360c2892960e11b8152600490fd5b60408103613f185750602082013560ff81901c601b01926001600160ff1b039091169035613e14565b60405163d42b4bbd60e01b81526004810191909152602490fd5b4760018111613f3e5750565b600080808093811901335af115613f5157565b6307246cf46000526004601cfd5b613f73828495600080809781948294f11590565b613f7d5750505050565b6001600160a01b031691823b156106dc5791613fed9391602093604051630d0e30db60e41b8152818160048188885af18015614043575b614030575b5060405163a9059cbb60e01b81526001600160a01b0390921660048301526024820193909352938492839182906044820190565b03925af18015614023575b614005575b808080613346565b61401c9060203d81116112195761120b8183611ba3565b5038613ffd565b61402b61275e565b613ff8565b8061399961403d92611b32565b38613fb9565b61404b61275e565b613fb456fea26469706673582212202fb8c825cbf0c451fda5b6c3094b2642e58ec8a77c3775e218c713c8463a586464736f6c63430008110033",
    "sourceMap": "4745:21487:15:-:0;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1116:14:224;4745:21487:15;;-1:-1:-1;;;;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;1145:16:224;;4745:21487:15;;1145:16:224;4745:21487:15;713:1:19;4745:21487:15;;;;;;;;;;;;;;;;;;;;;1022:257:19;;;4745:21487:15;1096:2:19;4745:21487:15;;1022:257:19;;;4745:21487:15;1096:2:19;4745:21487:15;;;1022:257:19;;4745:21487:15;1161:3:19;4745:21487:15;;1022:257:19;;;-1:-1:-1;;4745:21487:15;;;;;1022:257:19;;;;4745:21487:15;;;;1022:257:19;;;4745:21487:15;;;;;;;1004:12:19;4745:21487:15;;;;;;;;;;;;;713:1:19;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:2:19;4745:21487:15;;;;;1096:2:19;4745:21487:15;;;;;1161:3:19;4745:21487:15;;;;;;;;;;;;;1022:257:19;4745:21487:15;;;;1295:57:19;;;4745:21487:15;1559:5:12;4745:21487:15;;;7973:37:12;;;7969:119;;-1:-1:-1;;;;;;4745:21487:15;;;-1:-1:-1;;;4745:21487:15;1559:5:12;4745:21487:15;;;;;;8159:48:12;;4745:21487:15;;8159:48:12;915:11:225;4745:21487:15;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;;;;1215:51:21;;5526:5:15;;4745:21487;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4745:21487:15;;;;;;22834:95;22806:286;;;4745:21487;;;22947:30;4745:21487;;;;22995:21;4745:21487;;;;23034:13;4745:21487;;;;23073:4;4745:21487;;;;22806:286;;;1022:257:19;4745:21487:15;;;22806:286;;4745:21487;;;;;;;;;;;;;;;22783:319;;22765:337;4745:21487;23034:13;23112:23;4745:21487;6030:12;;4745:21487;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4745:21487:15;;;;;;;;;-1:-1:-1;;;4745:21487:15;;;;;;;;7969:119:12;4745:21487:15;;-1:-1:-1;;;8033:44:12;;;;;4745:21487:15;;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610013575b600080fd5b60003560e01c8063134849a61461036f5780631d3c4268146103665780631df47f801461035d57806320cd05c71461035457806323452b9c1461034b5780632bb5a9e6146103425780633e56753914610339578063463357ec1461033057806346b625bc1461032757806346ea25521461031e5780634cbac9dc14610315578063548788761461030c5780635a195d19146103035780635b6ac011146102fa57806364df049e146102f157806367d9dd79146102e85780636e90c014146102df5780637200b829146102d65780637762df25146102cd57806379ed31d4146102c45780637a7d8851146102bb578063838b8f5c146102b25780638585ae03146102a957806386c07642146102a057806389ccfe89146102975780638da5cb5b1461028e57806391be136014610285578063974e7c9f1461027c5780639a8a059214610273578063a02bab571461026a578063a39bf29f14610261578063ad5c464814610258578063ae1cce5a1461024f578063b647a40414610246578063bb91c3391461023d578063c0b6f56114610234578063d5a06adf1461022b578063d5b010f514610222578063d5b7f06514610219578063e72853e114610210578063ea179b7614610207578063f4288a21146101fe5763f698da25146101f657600080fd5b61000e611afc565b5061000e611a64565b5061000e611a13565b5061000e611965565b5061000e6118cf565b5061000e6117cd565b5061000e611646565b5061000e611597565b5061000e61151a565b5061000e6114a9565b5061000e6113ef565b5061000e6113a9565b5061000e611362565b5061000e6112f1565b5061000e6112d2565b5061000e611269565b5061000e611021565b5061000e610fe5565b5061000e610ecb565b5061000e610ea1565b5061000e610dbc565b5061000e610cda565b5061000e610c9c565b5061000e610bf5565b5061000e610bcb565b5061000e610b15565b5061000e610aef565b5061000e610ac8565b5061000e610a9e565b5061000e610a15565b5061000e6109d2565b5061000e610965565b5061000e61093b565b5061000e6108f5565b5061000e610865565b5061000e6107e5565b5061000e610742565b5061000e610708565b5061000e61062e565b5061000e6105d7565b5061000e61054a565b5061000e6104bf565b5061000e6103d6565b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b602060031982011261000e57600435906001600160401b03821161000e576103d291600401610378565b9091565b503461000e576103e5366103a8565b801561046b5760005b81811061042d57507fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f6916104286040519283923384611e80565b0390a1005b60019033600052610465602060028152604090816000209061045085888a611e3e565b3560005252600020600160ff19825416179055565b016103ee565b6040516397983bdb60e01b8152600490fd5b6001600160a01b0381160361000e57565b6084359061049b8261047d565b565b359061049b8261047d565b8015150361000e57565b60a4359061049b826104a8565b503461000e57604036600319011261000e577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54360406004356105008161047d565b6024359061050d826104a8565b610515613ccf565b6001600160a01b031660008181526007602052839020805460ff191660ff8415151617905590825191825215156020820152a1005b503461000e57602036600319011261000e576004356105688161047d565b610570613ccf565b6001600160a01b031680156105c5576020817f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10926bffffffffffffffffffffffff60a01b600a541617600a55604051908152a1005b604051630f966bcb60e41b8152600490fd5b503461000e57604036600319011261000e576004356105f58161047d565b60018060a01b0316600052600160205260406000206024356000526020526020604060002054604051908152f35b600091031261000e57565b503461000e576000806003193601126106dc57610649613ccf565b60045460ff8160a01c1660038110156106cf575b80156106bd578061066f6001926106f6565b146106aa575b506004805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b03191660045538610675565b60405163ccf69db760e01b8152600490fd5b6106d76106df565b61065d565b80fd5b50634e487b7160e01b600052602160045260246000fd5b6003111561070057565b61049b6106df565b503461000e57600036600319011261000e57602060ff60045460a01c16604051906003811015610736578152f35b61073e6106df565b8152f35b503461000e57600036600319011261000e5761075c613ccf565b600260ff60045460a01c1660038110156107d8575b036107c657600380546001600160a01b03191690556004805460ff60a01b19169055604051600081527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908060208101610428565b60405163022e289160e11b8152600490fd5b6107e06106df565b610771565b503461000e57600036600319011261000e5760206040517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b6004359061ffff8216820361000e57565b6024359061ffff8216820361000e57565b6044359061ffff8216820361000e57565b6064359061ffff8216820361000e57565b503461000e57602036600319011261000e5761087f610821565b610887613ccf565b61ffff8116906109c482116108e357600a805461ffff60a01b191660a09290921b61ffff60a01b169190911790556040519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a1005b6040516397d7dcfb60e01b8152600490fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e57600036600319011261000e576005546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3460206004356109a6816104a8565b6109ae613ccf565b151560045460ff60a81b8260a81b169060ff60a81b191617600455604051908152a1005b503461000e57602036600319011261000e576004356109f08161047d565b60018060a01b03166000526007602052602060ff604060002054166040519015158152f35b503461000e576000806003193601126106dc57610a30613ccf565b60045460ff8160a01c166003811015610a91575b610a7f5760ff60a01b1916600160a11b176004557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b604051633a76bcd760e11b8152600490fd5b610a996106df565b610a44565b503461000e57600036600319011261000e57600a546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e57602060ff60045460a81c166040519015158152f35b503461000e57600036600319011261000e57602061ffff600a5460a01c16604051908152f35b503461000e57600036600319011261000e57600454600160ff8260a01c16610b3c816106f6565b03610bb9576001600160a01b03163303610ba757600380546001600160a01b03191633908117909155600480546001600160a81b03191690556040519081527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908060208101610428565b6040516357ee7dc960e11b8152600490fd5b604051632f27941360e11b8152600490fd5b503461000e57600036600319011261000e576004546040516001600160a01b039091168152602090f35b503461000e57610c04366103a8565b801561046b5760005b818110610c4757507f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec425916104286040519283923384611e80565b33600052600190610c9660208381526040908160002090610c6985888a611e3e565b35600052526000207f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db9055565b01610c0d565b503461000e57602036600319011261000e57600435610cba8161047d565b60018060a01b031660005260066020526020604060002054604051908152f35b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b9081604091031261000e5790565b90816101e091031261000e5790565b9060a060031983011261000e576001600160401b0360043581811161000e5783610d4d91600401610d04565b9260243582811161000e5781610d6591600401610d12565b926044359280841161000e578260238501121561000e5783600401359381851161000e57836024868301011161000e57602401939260643591821161000e57610db091600401610d04565b90610db961048e565b90565b50610dc636610d21565b92909194600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5560e085013594610dfa8661047d565b6001600160a01b03861660009081526007602052604090205460ff1615610e7d57610e4f610e5694610e5e98610e38610e333686612040565b613b76565b958661010086013593610e4a8561047d565b61360b565b339161311b565b91339061333c565b610e66613f32565b600b805460ff60a01b1916600160a01b179055005b005b604051634f79548760e01b8152600490fd5b604051630ddf739360e11b8152600490fd5b503461000e57604036600319011261000e576020610ec3602435600435611bc4565b604051908152f35b503461000e576000806003193601126106dc57610ee6613ccf565b600c544614610fd357601960f91b6020604051610f0281611b52565b600181520152610fa360405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a60408201527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a560608201524660808201523060a082015260a08152610f9b81611b6d565b519020600d55565b610fac46600c55565b7f5b2d1f36cd3ec425baab07b99853532e2ba6387a472ddbff437c5cc96f2f20ca8180a180f35b60405163a69915e560e01b8152600490fd5b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b6001600160e01b031981160361000e57565b503461000e5760c036600319011261000e5761103b610821565b611043610832565b9061104c610843565b916064359261105a8461100f565b608435611066816104a8565b60a435906110738261047d565b61107b613ccf565b61ffff80841681861681811192831561125d575b50508115611251575b5061123f576001600160e01b031986161561122d576040516345b2b38160e01b81526020816004816001600160a01b0387165afa908115611220575b6000916111f2575b50156111e0577f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29561042893611177611113611ee5565b6001815261ffff8916602082015261ffff8816604082015261ffff831660608201526001600160e01b03198416608082015284151560a08201526001600160a01b03861660c08201526111726008546000526009602052604060002090565b61379e565b6008549561118c611187886138ae565b600855565b6040805197885261ffff98891660208901529088169087015290951660608501526001600160e01b0319909416608084015292151560a08301526001600160a01b0390921660c082015290819060e0820190565b60405163ef8c37d760e01b8152600490fd5b611213915060203d8111611219575b61120b8183611ba3565b810190613789565b386110dc565b503d611201565b61122861275e565b6110d4565b604051636168384960e11b8152600490fd5b60405163b704b7c160e01b8152600490fd5b6101f491501138611098565b8816119150388061108f565b503461000e57602036600319011261000e57600435611286613ccf565b6108fc81106112c0576020817ffc3a20d07f3d5bcc0b01a52011f630765611323fa9afa69f63ba2aa19f7364b692600e55604051908152a1005b6040516356b68a6b60e11b8152600490fd5b503461000e57600036600319011261000e576020600c54604051908152f35b503461000e57602036600319011261000e577fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc60206004356113328161047d565b61133a613ccf565b600580546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b503461000e57602036600319011261000e576004356113808161047d565b60018060a01b031660005260006020526040806000206001815491015482519182526020820152f35b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e57604036600319011261000e5760043561140d8161047d565b6005546001600160a01b03916024359183163303611497576127108211611485577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d89281166000526006602052816040600020556104286040519283928360209093929193604081019460018060a01b031681520152565b604051632242dac960e01b8152600490fd5b604051639f63004360e01b8152600490fd5b503461000e57602036600319011261000e577fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa76460206004356114ea8161047d565b6114f2613ccf565b600b80546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b503461000e57602036600319011261000e57600435600052600960205260e06040600020546040519060ff81161515825261ffff808260081c166020840152808260181c1660408401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b503461000e57602036600319011261000e576004356115b58161047d565b6115bd613ccf565b60045460ff8160a01c166003811015611639575b610a7f576001600160a81b0319166001600160a01b03821617600160a01b176004557fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9061042890604080513381526001600160a01b03909216602083015290918291820190565b6116416106df565b6115d1565b503461000e57608036600319011261000e57600435602435611667816104a8565b61166f610843565b91611678610854565b92611681613ccf565b6008548210156117bb576116b76116b06116a5846000526009602052604060002090565b5460281c61ffff1690565b61ffff1690565b61ffff908186169081119182156117af575b505061123f577f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9936104289161171e8561170d866000526009602052604060002090565b9060ff801983541691151516179055565b61174e81611736866000526009602052604060002090565b9062ffff0082549160081b169062ffff001916179055565b61178282611766866000526009602052604060002090565b9064ffff00000082549160181b169064ffff0000001916179055565b6040519485948592909493606092608085019685521515602085015261ffff809216604085015216910152565b831611905038806116c9565b60405163bd7056c760e01b8152600490fd5b503461000e57604036600319011261000e577fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4460043561180c816104a8565b602435611818816104a8565b60001943014381116118c2575b336000908152602081905260409020805492914060801c9190600101549361189f575b61186d575b506040805133815260208101929092528101919091528060608101610428565b6118779192611ece565b908160016118973360018060a01b03166000526000602052604060002090565b01553861184d565b91816118aa91611ece565b33600090815260208190526040902081905591611848565b6118ca611ea2565b611825565b503461000e57608036600319011261000e576001600160401b0360043581811161000e57611901903690600401610d04565b9060243590811161000e5761191a903690600401610d12565b604435916119278361047d565b3033036119535761194f9261193f926064359261311b565b6040519081529081906020820190565b0390f35b60405163a78d09b960e01b8152600490fd5b503461000e5761197436610d21565b9290600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5560e0850135946119a68661047d565b6001600160a01b03861660008181526007602052604090205460ff1615908115611a0a575b50610e7d57610e66966119ff611a04946119e86101008501611edb565b9687916119f8610e333688612040565b809761360b565b6128be565b9261333c565b905015386119cb565b503461000e57604036600319011261000e57600435611a318161047d565b60018060a01b031660005260026020526040600020602435600052602052602060ff604060002054166040519015158152f35b5060c036600319011261000e576001600160401b0360043581811161000e57611a91903690600401610378565b60243583811161000e57611aa9903690600401610378565b9060443585811161000e57611ac2903690600401610378565b9060643596871161000e57611ade610e7b973690600401610378565b94909360843596611aee8861047d565b611af66104b2565b98612153565b503461000e57600036600319011261000e576020600d54604051908152f35b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611b4557604052565b611b4d611b1b565b604052565b604081019081106001600160401b03821117611b4557604052565b60c081019081106001600160401b03821117611b4557604052565b606081019081106001600160401b03821117611b4557604052565b90601f801991011681019081106001600160401b03821117611b4557604052565b9060018103611c275750611c13611c217f9661287f7a4aa4867db46a2453ee15bebac4e8fc25667a58718da658f15de643925b6040805160208101958652908101919091529182906060820190565b03601f198101835282611ba3565b51902090565b60028103611c5d5750611c13611c217fa54ab330ea9e1dfccee2b86f3666989e7fbd479704416c757c8de8e820142a0892611bf7565b60038103611c935750611c13611c217f93390f5d45ede9dea305f16aec86b2472af4f823851637f1b7019ad0775cea4992611bf7565b60048103611cc95750611c13611c217f9dda2c8358da895e43d574bb15954ce5727b22e923a2d8f28261f297bce42f0b92611bf7565b60058103611cff5750611c13611c217f92dc717124e161262f9d10c7079e7d54dc51271893fba54aa4a0f270fecdcc9892611bf7565b60068103611d355750611c13611c217fce02aee5a7a35d40d974463c4c6e5534954fb07a7e7bc966fee268a15337bfd892611bf7565b60078103611d6b5750611c13611c217ff7a65efd167a18f7091b2bb929d687dd94503cf0a43620487055ed7d6b72755992611bf7565b60088103611da15750611c13611c217fdef24acacad1318b664520f7c10e8bc6d1e7f6f6f7c8b031e70624ceb42266a692611bf7565b60098103611dd75750611c13611c217f4cb4080dc4e7bae88b4dc4307ad5117fa4f26195998a1b5f40368809d7f4c7f292611bf7565b600a8103611e0d5750611c13611c217ff8b1f864164d8d6e0b45f1399bd711223117a4ab0b057a9c2d7779e86a7c88db92611bf7565b6040516375dec1c560e11b81526004810191909152602490fd5b50634e487b7160e01b600052603260045260246000fd5b9190811015611e4f575b60051b0190565b611e57611e27565b611e48565b81835290916001600160fb1b03831161000e5760209260051b809284830137010190565b6001600160a01b039091168152604060208201819052610db993910191611e5c565b50634e487b7160e01b600052601160045260246000fd5b91908203918211611ec657565b61049b611ea2565b91908201809211611ec657565b35610db98161047d565b6040519060e082018281106001600160401b03821117611b4557604052565b604051906101e082018281106001600160401b03821117611b4557604052565b6040519061049b82611b88565b6002111561000e57565b359061049b82611f31565b6020906001600160401b038111611f5e5760051b0190565b611e57611b1b565b9291611f7182611f46565b91611f7f6040519384611ba3565b829481845260208094019160051b810192831161000e57905b828210611fa55750505050565b81358152908301908301611f98565b9080601f8301121561000e57816020610db993359101611f66565b6020906001600160401b038111611fec575b601f01601f19160190565b611ff4611b1b565b611fe1565b81601f8201121561000e5780359061201082611fcf565b9261201e6040519485611ba3565b8284526020838301011161000e57816000926020809301838601378301015290565b91906101e08382031261000e57612055611f04565b9261205f81611f3b565b84526020810135602085015260408101356040850152606081013560608501526080810135608085015261209560a08201611f3b565b60a08501526120a660c0820161049d565b60c08501526120b760e0820161049d565b60e08501526101006120ca81830161049d565b908501526101208181013590850152610140808201359085015261016080820135908501526001600160401b03916101808083013584811161000e5782612112918501611fb4565b908601526101a08083013584811161000e5782612130918501611fb4565b908601526101c0928383013590811161000e5761214d9201611ff9565b90830152565b999897969391959490600b54600260ff8260a01c1614610e8f5760ff60a01b1916600160a11b17600b5580158015612414575b61046b576121c79a60e0946121d26121ce6121ab886121a5858e612427565b01611edb565b6001600160a01b0381166000908152600760205260409020909f565b5460ff1690565b1590565b610e7d5760009a156122ea5797969594939291906000985b828a10612225575050505050505050505061220892935b339061333c565b612210613f32565b600b805460ff60a01b1916600160a01b179055565b9091929394959697989a88888f888f898f89612243848b8e94612451565b95846122b4575b50936122898461229e97946122838261226f60019e9c99610e4f986122a49f9c612482565b9861227d610e33368b612040565b9a612482565b936124b2565b90866122986101008701611edb565b9361360b565b90611ece565b9b019897969594939291906121ea565b9650505050505091506122c8898301611edb565b6001600160a01b03918216911603610e7d57888f91888f89898f968a9061224a565b8a9c98979493929c5b8d811061230e57505050505050505050612208939450612201565b8d8161231b81858d612451565b91816123ee575b61238992916123319187612482565b908a61236861234e86612347610e333687612040565b938d612482565b612359878b8d6124b2565b90846122986101008801611edb565b6040518094819263d5b7f06560e01b8352602095869533916004860161271f565b03816000305af19182916000936123bf575b50506123ab575b506001016122f3565b6123b8906001929d611ece565b9b906123a2565b6123df929350803d106123e7575b6123d78183611ba3565b810190612501565b90388061239b565b503d6123cd565b50506123fb888201611edb565b6001600160a01b038c8116911603610e7d57818f612322565b5080851881831882861817171515612186565b9015612444575b8035906101de198136030182121561000e570190565b61244c611e27565b61242e565b9190811015612475575b60051b810135906101de198136030182121561000e570190565b61247d611e27565b61245b565b91908110156124a5575b60051b81013590603e198136030182121561000e570190565b6124ad611e27565b61248c565b91908110156124f4575b60051b81013590601e198136030182121561000e5701908135916001600160401b03831161000e57602001823603811361000e579190565b6124fc611e27565b6124bc565b9081602091031261000e575190565b9035601e198236030181121561000e5701602081359101916001600160401b03821161000e57813603831361000e57565b908060209392818452848401376000828201840152601f01601f1916010190565b90604061258c610db99380356125778161047d565b6001600160a01b031684526020810190612510565b9190928160208201520191612541565b6002111561070057565b906125b08261259c565b52565b9035601e198236030181121561000e5701602081359101916001600160401b03821161000e578160051b3603831361000e57565b610db9916125fd816125f884611f3b565b6125a6565b6020820135602082015260408201356040820152606082013560608201526080820135608082015261263e61263460a08401611f3b565b60a08301906125a6565b61265d61264d60c0840161049d565b6001600160a01b031660c0830152565b61267c61266c60e0840161049d565b6001600160a01b031660e0830152565b61269c61010061268d81850161049d565b6001600160a01b031690830152565b6101208083013590820152610140808301359082015261016080830135908201526127006126e46101806126d2818601866125b3565b90916101e08091870152850191611e5c565b6101a06126f3818601866125b3565b9185840390860152611e5c565b916127116101c09182810190612510565b929091818503910152612541565b9060609261273c61274a9297969597608085526080850190612562565b9083820360208501526125e7565b6001600160a01b0390951660408201520152565b506040513d6000823e3d90fd5b35610db981611f31565b90815180825260208080930193019160005b828110612795575050505090565b835185529381019392810192600101612787565b6000915b600283106127ba57505050565b81516001600160a01b0316815260019290920191602091820191016127ad565b6000915b600383106127eb57505050565b6001908251815260208091019201920191906127de565b9561288a9061287a6128b7976128ab9761049b9d9f9e9c976128659061285561289c996101809f998f60406060928051835260208101516020840152015115156040820152019060018060a01b03169052565b6001600160a01b031660808d0152565b60a08b01526001600160a01b031660c08a0152565b6001600160a01b031660e0880152565b6101e080610100880152860190612775565b90848203610120860152612775565b966101408301906127a9565b01906127da565b91906128c98161276b565b6128d28161259c565b612a8a576128e36101008201611edb565b6001600160a01b0381166000908152600160205260409020909290936129186060840135809690600052602052604060002090565b546001600160a01b03851660009081526020819052604090205460208501351490811591612a4d575b8115612a2d575b50612a1b5782339061295992612c02565b8861296d87849b8b85999699989798613580565b60c088019161297b83611edb565b85858c3361298b60a08f0161276b565b61299495613910565b60e08901918a6129a384611edb565b906129af918a8a61352f565b6129b7611f24565b9889526020890152151560408801526129cf90611edb565b906129d990611edb565b906040519860808a99013590336129f0998b612802565b037f9aaa45d6db2ef74ead0751ea9113263d1dec1b50cea05f0ca2002cb8063564a491a16040015190565b604051631782f9fd60e31b8152600490fd5b9050828115159182612a42575b505038612948565b141590508238612a3a565b9050612a846121c7612a718760018060a01b03166000526002602052604060002090565b6040870135600052602052604060002090565b90612941565b60405163d641ac7b60e01b8152600490fd5b60405190612aa982611b52565b6040368337565b60405190612abd82611b88565b6060368337565b9091612adb610db993604084526040840190612562565b9160208184039101526125e7565b3d15612b14573d90612afa82611fcf565b91612b086040519384611ba3565b82523d6000602084013e565b606090565b81601f8201121561000e57805191612b3083611f46565b92612b3e6040519485611ba3565b808452602092838086019260051b82010192831161000e578301905b828210612b68575050505090565b81518152908301908301612b5a565b60808183031261000e578051926020820151926001600160401b039384811161000e5781612ba6918501612b19565b93604084015190811161000e57606091612bc1918501612b19565b920151610db9816104a8565b903590601e198136030182121561000e57018035906001600160401b03821161000e57602001918160051b3603831361000e57565b919290612c0d612a9c565b91612c16612ab0565b916000612c2d6101408301356101208401356130c1565b60808201359081612d2d578483928792612c936101a0612c849b989701612c8b612c7b88612c75612c5e8583612bcd565b612c6d61018085018095612bcd565b9290506130dc565b89612bcd565b9d909289612bcd565b3691611f66565b9b3691611f66565b9a60019761016087013592612cce612cb88f5b86612cb360c08d01611edb565b612ebc565b6020890152602089019060018060a01b03169052565b612cd78861276b565b612ce08161259c565b612d1a5761049b97506001600160a01b03612cfa83611edb565b1615159050612d0a575091612fd5565b612d149150611edb565b91612fd5565b505050612d1461010061049b9601611edb565b612d446121c7836000526009602052604060002090565b15612e3657612d528361276b565b612d73612d69846000526009602052604060002090565b5460581c60ff1690565b14612e29578080612d98612d91856000526009602052604060002090565b5460601c90565b612dc0612daf866000526009602052604060002090565b5460a81b6001600160e01b03191690565b8287612ddf8d611c136040519384926020840197885260248401612ac4565b51925af197612dec612ae9565b9815612e2157612cce94939287928792612e128c602080612cb89f518301019101612b77565b9d9294919d9a909d9e8f612ca6565b885160208a01fd5b63ab98484690526004601cfd5b604051636b9e163560e11b815260048101839052602490fd5b919082604091031261000e5760208251612e688161047d565b92015190565b610db9939260609260018060a01b0316825260208201528160408201520190612775565b9061271091828102928184041490151715611ec657565b81810292918115918404141715611ec657565b600b546000948594909391612ee1906001600160a01b03165b6001600160a01b031690565b6001600160a01b0393818516612ef9575b5050505050565b612f22975083949650926040938451988994859384936370c1092160e01b855260048501612e6e565b03915afa8015612fc8575b6000948591612f94575b508093851615600014612f55575060009250505b3880808080612ef2565b612f61612f7c91612e92565b91612f766116b0600a5461ffff9060a01c1690565b90612ea9565b1015612f4b576040516397d7dcfb60e01b8152600490fd5b9050612fb891945060403d8111612fc1575b612fb08183611ba3565b810190612e4f565b93909338612f37565b503d612fa6565b612fd061275e565b612f2d565b9061049b949293918060005260096020526127109061ffff90826130038360406000205460181c1686612ea9565b04926020860192835192831560001461303b57505050505061302a91816040850152611eb9565b90526001600160a01b039091169052565b61302a96939495929160406130609260009081526009602052205460081c1684612ea9565b0492818185018086116130b4575b10613091575b50506130899192604086019384525190611eb9565b905190611eb9565b613089935081039081116130a7575b9138613074565b6130af611ea2565b6130a0565b6130bc611ea2565b61306e565b904211904210176130ce57565b637476320f6000526004601cfd5b90600092811881151761310e5760051b90815b6130f857505050565b601f1980830192820101351561310e57816130ef565b632e0c0f7183526004601cfd5b90929192600161312a8261276b565b6131338161259c565b03612a8a576131456101008201611edb565b906131786131658360018060a01b03166000526001602052604060002090565b6060830135600052602052604060002090565b546001600160a01b038316600090815260208190526040902060010154602083013514908115916132ff575b81156132df575b50612a1b576131bb338285612c02565b95938399898299849b60608a9896980135906131d8918a8d613580565b826131e560e08b01611edb565b906131f191898961352f565b6131fd60c08a01611edb565b9961320a60a08b0161276b565b906001600160a01b0361321c84611edb565b161560001460409f7f3ee3de4684413690dee6fff1a0a4f92916a1b97d1c5a83cdf24671844306b2e39e60809e6132b99d61327d96613260956132d0578a92613910565b613268611f24565b93845260608b0135602085015215158e840152565b613289612ed582611edb565b6132c1575081905b61329d60e08a01611edb565b916132aa60c08b01611edb565b938e519b8c9b0135928b612802565b0390a1015190565b6132ca90611edb565b90613291565b6132d989611edb565b92613910565b90508481151591826132f4575b5050386131ab565b1415905084386132ec565b90506133366121c76133238560018060a01b03166000526002602052604060002090565b6040850135600052602052604060002090565b906131a4565b909291928261334c575b50505050565b613378936001600160a01b039081811680613381575b5050600a546001600160a01b0316905091613442565b38808080613346565b60ff60045460a81c1615613362578060005260066020526133b26133aa60406000205488612ea9565b612710900490565b90816133bf575b50613362565b81613425916133f28895947f49e92b6b3114f7e128555cd58c568f7c2e0e56fe9b4c46b6125bc308184623b3979a611eb9565b98871603613431575b604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b0390a1388080806133b9565b61343d81848887613442565b6133fb565b919291906001600160a01b0382166134855750509061049b91600e54917f0000000000000000000000000000000000000000000000000000000000000000613f5f565b813b1561351d576040516323b872dd60e01b602082019081526001600160a01b0392831660248301529490911660448201526064810192909252600092839283906134d38160848101611c13565b51925af16134df612ae9565b901561350b578051806134f0575050565b816020806121ce936135059501019101613789565b61350b57565b60405163e560521360e01b8152600490fd5b6040516309ee12d560e01b8152600490fd5b929190602090805180613563575b500151918261354c5750505050565b61337893602060018060a01b039101511691613442565b855161357a91906001600160a01b03168686613442565b3861353d565b909290156135d057507f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db915b60018060a01b03166000526001602052604060002090600052602052604060002055565b916135ac565b903590601e198136030182121561000e57018035906001600160401b03821161000e57602001918160061b3603831361000e57565b939291906020948581019561362087836135d6565b80989150613636575b50505061049b9450613714565b600a88116136fb5761364a908394936135d6565b9335938493926000925b82841061368b5750505050036136795761049b9461367191611bc4565b388080613629565b60405163c8ac23c360e01b8152600490fd5b91939083955061369d81948685613a54565b01356136a881611f31565b6136b18161259c565b6136dc576136c0858584613a54565b35600052825260016040600020945b0192909185949392613654565b6136e7858584613a54565b3590600052825260016040600020946136cf565b6040516375dec1c560e11b815260048101899052602490fd5b92600c5446146000146137775761049b93600d549060405190602082019261190160f01b84526022830152604282015260428152608081018181106001600160401b0382111761376a575b604052519020613d21565b613772611b1b565b61375f565b604051636fd794c760e01b8152600490fd5b9081602091031261000e5751610db9816104a8565b61388460c061049b936137c081511515859060ff801983541691151516179055565b6020810151845462ffff00191660089190911b62ffff001617845561380161ffff6040830151865464ffff0000001916911660181b64ffff00000016178555565b606081015166ffff000000000085549160281b168066ffff00000000001983161786556affffffff00000000000000608084015160a81c16916affffffffffff000000000019161717845561387661385c60a0830151151590565b855460ff60581b191690151560581b60ff60581b16178555565b01516001600160a01b031690565b81546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916179055565b60019060001981146138be570190565b6138c6611ea2565b0190565b6001600160a01b0391821681529181166020830152909116604082015260a060608201819052610db993919261390291840190612775565b916080818403910152612775565b9394919061391d8161259c565b806139ac57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561000e5760009461397a86926040519889978896879563a7bc96d360e01b8752600487016138ca565b03925af1801561399f575b61398c5750565b8061399961049b92611b32565b80610623565b6139a761275e565b613985565b806139b860019261259c565b146139c4575050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561000e57600094613a1b869260405198899788968795635052036360e11b8752600487016138ca565b03925af18015613a47575b613a34575b80808080612ef2565b80613999613a4192611b32565b38613a2b565b613a4f61275e565b613a26565b9190811015613a65575b60061b0190565b613a6d611e27565b613a5e565b969491926101009693999894919961012089019a7e3c1bce41a2de73dfe64d6eeb2b3d7f15f1c0c382d9d963c2c6daeb75f0e5398a52613ab18161259c565b60208a015260408901526060880152608087015260a0860152613ad38161259c565b60c08501526001600160a01b0391821660e085015216910152565b805160208092019160005b828110613b07575050505090565b835185529381019392810192600101613af9565b9081519160005b838110613b33575050016000815290565b8060208092840101518185015201613b22565b61049b90613b68613b6294936040519586936020850190613b1b565b90613b1b565b03601f198101845283611ba3565b613cc7815191613b858361259c565b602092613cc284613bde8185015160408601516060870151608088015160a089015191613bb18361259c565b60c08a01516001600160a01b031660e08b01519094906001600160a01b0316956040519a8b998a01613a72565b03613bf1601f1991828101855284611ba3565b6101008401518690613cb6906001600160a01b03169561012081015190610140810151610160820151610180830151604051613c4081613c348a82018095613aee565b038a8101835282611ba3565b519020916101c06101a0850151604051613c6d81613c618c82018095613aee565b038c8101835282611ba3565b519020940151805190880120604080516001600160a01b03909d16988d019889526020890196909652948701526060860152608085015260a084015260c0830152859160e00190565b03908101845283611ba3565b613b46565b805191012090565b6003546001600160a01b03163303613ce357565b6040516330cd747160e01b8152600490fd5b9081602091031261000e5751610db98161100f565b604090610db9949281528160208201520191612541565b929091823b613d5857613d349293613df8565b6001600160a01b0390811691161461049b5760405163d1085d1b60e01b8152600490fd5b90613d7e92602092604051809581948293630b135d3f60e11b998a855260048501613d0a565b03916001600160a01b03165afa908115613deb575b600091613dbd575b506001600160e01b0319161461049b5760405163f6cd0e2f60e01b8152600490fd5b613dde915060203d8111613de4575b613dd68183611ba3565b810190613cf5565b38613d9b565b503d613dcc565b613df361275e565b613d93565b909160418103613eef5750604082013560001a91602081013590355b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211613edd5760ff8416601b8114159081613ed1575b50613eb6576040805193845260ff9490941660208085019190915293830152606082015260008080529060809060015afa15613ea9575b600051906001600160a01b03821615613e9757565b60405163f05a20c760e01b8152600490fd5b613eb161275e565b613e82565b60405163105e24e960e21b815260ff85166004820152602490fd5b601c9150141538613e4b565b6040516360c2892960e11b8152600490fd5b60408103613f185750602082013560ff81901c601b01926001600160ff1b039091169035613e14565b60405163d42b4bbd60e01b81526004810191909152602490fd5b4760018111613f3e5750565b600080808093811901335af115613f5157565b6307246cf46000526004601cfd5b613f73828495600080809781948294f11590565b613f7d5750505050565b6001600160a01b031691823b156106dc5791613fed9391602093604051630d0e30db60e41b8152818160048188885af18015614043575b614030575b5060405163a9059cbb60e01b81526001600160a01b0390921660048301526024820193909352938492839182906044820190565b03925af18015614023575b614005575b808080613346565b61401c9060203d81116112195761120b8183611ba3565b5038613ffd565b61402b61275e565b613ff8565b8061399961403d92611b32565b38613fb9565b61404b61275e565b613fb456fea26469706673582212202fb8c825cbf0c451fda5b6c3094b2642e58ec8a77c3775e218c713c8463a586464736f6c63430008110033",
    "sourceMap": "4745:21487:15:-:0;;;;;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;4745:21487:15;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;2686:11:14;;2682:65;;2696:1;2773:10;;;;;;4745:21487:15;2937:47:14;4745:21487:15;2937:47:14;4745:21487:15;;2817:10:14;;;;2937:47;;:::i;:::-;;;;4745:21487:15;2762:9:14;2848:4;2817:10;;2696:1;4745:21487:15;2801:51:14;4745:21487:15;2801:15:14;4745:21487:15;;;;;2696:1:14;4745:21487:15;2829:15:14;;;;;;:::i;:::-;4745:21487:15;2696:1:14;4745:21487:15;;2696:1:14;4745:21487:15;2848:4:14;4745:21487:15;;;;;;;;;2801:51:14;4745:21487:15;2762:9:14;;2682:65;4745:21487:15;;-1:-1:-1;;;2720:16:14;;4745:21487:15;;2720:16:14;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;4745:21487:15;;;;1140:42:10;4745:21487:15;;;;;;:::i;:::-;;;;;;;:::i;:::-;926:61:224;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;-1:-1:-1;4745:21487:15;;;1086:17:10;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;1140:42:10;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;926:61:224;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;7973:37:12;;7969:119;;4745:21487:15;;8159:48:12;4745:21487:15;;;;8098:46:12;4745:21487:15;;;8098:46:12;4745:21487:15;;;;;;8159:48:12;4745:21487:15;7969:119:12;4745:21487:15;;-1:-1:-1;;;8033:44:12;;4745:21487:15;;8033:44:12;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4745:21487:15;;;;;-1:-1:-1;4745:21487:15;;;-1:-1:-1;4745:21487:15;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;926:61:224;;:::i;:::-;4745:21487:15;;;;;;;;;;;;;;1526:44:224;;1522:111;;4745:21487:15;;;;;:::i;:::-;1647:45:224;1643:97;;4745:21487:15;-1:-1:-1;4745:21487:15;;;-1:-1:-1;;;;4745:21487:15;;;1788:25:224;;;;4745:21487:15;;1643:97:224;-1:-1:-1;;;;;;4745:21487:15;;;1643:97:224;;;1522:111;4745:21487:15;;-1:-1:-1;;;1593:29:224;;4745:21487:15;;1593:29:224;4745:21487:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;;:::o;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;926:61:224;;:::i;:::-;2010:29;4745:21487:15;;;;;;;;;;;;;1991:48:224;1987:113;;4745:21487:15;;;-1:-1:-1;;;;;;4745:21487:15;;;;;;-1:-1:-1;;;;4745:21487:15;;;;;;;;2170:20:224;;4745:21487:15;;;;2170:20:224;4745:21487:15;1987:113:224;4745:21487:15;;-1:-1:-1;;;2062:27:224;;4745:21487:15;;2062:27:224;4745:21487:15;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;1028:33:14;4745:21487:15;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;:::i;:::-;926:61:224;;:::i;:::-;4745:21487:15;;;2776:26:12;2797:5;2776:26;;2772:85;;2867:36;4745:21487:15;;-1:-1:-1;;;;4745:21487:15;;;;;;-1:-1:-1;;;4745:21487:15;;;;;;;;;;;;2919:38:12;;4745:21487:15;;2919:38:12;4745:21487:15;2772:85:12;4745:21487:15;;-1:-1:-1;;;2825:21:12;;4745:21487:15;;2825:21:12;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;760:48:21;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;787:34:6;4745:21487:15;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;2620:35:6;4745:21487:15;;;;;;:::i;:::-;926:61:224;;:::i;:::-;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;2620:35:6;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4745:21487:15;528:49:10;4745:21487:15;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;4745:21487:15;;;;;;;;;;;;;;3647:108:224;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;;;3828:31:224;;;;4745:21487:15;;3647:108:224;4745:21487:15;;-1:-1:-1;;;3717:27:224;;4745:21487:15;;3717:27:224;4745:21487:15;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;1416:35:12;4745:21487:15;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;1527:37:12;4745:21487:15;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;2446:25:224;4745:21487:15;;;;;;;;:::i;:::-;2427:44:224;2423:105;;-1:-1:-1;;;;;4745:21487:15;2542:10:224;:28;2538:87;;2635:18;4745:21487:15;;-1:-1:-1;;;;;;4745:21487:15;2542:10:224;4745:21487:15;;;;;;;;;-1:-1:-1;;;;;;4745:21487:15;;;;;;;;2732:20:224;;4745:21487:15;;;;2732:20:224;4745:21487:15;2538:87:224;4745:21487:15;;-1:-1:-1;;;2593:21:224;;4745:21487:15;;2593:21:224;2423:105;4745:21487:15;;-1:-1:-1;;;2494:23:224;;4745:21487:15;;2494:23:224;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;:::i;:::-;2006:11:14;;2002:65;;2016:1;2093:10;;;;;;4745:21487:15;2283:45:14;4745:21487:15;2283:45:14;4745:21487:15;;2136:10:14;;;;2283:45;;:::i;2082:9::-;2136:10;2016:1;4745:21487:15;2121:14:14;4745:21487:15;2121:77:14;4745:21487:15;;;;;;;2016:1:14;4745:21487:15;2148:14:14;;;;;;:::i;:::-;4745:21487:15;2016:1:14;4745:21487:15;;2016:1:14;4745:21487:15;1028:33:14;162:6:4;;;2121:77:14;4745:21487:15;2082:9:14;;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4745:21487:15;1040:49:6;4745:21487:15;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;1623:43:12;4745:21487:15;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;4745:21487:15;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;763:7:225;4745:21487:15;774:1:225;4745:21487:15;;;;;763:12:225;759:66;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;763:7:225;4745:21487:15;7355:17;;;4745:21487;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;-1:-1:-1;4745:21487:15;;;7451:17;4745:21487;;;;;;;;7450:28;7446:83;;7653:15;7778:59;4745:21487;7974:22;4745:21487;7559:15;4745:21487;;;;:::i;:::-;7559:15;:::i;:::-;7653;;;;;4745:21487;;;;;:::i;:::-;7653:15;:::i;:::-;7815:10;7778:59;;:::i;:::-;7815:10;;7974:22;;:::i;:::-;;;:::i;:::-;763:7:225;4745:21487:15;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;;;;867:11:225;4745:21487:15;7446:83;4745:21487;;-1:-1:-1;;;7501:17:15;;4745:21487;;7501:17;759:66:225;4745:21487:15;;-1:-1:-1;;;798:16:225;;4745:21487:15;;798:16:225;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;12753:7:15;4745:21487;12736:13;:24;12753:7;;-1:-1:-1;;;4745:21487:15;;;;;;:::i;:::-;;;;;;22765:337;4745:21487;;;22806:286;;4745:21487;22834:95;4745:21487;;22947:30;4745:21487;;;;22995:21;4745:21487;;;;12736:13;4745:21487;;;;23073:4;4745:21487;;;;;22806:286;;;;;:::i;:::-;4745:21487;22783:319;;22765:337;162:6:4;;22765:337:15;23112:23;12736:13;12753:7;162:6:4;;23112:23:15;12819:20;;;;4745:21487;;12732:177;4745:21487;;-1:-1:-1;;;12877:21:15;;4745:21487;;12877:21;4745:21487;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;-1:-1:-1;;;;;;4745:21487:15;;;;;:::o;:::-;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;926:61:224;;:::i;:::-;4745:21487:15;;;;;;;2199:32:19;;;:73;;;;;4745:21487:15;2199:99:19;;;;;;4745:21487:15;2195:165:19;;;-1:-1:-1;;;;;;4745:21487:15;;2374:21:19;2370:82;;4745:21487:15;;-1:-1:-1;;;2467:49:19;;4745:21487:15;;;;-1:-1:-1;;;;;4745:21487:15;;2467:49:19;;;;;;;4745:21487:15;-1:-1:-1;2467:49:19;;;4745:21487:15;2466:50:19;;2462:103;;2932:219;4745:21487:15;2932:219:19;4745:21487:15;;;;:::i;:::-;2641:4:19;4745:21487:15;;;;;;2608:308:19;;4745:21487:15;;;;;2608:308:19;;4745:21487:15;;;;;2608:308:19;;4745:21487:15;-1:-1:-1;;;;;;4745:21487:15;;;2608:308:19;;4745:21487:15;;;;;2608:308:19;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;2608:308:19;;4745:21487:15;2575:30:19;2588:16;4745:21487:15;;;2575:12:19;4745:21487:15;;;;;;;2575:30:19;4745:21487:15;:::i;:::-;2588:16:19;4745:21487:15;2957:18:19;;;;;:::i;:::-;2588:16;162:6:4;;2957:18:19;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4745:21487:15;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;2462:103:19;4745:21487:15;;-1:-1:-1;;;2539:15:19;;4745:21487:15;;2539:15:19;2467:49;;;;4745:21487:15;2467:49:19;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;2370:82;4745:21487:15;;-1:-1:-1;;;2418:23:19;;4745:21487:15;;2418:23:19;2195:165;4745:21487:15;;-1:-1:-1;;;2321:28:19;;4745:21487:15;;2321:28:19;2199:99;2295:3;2276:22;;;2199:99;;;:73;4745:21487:15;;2235:37:19;;-1:-1:-1;2199:73:19;;;;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;926:61:224;;:::i;:::-;13276:5:15;13251:30;;13247:98;;4745:21487;162:6:4;13416:46:15;162:6:4;13355:45:15;162:6:4;4745:21487:15;;;;;13416:46;4745:21487;13247:98;4745:21487;;-1:-1:-1;;;13304:30:15;;4745:21487;;13304:30;4745:21487;;;;;;;-1:-1:-1;;4745:21487:15;;;;;5117:22;4745:21487;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;2228:46:6;4745:21487:15;;;;;;:::i;:::-;926:61:224;;:::i;:::-;2169:44:6;4745:21487:15;;-1:-1:-1;;;;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;2228:46:6;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4745:21487:15;-1:-1:-1;4745:21487:15;;;;-1:-1:-1;4745:21487:15;;;;1154:60:14;;4745:21487:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;5033:29;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;1588:19:6;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;;;;1574:10:6;:33;1570:95;;162:6:4;1679:30:6;;1675:87;;1817:31;4745:21487:15;;;-1:-1:-1;4745:21487:15;1772:14:6;4745:21487:15;;;;-1:-1:-1;4745:21487:15;162:6:4;1817:31:6;4745:21487:15;;1817:31:6;;;;162:6:4;;;;;;;;;4745:21487:15;;;;;;;;;162:6:4;4745:21487:15;162:6:4;1675:87:6;4745:21487:15;;-1:-1:-1;;;1732:19:6;;4745:21487:15;;1732:19:6;1570:95;4745:21487:15;;-1:-1:-1;;;1630:24:6;;4745:21487:15;;1630:24:6;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;2352:42:12;4745:21487:15;;;;;;:::i;:::-;926:61:224;;:::i;:::-;2277:60:12;4745:21487:15;;-1:-1:-1;;;;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;2352:42:12;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;-1:-1:-1;4745:21487:15;809:48:19;4745:21487:15;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;926:61:224;;:::i;:::-;4745:21487:15;;;;;;;;;;;;;;3023:108:224;;-1:-1:-1;;;;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;-1:-1:-1;;;4745:21487:15;;;3415:56:224;;;;4745:21487:15;;;3441:10:224;4745:21487:15;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;926:61:224;;;:::i;:::-;3761:16:19;4745:21487:15;3747:30:19;;;3743:85;;3842:58;3859:41;:24;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;3859:24:19;4745:21487:15;;;;;;;3859:41:19;4745:21487:15;;;;3842:58:19;4745:21487:15;;;;;3842:58:19;;;:101;;;;;4745:21487:15;3838:167:19;;;;4221:77;4015:24;4221:77;4015:24;:44;:24;;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;4015:24:19;4745:21487:15;;;;;;;;;;;;;;;4015:44:19;4069:71;:24;;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;4069:24:19;4745:21487:15;;;;;;;;;;;;;;;;4069:71:19;4150:55;:24;;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;4150:24:19;4745:21487:15;;;;;;;;;;;;;;;;4150:55:19;4745:21487:15;;4221:77:19;;;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3842:101:19;4745:21487:15;;3904:39:19;;-1:-1:-1;3842:101:19;;;;3743:85;4745:21487:15;;-1:-1:-1;;;3800:17:19;;4745:21487:15;;3800:17:19;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;;4529:53:14;4745:21487:15;;;;;:::i;:::-;;;;;;:::i;:::-;;;4068:12:14;4745:21487:15;4068:12:14;4745:21487:15;;;;;4142:10:14;4745:21487:15;;;;;;;;;;;;;;4058:27:14;;4089:3;4745:21487:15;;4142:10:14;4083:1;4194:37;4745:21487:15;4242:131:14;;;4745:21487:15;4383:131:14;;4745:21487:15;-1:-1:-1;4745:21487:15;;;4142:10:14;4745:21487:15;;;;;;;;;;;;;;;;;;;4529:53:14;4745:21487:15;4383:131:14;4406:32;;;;:::i;:::-;4142:10;;4083:1;4452:28;4142:10;4745:21487:15;;;;;;4125:16:14;4745:21487:15;4125:16:14;4745:21487:15;;;4125:16:14;4745:21487:15;;;4452:28:14;:37;162:6:4;4383:131:14;;;4242;4265:32;;;;;:::i;:::-;4142:10;4125:16;4745:21487:15;;;;;;;;;;162:6:4;;;4142:10:14;4242:131;;4745:21487:15;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;12236:4;12214:10;:27;12210:80;;4745:21487;;12320:55;4745:21487;;;12320:55;;:::i;:::-;4745:21487;;;;;;;;;;;;;;;;;12210:80;4745:21487;;-1:-1:-1;;;12264:15:15;;4745:21487;;12264:15;4745:21487;;;;;;;;:::i;:::-;;;763:7:225;4745:21487:15;774:1:225;4745:21487:15;;;;;763:12:225;759:66;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;763:7:225;4745:21487:15;6348:17;;;4745:21487;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;-1:-1:-1;4745:21487:15;;;6459:17;4745:21487;;;;;;;;6458:28;:54;;;;;4745:21487;6454:109;;;7018:22;6590:15;6729:6;6845:47;6590:15;;;;;;:::i;:::-;4745:21487;;;6635:15;4745:21487;;;;:::i;6635:15::-;6729:6;;;:::i;:::-;6845:47;:::i;:::-;7018:22;;:::i;6458:54::-;6490:22;;;6458:54;;;4745:21487;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4745:21487:15;1496:67:14;4745:21487:15;;;-1:-1:-1;4745:21487:15;;;-1:-1:-1;4745:21487:15;;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;-1:-1:-1;;4745:21487:15;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8082:3405;4745:21487;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;8082:3405;;:::i;4745:21487::-;;;;;;;-1:-1:-1;;4745:21487:15;;;;;5203:30;4745:21487;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;:::-;14186:19;4745:21487;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;645:202:7:-;;2040:1;2030:11;;2040:1;;2057:80;786:53;;4745:21487:15;2026:1340:7;;4745:21487:15;;;786:53:7;;;4745:21487:15;;;;;;;;;;;;;;;;;;786:53:7;;4745:21487:15;;786:53:7;;;;;;:::i;:::-;4745:21487:15;776:64:7;;645:202;:::o;2026:1340::-;2168:1;2158:11;;2168:1;;2185:80;786:53;;4745:21487:15;2154:1212:7;2026:1340;;2154:1212;2296:1;2286:11;;2296:1;;2313:80;786:53;;4745:21487:15;2282:1084:7;2026:1340;;2282:1084;2424:1;2414:11;;2424:1;;2441:80;786:53;;4745:21487:15;2410:956:7;2026:1340;;2410:956;2552:1;2542:11;;2552:1;;2569:80;786:53;;4745:21487:15;2538:828:7;2026:1340;;2538:828;2680:1;2670:11;;2680:1;;2697:80;786:53;;4745:21487:15;2666:700:7;2026:1340;;2666:700;2808:1;2798:11;;2808:1;;2825:80;786:53;;4745:21487:15;2794:572:7;2026:1340;;2794:572;2936:1;2926:11;;2936:1;;2953:80;786:53;;4745:21487:15;2922:444:7;2026:1340;;2922:444;3064:1;3054:11;;3064:1;;3081:80;786:53;;4745:21487:15;3050:316:7;2026:1340;;3050:316;3192:2;3182:12;;3192:2;;3210:80;786:53;;4745:21487:15;3178:188:7;2026:1340;;3178:188;4745:21487:15;;-1:-1:-1;;;3328:27:7;;2424:1;3328:27;;4745:21487:15;;;;;;3328:27:7;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;4745:21487:15;;;:::o;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;-1:-1:-1;;4745:21487:15;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;725:160:225:-;;;;;;;;;;763:7;4745:21487:15;774:1:225;4745:21487:15;;;;;763:12:225;759:66;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;763:7:225;4745:21487:15;8468:11;;:127;;;;725:160:225;8451:203:15;;8794:27;;8758:21;;8793:28;8794:27;8758:21;;:12;:21;;:12;:::i;:::-;:21;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;8794:17;4745:21487;;;;;8794:27;;4745:21487;8794:27;4745:21487;;;;;8794:27;8793:28;;4745:21487;8793:28;8789:83;;-1:-1:-1;;9136:2103:15;;;9173:9;;;;;;;;-1:-1:-1;9168:950:15;9184:10;;;;;;9136:2103;;;;;;;;;;11376:22;9136:2103;;;11353:10;11376:22;;:::i;:::-;;;:::i;:::-;763:7:225;4745:21487:15;;-1:-1:-1;;;;4745:21487:15;-1:-1:-1;;;4745:21487:15;;;:::o;9173:9::-;9259:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9353:6;;9349:176;;9173:9;9586:12;;9761:18;9586:12;9922:59;9586:12;;9734:14;9586:12;;4745:21487;9586:12;;;9781:15;9586:12;9896:85;9586:12;;;:::i;:::-;4745:21487;9640:15;4745:21487;;;;:::i;9640:15::-;9734:14;;:::i;:::-;9761:18;;:::i;:::-;9781:15;;;;;;;:::i;:::-;;;:::i;9922:59::-;9896:85;;:::i;:::-;4745:21487;;9173:9;;;;;;;;;;;9349:176;9391:17;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;9391:29;9387:116;;9349:176;;;;;;;;;;;;;9136:2103;10161:9;;;;;;;;10172:10;;;;;;9136:2103;;;;;;;;;11376:22;9136:2103;;;;;10161:9;10247:12;;;;;;;:::i;:::-;10341:6;;10337:176;;10161:9;10816:73;10574:12;;;;;;:::i;:::-;4745:21487;;10769:15;10722:14;4745:21487;10628:15;4745:21487;;;;:::i;10628:15::-;10722:14;;;:::i;:::-;10749:18;;;;;:::i;:::-;10769:15;;;;;;;:::i;:::-;4745:21487;;;;;;;;;10816:73;;;10867:10;;;;10816:73;;;;;:::i;:::-;;:4;-1:-1:-1;10816:4:15;:73;;;;;-1:-1:-1;10816:73:15;;;10161:9;10812:277;;;;10161:9;4745:21487;;;10161:9;;10812:277;11010:43;;4745:21487;11010:43;;;:::i;:::-;10812:277;;;;10816:73;;;;;;;-1:-1:-1;10816:73:15;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;10337:176;10379:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;10379:29;10375:116;;10337:176;;;;8468:127;8562:27;;;;8526:31;;;8496:25;;;8495:63;:95;:100;;8468:127;;4745:21487;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;4745:21487:15;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;4745:21487:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;13787:2019::-;;;13979:18;;;:::i;:::-;4745:21487;;;:::i;:::-;13975:91;;14093:15;;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;14163:22;;;14186:19;14163:43;14186:19;;;4745:21487;14163:43;;4745:21487;;;;;;;;;;14163:43;4745:21487;-1:-1:-1;;;;;4745:21487:15;;13979:18;4745:21487;;;;;;;;;;;14307:20;;;4745:21487;14270:57;;;;:122;;;13787:2019;14270:215;;;;13787:2019;14249:306;;;14835:10;;14785:61;;;;:::i;:::-;14969:9;;;;;;;;;;;;;;:::i;:::-;15038:19;;;;;;;:::i;:::-;14835:10;;;;15059:23;;;;;:::i;:::-;15113:7;;;:::i;:::-;15231:17;;;;;;;;:::i;:::-;15250:6;;;;;;:::i;:::-;4745:21487;;:::i;:::-;;;;14307:20;15295:186;;4745:21487;;;15295:186;;;4745:21487;15572:17;;;:::i;:::-;15603:19;;;;:::i;:::-;4745:21487;15295:186;4745:21487;15539:19;;;;;4745:21487;14835:10;;15273:449;;;;:::i;:::-;;;;;15295:186;4745:21487;;13787:2019;:::o;14249:306::-;4745:21487;;-1:-1:-1;;;14525:15:15;;;;;14270:215;14413:34;;;;;;:71;;;;14270:215;;;;;;14413:71;14451:33;;;-1:-1:-1;14413:71:15;;;;14270:122;14347:23;;:45;;:23;;4745:21487;;;;;;;;14347:15;4745:21487;;;;;;;14347:23;14371:20;;;4745:21487;;;;;;;;;;14347:45;14270:122;;;13975:91;4745:21487;;-1:-1:-1;;;14037:18:15;;;;;4745:21487;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;4745:21487:15;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;:::o;4021:3692:12:-;;;;4745:21487:15;;:::i;:::-;;;;:::i;:::-;4393:23:12;4745:21487:15;4569:18:12;;;;4745:21487:15;4547:20:12;;;4745:21487:15;4569:18:12;:::i;:::-;4603:21;;;4745:21487:15;;4603:26:12;;;4697:18;;;;;4745:21487:15;4697:18:12;4817;4697;;;;4745:21487:15;4797:18:12;4697;4717;4697;;;;:::i;:::-;4717;;;;;;;:::i;:::-;;;;;:::i;:::-;4797;;:::i;:::-;4817;;;;;:::i;:::-;4745:21487:15;;;:::i;:::-;;;;;:::i;:::-;4779:16:12;4871:4;;4779:16;;;4745:21487:15;;6984:159:12;7017:126;4779:16;4599:2321;7072:21;;;;;;:::i;:::-;7017:126;:::i;:::-;4745:21487:15;;;;;;;;;;;;;;;;;6984:159:12;7157:20;;;:::i;:::-;4745:21487:15;;;:::i;:::-;7157:37:12;;7438:10;;-1:-1:-1;;;;;;7326:20:12;;;:::i;:::-;4745:21487:15;7326:34:12;:66;;-1:-1:-1;7326:66:12;;;;7438:10;:::i;7326:66::-;7372:20;;;;:::i;:::-;7326:66;7438:10;:::i;7153:554::-;7609:17;;;;;7672:10;7609:17;;;:::i;4599:2321::-;4910:44;:35;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;4910:44:12;4923:21;;;5810:20;;;:::i;:::-;5866:46;:35;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;5866:35:12;4745:21487:15;;;;;;;5866:46:12;5930:266;;;6249:35;;:50;:35;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;6249:35:12;4745:21487:15;;;;;6249:50:12;6349:44;:35;;4745:21487:15;;2575:12:19;4745:21487:15;;;;;;;6349:35:12;4745:21487:15;;;-1:-1:-1;;;;;;4745:21487:15;;;6349:44:12;4745:21487:15;;6326:92:12;4745:21487:15;6326:92:12;4745:21487:15;;6326:92:12;;;;;;;;;;;;;:::i;:::-;6249:187;;;;;;;:::i;:::-;6459:7;;6455:230;;6984:159;4745:21487:15;;;;;;;6751:55:12;4745:21487:15;6326:92:12;4745:21487:15;7017:126:12;4745:21487:15;;6751:55:12;;;;;;:::i;:::-;6703:103;;;;;;;;;;4599:2321;;6455:230;6576:91;;6326:92;6576:91;;;5930:266;;;;;;;4906:2004;4745:21487:15;;-1:-1:-1;;;6852:43:12;;;;;4745:21487:15;;;;;3328:27:7;4745:21487:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;162:6:4;4745:21487:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;9457:780:12:-;9686:17;4745:21487:15;;;;;9457:780:12;;;9678:26;;-1:-1:-1;;;;;4745:21487:15;;-1:-1:-1;;;;;4745:21487:15;;;9678:26:12;-1:-1:-1;;;;;4745:21487:15;;;;9674:557:12;;9457:780;;;;;;:::o;9674:557::-;9764:64;4745:21487:15;;;;;;;;;;;;;;;;;;;;;9764:64:12;;;;;;:::i;:::-;;;;;;;;;9674:557;4745:21487:15;;;9764:64:12;;;9674:557;9734:94;;;;4745:21487:15;9847:21:12;9843:378;4745:21487:15;;;-1:-1:-1;4745:21487:15;;-1:-1:-1;;9843:378:12;9674:557;;;;;;;9843:378;10006:44;10054:32;10006:44;;:::i;:::-;4745:21487:15;10062:24:12;4745:21487:15;10070:15:12;4745:21487:15;;;;;;;;10062:24:12;10054:32;;:::i;:::-;-1:-1:-1;10002:219:12;9843:378;10002:219;4745:21487:15;;-1:-1:-1;;;10185:21:12;;9764:64;;10185:21;9764:64;;;;;;;4745:21487:15;9764:64:12;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;10379:1032;;11376:28;10379:1032;;;;4745:21487:15;-1:-1:-1;4745:21487:15;10692:12:12;4745:21487:15;;162:6:4;4745:21487:15;;;;10684:46:12;4745:21487:15;;-1:-1:-1;4745:21487:15;;;;;10684:46:12;;:::i;:::-;4745:21487:15;;;;;;;;10774:18:12;;;10770:596;4745:21487:15;;;;;;;;11003:21:12;4745:21487:15;;;;;;11003:21:12;:::i;:::-;4745:21487:15;;-1:-1:-1;;;;;4745:21487:15;;;;;;10770:596:12;11318:37;11167:80;;;;;;4745:21487:15;8841:54:12;11167:80;-1:-1:-1;4745:21487:15;;;10692:12:12;4745:21487:15;;;;;;;8841:54:12;;:::i;:::-;4745:21487:15;;;;;;;;;;;10770:596:12;8939:56;8935:143;;10770:596;4745:21487:15;;11318:21:12;4745:21487:15;;;;;;;;;11318:21:12;;:::i;:::-;4745:21487:15;;11318:37:12;;:::i;8935:143::-;11318:21;4745:21487:15;;;;;;;;;8935:143:12;;;;;4745:21487:15;;;:::i;:::-;;;;;;:::i;:::-;;;11660:457:12;;11860:251;-1:-1:-1;11860:251:12;;-1:-1:-1;11860:251:12;;;11660:457::o;11860:251::-;;;;;;;1201:1977:13;;-1:-1:-1;1364:1808:13;;;;;;;;;;;;;;;1201:1977;;;:::o;1364:1808::-;-1:-1:-1;;1364:1808:13;;;;;;;;;;;;;;;;;;;;;16189:2230:15;;;;;16427:13;16405:18;;;:::i;:::-;4745:21487;;;:::i;:::-;16405:35;16401:91;;16519:15;;;;;:::i;:::-;16618:22;:43;:22;;4745:21487;;;;;;;;;;;;;;;;16618:22;16641:19;;;4745:21487;;;;;;;;;;16618:43;4745:21487;-1:-1:-1;;;;;4745:21487:15;;13979:18;4745:21487;;;;;;;;;;16427:13;16697:33;4745:21487;16734:20;;;4745:21487;16697:57;;;;:122;;;16189:2230;16697:215;;;;16189:2230;16676:306;;;17212:61;17262:10;17212:61;;;:::i;:::-;16641:19;;;;;;;;;;;;;;;4745:21487;17396:9;;;;;;:::i;:::-;17515:17;;;;;;:::i;:::-;17534:6;;;;;;:::i;:::-;17614:19;;;;;:::i;:::-;17647:23;;;;;;:::i;:::-;4745:21487;-1:-1:-1;;;;;17704:18:15;;;:::i;:::-;4745:21487;17704:32;:62;;17856:186;17704:62;17834:501;17704:62;18152:19;17704:62;17834:501;17704:62;17856:186;17704:62;17801:7;17704:62;;;;;17801:7;:::i;:::-;4745:21487;;:::i;:::-;;;;16641:19;;;4745:21487;16734:20;17856:186;;4745:21487;;;17856:186;;;4745:21487;;17856:186;18076:32;:18;;;:::i;:32::-;:62;;;;;;18185:17;17515;;;18185;:::i;:::-;17614:19;18216;17614;;;18216;:::i;:::-;4745:21487;;;18152:19;;;;4745:21487;17834:501;;;:::i;:::-;;;;4745:21487;;16189:2230;:::o;18076:62::-;18120:18;;;:::i;:::-;18076:62;;;17704;17748:18;;;:::i;:::-;17704:62;17801:7;:::i;16697:215::-;16840:34;;;;;;:71;;;;16697:215;;;;;;16840:71;16878:33;;;-1:-1:-1;16840:71:15;;;;16697:122;16774:23;;:45;;:23;;4745:21487;;;;;;;;14347:15;4745:21487;;;;;;;16774:23;16798:20;;;4745:21487;;;;;;;;;;16774:45;16697:122;;;18813:1635;;;;;19000:27;18996:1446;;18813:1635;;;;;:::o;18996:1446::-;20408:22;;-1:-1:-1;;;;;4745:21487:15;;;;;19043:1209;;18996:1446;-1:-1:-1;;20386:20:15;4745:21487;-1:-1:-1;;;;;4745:21487:15;;-1:-1:-1;20408:22:15;;:::i;:::-;18996:1446;;;;;;19043:1209;4745:21487;19260:24;4745:21487;;;;19256:982;19043:1209;19256:982;4745:21487;-1:-1:-1;4745:21487:15;19368:14;4745:21487;;19342:104;19343:50;4745:21487;-1:-1:-1;4745:21487:15;;19343:50;;:::i;:::-;162:6:4;4745:21487:15;;;;19342:104;19473:28;;19469:751;;19256:982;;19043:1209;;19469:751;19529:49;20135:62;19529:49;;;;;20135:62;19529:49;;;:::i;:::-;4745:21487;;;19947:20;19943:161;;19469:751;4745:21487;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;20135:62;;;;19469:751;;;;;;19943:161;20053:23;;;;;;:::i;:::-;19943:161;;20719:357;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;20945:20;4745:21487;20945:20;4745:21487;20920:4;;20945:20;:::i;20840:230::-;811:20:243;;:25;807:77;;4745:21487:15;;-1:-1:-1;;;943:55:243;;;;;;-1:-1:-1;;;;;4745:21487:15;;;943:55:243;;;4745:21487:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;943:55:243;4745:21487:15;;;;943:55:243;4745:21487:15;943:55:243;929:70;;;;;;:::i;:::-;1014:7;;1010:68;;4745:21487:15;;1092:15:243;1088:139;;20840:230:15;;20719:357::o;1088:139:243:-;1128:24;943:55;1128:24;;;1127:25;1128:24;;;;;;:::i;1127:25::-;1123:94;;20719:357:15:o;1123:94:243:-;4745:21487:15;;-1:-1:-1;;;1179:23:243;;943:55;;1179:23;807:77;4745:21487:15;;-1:-1:-1;;;859:14:243;;;;;21549:1029:15;;;;4745:21487;21549:1029;4745:21487;;22158:18;22154:121;;21549:1029;4745:21487;;;22449:21;;22445:127;;21549:1029;;;;:::o;22445:127::-;22544:16;4745:21487;;;;;;;;;;;22544:16;;:::i;22154:121::-;4745:21487;;22250:13;;4745:21487;-1:-1:-1;;;;;4745:21487:15;22250:13;;;:::i;:::-;22154:121;;;23819:278;;;;24024:65;;;;1028:33:14;24024:65:15;;4745:21487;;;;;;-1:-1:-1;4745:21487:15;;;;;-1:-1:-1;4745:21487:15;;-1:-1:-1;4745:21487:15;;;;-1:-1:-1;4745:21487:15;162:6:4;23819:278:15:o;24024:65::-;;;;4745:21487;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;:::o;25494:736::-;;;;;25722:16;;;;;;;;;;:::i;:::-;25760;;;;25756:404;;25494:736;26216:6;;;;;;;:::i;25756:404::-;384:2:4;25796:39:15;;25792:117;;25972:16;;;;;;:::i;:::-;384:2:4;;1465:27:76;;;1547:13;25775:1:15;1542:374:76;1562:10;;;;;;933:41;;;;;25923:156:15;;26216:6;26105:44;;;;:::i;:::-;25756:404;;;;;25923:156;4745:21487;;-1:-1:-1;;;26044:20:15;;;;;1547:13:76;1594:8;;;;;;;;;;;;:::i;:::-;:17;4745:21487:15;;;;:::i;:::-;;;;:::i;:::-;1594:61:76;;1705:8;;;;;:::i;:::-;4745:21487:15;25775:1;2093:119:76;;;4745:21487:15;2093:119:76;25775:1:15;2093:119:76;1590:257;;4745:21487:15;1547:13:76;;;;;;;;;1590:257;1817:8;;;;;:::i;:::-;4745:21487:15;2093:119:76;25775:1:15;2093:119:76;;;4745:21487:15;2093:119:76;25775:1:15;2093:119:76;1590:257;;;25792:117:15;4745:21487;;-1:-1:-1;;;25862:32:15;;;;;4745:21487;;;;;25862:32;24484:485;;24613:7;4745:21487;24624:13;24613:24;24609:354;24624:13;;;24870:14;4745:21487;24797:15;4745:21487;;;;24768:59;;;;4745:21487;;;;;;;;;;;;;;;24768:59;;4745:21487;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;24609:354;4745:21487;;;24758:70;;24870:14;:::i;4745:21487::-;;;:::i;:::-;;;24609:354;4745:21487;;-1:-1:-1;;;24936:16:15;;;;;4745:21487;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4745:21487:15;;;;;;-1:-1:-1;;;4745:21487:15;;;;;;;;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;;;-1:-1:-1;;4745:21487:15;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;1654:555:21:-;;;;;4745:21487:15;;;:::i;:::-;1891:39:21;;;-1:-1:-1;1946:15:21;-1:-1:-1;;;;;4745:21487:15;;1946:84:21;;;;;1909:21;4745:21487:15;1946:84:21;4745:21487:15;;;;;;;;;;;;;;1946:84:21;;;;;;:::i;:::-;;;;;;;;;1887:316;1946:84;;1887:316;1654:555::o;1946:84::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;1887:316;4745:21487:15;;2069:22:21;4745:21487:15;;:::i;:::-;2051:40:21;2047:156;;1887:316;;;;;1654:555::o;2047:156::-;2107:15;-1:-1:-1;;;;;4745:21487:15;;2107:85:21;;;;;1909:21;4745:21487:15;2107:85:21;4745:21487:15;;;;;;;;;;;;;;2107:85:21;;;;;;:::i;:::-;;;;;;;;;2047:156;2107:85;;2047:156;;;;;;;2107:85;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4745:21487:15;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;3365:618:78;;;;;;;;;;;;;;;;4745:21487:15;3365:618:78;4745:21487:15;;;;;:::i;:::-;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;;;;:::i;:::-;3365:618:78;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;;;3365:618:78;;;4745:21487:15;;3365:618:78;;4745:21487:15;3365:618:78:o;:::-;4745:21487:15;;;;;;3365:618:78;;;;;;;;;;;;;:::o;:::-;;;4745:21487:15;;;;;;;;;;3365:618:78;;;;;;4745:21487:15;;3365:618:78;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;4745:21487:15;;3365:618:78;;;;;;;;:::i;:::-;;;:::i;:::-;;4745:21487:15;;3365:618:78;;;;;;:::i;4220:1089::-;4416:872;3365:618;;4745:21487:15;;;;:::i;:::-;4568:17:78;;4884:386;4568:17;4450:412;4568:17;;;4745:21487:15;4611:17:78;;;4745:21487:15;4654:16:78;;;4745:21487:15;4696:16:78;;;4745:21487:15;4738:20:78;;;3365:618;4745:21487:15;;;;:::i;:::-;4784:16:78;;;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;4826:14:78;;;4745:21487:15;4826:14:78;;;-1:-1:-1;;;;;4745:21487:15;;4611:17:78;4745:21487:15;4450:412:78;;;;;;:::i;:::-;;;4745:21487:15;;4450:412:78;;;;;;;;:::i;:::-;4920:12;;;4745:21487:15;4920:12:78;;4884:386;;-1:-1:-1;;;;;4745:21487:15;4958:15:78;;;;4745:21487:15;4999:13:78;;;;4745:21487:15;5038:11:78;;;4745:21487:15;5102:13:78;;;;4611:17;4745:21487:15;5085:31:78;;3365:618;5085:31;;;3365:618;;;:::i;:::-;5085:31;;;;;;;;:::i;:::-;4745:21487:15;5075:42:78;;5170:13;5221:26;5170:13;;;;4611:17;4745:21487:15;5153:31:78;;3365:618;5153:31;;;3365:618;;;:::i;:::-;5153:31;;;;;;;;:::i;:::-;4745:21487:15;5143:42:78;;5221:26;;;4745:21487:15;;;;;5211:37:78;4611:17;4745:21487:15;;-1:-1:-1;;;;;4745:21487:15;;;4884:386:78;;;4745:21487:15;;;3365:618:78;;;4745:21487:15;;;;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;3365:618:78;;;4745:21487:15;;3365:618:78;;4745:21487:15;3365:618:78;;;4745:21487:15;;;3365:618:78;;;;4884:386;;;;;;;;;:::i;:::-;4416:872;:::i;:::-;4745:21487:15;;;;4389:913:78;;4220:1089::o;3872:94:224:-;3935:5;4745:21487:15;-1:-1:-1;;;;;4745:21487:15;3921:10:224;:19;3917:42;;3872:94::o;3917:42::-;4745:21487:15;;-1:-1:-1;;;3949:10:224;;;;;4745:21487:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1078:416:226:-;;;;1178:18;;;;1221:34;;;;:::i;:::-;-1:-1:-1;;;;;4745:21487:15;;;;;1221:44:226;1217:57;;4745:21487:15;;-1:-1:-1;;;1294:21:226;;;;;1174:314;4745:21487:15;1350:50:226;4745:21487:15;1350:50:226;4745:21487:15;;;;;;;;;;;;1350:50:226;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4745:21487:15;1350:50:226;;;;;;;1174:314;1200:1;1350:50;;;1174:314;-1:-1:-1;;;;;;;4745:21487:15;1350:73:226;1346:86;;4745:21487:15;;-1:-1:-1;;;1452:25:226;;1350:50;;1452:25;1350:50;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;3167:398;;;1977:2;1967:12;;1977:2;;-1:-1:-1;1995:211:226;;;;-1:-1:-1;1995:211:226;;;;;;;;1963:653;2643:66;2630:79;;2626:145;;4745:21487:15;;;2790:2:226;2785:7;;;:18;;;;1963:653;2781:85;;;4745:21487:15;;;;;;;;;;;3447:24:226;4745:21487:15;;;;;;;;;;;;;;;-1:-1:-1;3447:24:226;;;-1:-1:-1;4745:21487:15;;3447:24:226;;;;;;1963:653;-1:-1:-1;3447:24:226;;-1:-1:-1;;;;;4745:21487:15;;3486:20:226;3482:77;;3167:398::o;3482:77::-;4745:21487:15;;-1:-1:-1;;;3529:19:226;;;;;3447:24;;;:::i;:::-;;;2781:85;4745:21487:15;;-1:-1:-1;;;2826:29:226;;4745:21487:15;;;2826:29:226;;;4745:21487:15;;;3328:27:7;2785:18:226;2801:2;2796:7;;;;2785:18;;;2626:145;4745:21487:15;;-1:-1:-1;;;2732:28:226;;;;;1963:653;2236:2;2226:12;;2236:2;;-1:-1:-1;2254:284:226;;;;;;;;;;;-1:-1:-1;;;;;2254:284:226;;;;;1963:653;;2222:394;2236:2;4745:21487:15;-1:-1:-1;;;2575:30:226;;;;;4745:21487:15;;;;;;3328:27:7;687:465:245;747:399;;;;;;687:465;:::o;747:399::-;;4745:21487:15;;;;;;747:399:245;;;;;;;687:465::o;747:399::-;;;;;;;808:415:246;1096:7;808:415;;;-1:-1:-1;998:84:246;;;;;;;;1096:7;;4745:21487:15;1096:7:246;1092:125;;808:415;;;;:::o;1092:125::-;-1:-1:-1;;;;;4745:21487:15;;1119:38:246;;;;;4745:21487:15;1171:35:246;4745:21487:15;;1171:35:246;4745:21487:15;;;;;;1119:38:246;;;;;;;;;;;;;;1092:125;1119:38;;1092:125;-1:-1:-1;4745:21487:15;;-1:-1:-1;;;1171:35:246;;-1:-1:-1;;;;;4745:21487:15;;;1119:38:246;1171:35;;4745:21487:15;162:6:4;;;4745:21487:15;;;;;;;;;;;162:6:4;;;;;1171:35:246;;;;;;;;;1092:125;1171:35;;1092:125;;;;;;1171:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1119:38;;;;;;:::i;:::-;;;;;;;:::i;:::-;;",
    "linkReferences": {},
    "immutableReferences": {
      "3340": [
        {
          "start": 5056,
          "length": 32
        },
        {
          "start": 13409,
          "length": 32
        }
      ],
      "6012": [
        {
          "start": 2316,
          "length": 32
        },
        {
          "start": 14629,
          "length": 32
        },
        {
          "start": 14790,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": "463357ec",
    "WETH()": "ad5c4648",
    "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": "91be1360",
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOrderNonces(uint256[])": "79ed31d4",
    "cancelOwnershipTransfer()": "23452b9c",
    "cancelSubsetNonces(uint256[])": "134849a6",
    "chainId()": "9a8a0592",
    "confirmOwnershipRenouncement()": "3e567539",
    "confirmOwnershipTransfer()": "7200b829",
    "creatorFeeManager()": "838b8f5c",
    "domainSeparator()": "f698da25",
    "executeMultipleTakerBids((address,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": "f4288a21",
    "executeTakerAsk((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "e72853e1",
    "executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "8585ae03",
    "hashBatchOrder(bytes32,uint256)": "86c07642",
    "incrementBidAskNonces(bool,bool)": "d5b010f5",
    "initiateOwnershipRenouncement()": "5b6ac011",
    "initiateOwnershipTransfer(address)": "c0b6f561",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "maxCreatorFeeBp()": "6e90c014",
    "owner()": "8da5cb5b",
    "ownershipStatus()": "2bb5a9e6",
    "potentialOwner()": "7762df25",
    "protocolFeeRecipient()": "64df049e",
    "restrictedExecuteTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),address,bytes32)": "d5b7f065",
    "strategyInfo(uint256)": "bb91c339",
    "transferManager()": "46ea2552",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCreatorFeeManager(address)": "b647a404",
    "updateCurrencyStatus(address,bool)": "1d3c4268",
    "updateDomainSeparator()": "89ccfe89",
    "updateETHGasLimitForTransfer(uint256)": "974e7c9f",
    "updateMaxCreatorFeeBp(uint16)": "46b625bc",
    "updateProtocolFeeRecipient(address)": "1df47f80",
    "updateStrategy(uint256,bool,uint16,uint16)": "d5a06adf",
    "userBidAskNonces(address)": "a39bf29f",
    "userOrderNonce(address,uint256)": "20cd05c7",
    "userSubsetNonce(address,uint256)": "ea179b76"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChainIdInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatorFeeBpTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20TransferFromFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthsInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"MerkleProofTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewGasLimitETHTransferTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewProtocolFeeRecipientCannotBeNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingTransferInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorForStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoncesInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotV2Strategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullSignerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutsideOfTimeRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteTypeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncementNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameDomainSeparator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureEOAInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureERC1271Invalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SignatureLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureParameterSInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"SignatureParameterVInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasNoSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"StrategyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPotentialOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"affiliateFee\",\"type\":\"uint256\"}],\"name\":\"AffiliatePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"InitiateOwnershipRenouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"InitiateOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"name\":\"NewBidAskNonces\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creatorFeeManager\",\"type\":\"address\"}],\"name\":\"NewCreatorFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewDomainSeparator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"NewGasLimitETHTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCreatorFeeBp\",\"type\":\"uint256\"}],\"name\":\"NewMaxCreatorFeeBp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"OrderNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"SubsetNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"askUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAGIC_VALUE_ORDER_NONCE_EXECUTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelOrderNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelSubsetNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFeeManager\",\"outputs\":[{\"internalType\":\"contract ICreatorFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker[]\",\"name\":\"takerBids\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker[]\",\"name\":\"makerAsks\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"makerSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree[]\",\"name\":\"merkleTrees\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAtomic\",\"type\":\"bool\"}],\"name\":\"executeMultipleTakerBids\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proofLength\",\"type\":\"uint256\"}],\"name\":\"hashBatchOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchOrderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"bid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ask\",\"type\":\"bool\"}],\"name\":\"incrementBidAskNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCreatorFeeBp\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipStatus\",\"outputs\":[{\"internalType\":\"enum IOwnableTwoSteps.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"restrictedExecuteTakerBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferManager\",\"outputs\":[{\"internalType\":\"contract TransferManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCreatorFeeManager\",\"type\":\"address\"}],\"name\":\"updateCreatorFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"updateETHGasLimitForTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxCreatorFeeBp\",\"type\":\"uint16\"}],\"name\":\"updateMaxCreatorFeeBp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"newStandardProtocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMinTotalFee\",\"type\":\"uint16\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBidAskNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSubsetNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"errors\":{\"MerkleProofTooLarge(uint256)\":[{\"params\":{\"length\":\"Proof length\"}}],\"NotV2Strategy()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyHasNoSelector()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyNotAvailable(uint256)\":[{\"details\":\"It is returned if there is no implementation address and the strategyId is strictly greater than 0.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"details\":\"It can only be returned for owner operations.\"}]},\"kind\":\"dev\",\"methods\":{\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"details\":\"Strategies have an id that is incremental.      Only callable by owner.\",\"params\":{\"implementation\":\"Implementation address\",\"isMakerBid\":\"Whether the function selector is for maker bid\",\"maxProtocolFeeBp\":\"Maximum protocol fee (in basis point)\",\"minTotalFeeBp\":\"Minimum total fee (in basis point)\",\"selector\":\"Function selector for the strategy\",\"standardProtocolFeeBp\":\"Standard protocol fee (in basis point)\"}},\"cancelOrderNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.\",\"params\":{\"orderNonces\":\"Array of order nonces\"}},\"cancelOwnershipTransfer()\":{\"details\":\"This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership.\"},\"cancelSubsetNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas.\",\"params\":{\"subsetNonces\":\"Array of subset nonces\"}},\"confirmOwnershipTransfer()\":{\"details\":\"This function can only be called by the current potential owner.\"},\"constructor\":{\"params\":{\"_owner\":\"Owner address\",\"_protocolFeeRecipient\":\"Protocol fee recipient address\",\"_transferManager\":\"Transfer manager address\",\"_weth\":\"Wrapped ETH address\"}},\"executeMultipleTakerBids((address,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"isAtomic\":\"Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail\",\"makerAsks\":\"Array of maker ask structs\",\"makerSignatures\":\"Array of maker signatures\",\"merkleTrees\":\"Array of merkle tree structs if the signature contains multiple maker orders\",\"takerBids\":\"Array of taker bid structs\"}},\"executeTakerAsk((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerBid\":\"Maker bid struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerAsk\":\"Taker ask struct\"}},\"executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerAsk\":\"Maker ask struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerBid\":\"Taker bid struct\"}},\"hashBatchOrder(bytes32,uint256)\":{\"params\":{\"proofLength\":\"Merkle proof length\",\"root\":\"Merkle root\"},\"returns\":{\"batchOrderHash\":\"The batch order hash\"}},\"incrementBidAskNonces(bool,bool)\":{\"details\":\"The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.\",\"params\":{\"ask\":\"Whether to increment the user ask nonce\",\"bid\":\"Whether to increment the user bid nonce\"}},\"initiateOwnershipTransfer(address)\":{\"params\":{\"newPotentialOwner\":\"New potential owner address\"}},\"restrictedExecuteTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),address,bytes32)\":{\"details\":\"This function is only callable by this contract. It is used for non-atomic batch order matching.\",\"params\":{\"makerAsk\":\"Maker ask struct\",\"orderHash\":\"Hash of the maker ask order\",\"sender\":\"Sender address (i.e. the initial msg sender)\",\"takerBid\":\"Taker bid struct\"},\"returns\":{\"protocolFeeAmount\":\"Protocol fee amount\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCreatorFeeManager(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newCreatorFeeManager\":\"Address of the creator fee manager\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}},\"updateDomainSeparator()\":{\"details\":\"Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id.\"},\"updateETHGasLimitForTransfer(uint256)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newGasLimitETHTransfer\":\"New gas limit for ETH transfer\"}},\"updateMaxCreatorFeeBp(uint16)\":{\"details\":\"The maximum value that can be set is 25%.      Only callable by owner.\",\"params\":{\"newMaxCreatorFeeBp\":\"New maximum creator fee (in basis point)\"}},\"updateProtocolFeeRecipient(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newProtocolFeeRecipient\":\"New protocol fee recipient address\"}},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the strategy must be active\",\"newMinTotalFee\":\"New minimum total fee (in basis point)\",\"newStandardProtocolFee\":\"New standard protocol fee (in basis point)\",\"strategyId\":\"Strategy id\"}}},\"title\":\"LooksRareProtocol\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerInvalid()\":[{\"notice\":\"It is returned if the function cannot be called by the sender.\"}],\"ChainIdInvalid()\":[{\"notice\":\"It is returned if the domain separator should change.\"}],\"CreatorFeeBpTooHigh()\":[{\"notice\":\"It is returned if the creator fee (in basis point) is too high.\"}],\"CurrencyInvalid()\":[{\"notice\":\"It is returned if the currency is invalid.\"}],\"ERC20TransferFromFail()\":[{\"notice\":\"It is emitted if the ERC20 transferFrom fails.\"}],\"LengthsInvalid()\":[{\"notice\":\"It is returned if there is either a mismatch or an error in the length of the array(s).\"}],\"MerkleProofInvalid()\":[{\"notice\":\"It is returned if the merkle proof provided is invalid.\"}],\"MerkleProofTooLarge(uint256)\":[{\"notice\":\"It is returned if the length of the merkle proof provided is greater than tolerated.\"}],\"NewGasLimitETHTransferTooLow()\":[{\"notice\":\"It is returned if the gas limit for a standard ETH transfer is too low.\"}],\"NewProtocolFeeRecipientCannotBeNullAddress()\":[{\"notice\":\"It is returned if the new protocol fee recipient is set to address(0).\"}],\"NoOngoingTransferInProgress()\":[{\"notice\":\"This is returned when there is no transfer of ownership in progress.\"}],\"NoSelectorForStrategy()\":[{\"notice\":\"It is returned if there is no selector for maker ask/bid for a given strategyId,         depending on the quote type.\"}],\"NoncesInvalid()\":[{\"notice\":\"It is returned if the nonces are invalid.\"}],\"NotAContract()\":[{\"notice\":\"It is emitted if the call recipient is not a contract.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotOwner()\":[{\"notice\":\"This is returned when the caller is not the owner.\"}],\"NotV2Strategy()\":[{\"notice\":\"If the strategy has not set properly its implementation contract.\"}],\"NullSignerAddress()\":[{\"notice\":\"It is emitted if the signer is null.\"}],\"OutsideOfTimeRange()\":[{\"notice\":\"It is returned if the current block timestamp is not between start and end times in the maker order.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"QuoteTypeInvalid()\":[{\"notice\":\"It is returned if the maker quote type is invalid.\"}],\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}],\"RenouncementNotInProgress()\":[{\"notice\":\"This is returned when there is no renouncement in progress but         the owner tries to validate the ownership renouncement.\"}],\"SameDomainSeparator()\":[{\"notice\":\"It is returned if the domain separator cannot be updated (i.e. the chainId is the same).\"}],\"SignatureEOAInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid for an EOA (the address recovered is not the expected one).\"}],\"SignatureERC1271Invalid()\":[{\"notice\":\"It is emitted if the signature is invalid for a ERC1271 contract signer.\"}],\"SignatureLengthInvalid(uint256)\":[{\"notice\":\"It is emitted if the signature's length is neither 64 nor 65 bytes.\"}],\"SignatureParameterSInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid due to S parameter.\"}],\"SignatureParameterVInvalid(uint8)\":[{\"notice\":\"It is emitted if the signature is invalid due to V parameter.\"}],\"StrategyHasNoSelector()\":[{\"notice\":\"It is returned if the strategy has no selector.\"}],\"StrategyNotAvailable(uint256)\":[{\"notice\":\"It is returned if the strategy id has no implementation.\"}],\"StrategyNotUsed()\":[{\"notice\":\"It is returned if the strategyId is invalid.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"notice\":\"It is returned if the strategy's protocol fee is too high.\"}],\"TransferAlreadyInProgress()\":[{\"notice\":\"This is returned when the transfer is already in progress but the owner tries         initiate a new ownership transfer.\"}],\"TransferNotInProgress()\":[{\"notice\":\"This is returned when there is no ownership transfer in progress but the         ownership change tries to be approved.\"}],\"WrongPotentialOwner()\":[{\"notice\":\"This is returned when the ownership transfer is attempted to be validated by the         a caller that is not the potential owner.\"}]},\"events\":{\"AffiliatePayment(address,address,uint256)\":{\"notice\":\"It is emitted when there is an affiliate fee paid.\"},\"CancelOwnershipTransfer()\":{\"notice\":\"This is emitted if the ownership transfer is cancelled.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"InitiateOwnershipRenouncement()\":{\"notice\":\"This is emitted if the ownership renouncement is initiated.\"},\"InitiateOwnershipTransfer(address,address)\":{\"notice\":\"This is emitted if the ownership transfer is initiated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewBidAskNonces(address,uint256,uint256)\":{\"notice\":\"It is emitted when there is an update of the global bid/ask nonces for a user.\"},\"NewCreatorFeeManager(address)\":{\"notice\":\"It is issued when there is a new creator fee manager.\"},\"NewDomainSeparator()\":{\"notice\":\"It is emitted if there is a change in the domain separator.\"},\"NewGasLimitETHTransfer(uint256)\":{\"notice\":\"It is emitted when there is a new gas limit for a ETH transfer (before it is wrapped to WETH).\"},\"NewMaxCreatorFeeBp(uint256)\":{\"notice\":\"It is issued when there is a new maximum creator fee (in basis point).\"},\"NewOwner(address)\":{\"notice\":\"This is emitted when there is a new owner.\"},\"NewProtocolFeeRecipient(address)\":{\"notice\":\"It is issued when there is a new protocol fee recipient address.\"},\"NewStrategy(uint256,uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"It is emitted when a new strategy is added.\"},\"OrderNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when order nonces are cancelled for a user.\"},\"StrategyUpdated(uint256,bool,uint16,uint16)\":{\"notice\":\"It is emitted when an existing strategy is updated.\"},\"SubsetNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when subset nonces are cancelled for a user.\"},\"TakerAsk((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker ask transaction is completed.\"},\"TakerBid((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker bid transaction is completed.\"}},\"kind\":\"user\",\"methods\":{\"MAGIC_VALUE_ORDER_NONCE_EXECUTED()\":{\"notice\":\"Magic value nonce returned if executed (or cancelled).\"},\"WETH()\":{\"notice\":\"Wrapped ETH.\"},\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"This function allows the owner to add a new execution strategy to the protocol.\"},\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOrderNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of order nonces.\"},\"cancelOwnershipTransfer()\":{\"notice\":\"This function is used to cancel the ownership transfer.\"},\"cancelSubsetNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of subset nonces.\"},\"chainId()\":{\"notice\":\"Current chainId.\"},\"confirmOwnershipRenouncement()\":{\"notice\":\"This function is used to confirm the ownership renouncement.\"},\"confirmOwnershipTransfer()\":{\"notice\":\"This function is used to confirm the ownership transfer.\"},\"constructor\":{\"notice\":\"Constructor\"},\"creatorFeeManager()\":{\"notice\":\"Creator fee manager.\"},\"domainSeparator()\":{\"notice\":\"Current domain separator.\"},\"executeMultipleTakerBids((address,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"notice\":\"This function allows a user to batch buy with an array of taker bids (against an array of maker asks).\"},\"executeTakerAsk((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker ask (against a maker bid).\"},\"executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker bid (against a maker ask).\"},\"hashBatchOrder(bytes32,uint256)\":{\"notice\":\"This function returns the hash of the concatenation of batch order type hash and merkle root.\"},\"incrementBidAskNonces(bool,bool)\":{\"notice\":\"This function increments a user's bid/ask nonces.\"},\"initiateOwnershipRenouncement()\":{\"notice\":\"This function is used to initiate the ownership renouncement.\"},\"initiateOwnershipTransfer(address)\":{\"notice\":\"This function is used to initiate the transfer of ownership to a new owner.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"maxCreatorFeeBp()\":{\"notice\":\"Maximum creator fee (in basis point).\"},\"owner()\":{\"notice\":\"Address of the current owner.\"},\"ownershipStatus()\":{\"notice\":\"Ownership status.\"},\"potentialOwner()\":{\"notice\":\"Address of the potential owner.\"},\"protocolFeeRecipient()\":{\"notice\":\"Protocol fee recipient.\"},\"restrictedExecuteTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),address,bytes32)\":{\"notice\":\"This function is used to do a non-atomic matching in the context of a batch taker bid.\"},\"strategyInfo(uint256)\":{\"notice\":\"This returns the strategy information for a strategy id.\"},\"transferManager()\":{\"notice\":\"Transfer manager for ERC721 and ERC1155.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCreatorFeeManager(address)\":{\"notice\":\"This function allows the owner to update the creator fee manager address.\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"},\"updateDomainSeparator()\":{\"notice\":\"This function allows the owner to update the domain separator (if possible).\"},\"updateETHGasLimitForTransfer(uint256)\":{\"notice\":\"This function allows the owner to update the maximum ETH gas limit for a standard transfer.\"},\"updateMaxCreatorFeeBp(uint16)\":{\"notice\":\"This function allows the owner to update the maximum creator fee (in basis point).\"},\"updateProtocolFeeRecipient(address)\":{\"notice\":\"This function allows the owner to update the protocol fee recipient.\"},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"notice\":\"This function allows the owner to update parameters for an existing execution strategy.\"},\"userBidAskNonces(address)\":{\"notice\":\"This tracks the bid and ask nonces for a user address.\"},\"userOrderNonce(address,uint256)\":{\"notice\":\"This checks whether the order nonce for a user was executed or cancelled.\"},\"userSubsetNonce(address,uint256)\":{\"notice\":\"This checks whether the subset nonce for a user was cancelled.\"}},\"notice\":\"This contract is the core smart contract of the LooksRare protocol (\\\"v2\\\").         It is the main entry point for users to initiate transactions with taker orders         and manage the cancellation of maker orders, which exist off-chain. LOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRAR'''''''''''''''''''''''''''''''''''OOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKS:.                                        .;OOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOO,.                                            .,KSRARELOOKSRARELOOKSR LOOKSRARELOOKSRAREL'                ..',;:LOOKS::;,'..                'RARELOOKSRARELOOKSR LOOKSRARELOOKSRAR.              .,:LOOKSRARELOOKSRARELO:,.              .RELOOKSRARELOOKSR LOOKSRARELOOKS:.             .;RARELOOKSRARELOOKSRARELOOKSl;.             .:OOKSRARELOOKSR LOOKSRARELOO;.            .'OKSRARELOOKSRARELOOKSRARELOOKSRARE'.            .;KSRARELOOKSR LOOKSRAREL,.            .,LOOKSRARELOOK:;;:\\\"\\\"\\\"\\\":;;;lELOOKSRARELO,.            .,RARELOOKSR LOOKSRAR.             .;okLOOKSRAREx:.              .;OOKSRARELOOK;.             .RELOOKSR LOOKS:.             .:dOOOLOOKSRARE'      .''''..     .OKSRARELOOKSR:.             .LOOKSR LOx;.             .cKSRARELOOKSRAR'     'LOOKSRAR'     .KSRARELOOKSRARc..            .OKSR L;.             .cxOKSRARELOOKSRAR.    .LOOKS.RARE'     ;kRARELOOKSRARExc.             .;R LO'             .;oOKSRARELOOKSRAl.    .LOOKS.RARE.     :kRARELOOKSRAREo;.             'SR LOOK;.            .,KSRARELOOKSRAx,     .;LOOKSR;.     .oSRARELOOKSRAo,.            .;OKSR LOOKSk:.            .'RARELOOKSRARd;.      ....       'oOOOOOOOOOOxc'.            .:LOOKSR LOOKSRARc.             .:dLOOKSRAREko;.            .,lxOOOOOOOOOd:.             .ARELOOKSR LOOKSRARELo'             .;oOKSRARELOOxoc;,....,;:ldkOOOOOOOOkd;.             'SRARELOOKSR LOOKSRARELOOd,.            .,lSRARELOOKSRARELOOKSRARELOOKSRkl,.            .,OKSRARELOOKSR LOOKSRARELOOKSx;.            ..;oxELOOKSRARELOOKSRARELOkxl:..            .:LOOKSRARELOOKSR LOOKSRARELOOKSRARc.              .':cOKSRARELOOKSRALOc;'.              .ARELOOKSRARELOOKSR LOOKSRARELOOKSRARELl'                 ...'',,,,''...                 'SRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOo,.                                          .,OKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSx;.                                      .;xOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLO:.                                  .:SRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKl.                              .lOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRo'.                        .'oWENV2?LOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARd;.                    .;xRELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARELO:.                .:kRARELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKl.            .cOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRo'        'oLOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARE,.  .,dRELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR LOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/OmniXExchange.sol\":\"OmniXExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5\",\"dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke\"]},\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808\",\"dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L\"]},\"contracts/core/BatchOrderTypehashRegistry.sol\":{\"keccak256\":\"0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2\",\"dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5\",\"dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y\"]},\"contracts/core/ExecutionManager.sol\":{\"keccak256\":\"0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7\",\"dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn\"]},\"contracts/core/InheritedStrategy.sol\":{\"keccak256\":\"0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860\",\"dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375\",\"dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa\"]},\"contracts/core/OmniXExchange.sol\":{\"keccak256\":\"0xabe8aa2dff49c4147ba0e44891a7bfadb8d6981be36c42325c2b4b1cd22e6b59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e479d17b99d812cee83af92c889d71074cf5aba3070f0222c065f951dd6f980\",\"dweb:/ipfs/QmPkfRVTTYoLVXdSUGdSFPFdrsJfGSfCh3CgtDzagZLjP6\"]},\"contracts/core/StrategyManager.sol\":{\"keccak256\":\"0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8\",\"dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV\"]},\"contracts/core/TransferManager.sol\":{\"keccak256\":\"0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f\",\"dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r\"]},\"contracts/core/TransferSelectorNFT.sol\":{\"keccak256\":\"0xea2cdc3be40de8ed5f5f683c99da1c45ad405716212f1dcc10baa9eb74d4b536\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ccdf519cded46a4d94df55918fd94218b2acb7a00dd19974b1cb1e3f4cce94f\",\"dweb:/ipfs/QmTqaWCYznqoHCThcc3XKfjPeH7MnmmyyFBQsRaRajaiMk\"]},\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/errors/SharedErrors.sol\":{\"keccak256\":\"0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9\",\"dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICreatorFeeManager.sol\":{\"keccak256\":\"0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e\",\"dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"contracts/interfaces/IExecutionManager.sol\":{\"keccak256\":\"0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab\",\"dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443\",\"dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS\"]},\"contracts/interfaces/IOmniXExchange.sol\":{\"keccak256\":\"0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb\",\"dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3\"]},\"contracts/interfaces/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c\",\"dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db\",\"dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD\"]},\"contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817\",\"dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw\"]},\"contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a\",\"dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E\"]},\"contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol\":{\"keccak256\":\"0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc\",\"dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5\",\"dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":{\"keccak256\":\"0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda\",\"dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd\"]},\"node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol\":{\"keccak256\":\"0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd\",\"dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6\",\"dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol\":{\"keccak256\":\"0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e\",\"dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol\":{\"keccak256\":\"0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e\",\"dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol\":{\"keccak256\":\"0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc\",\"dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol\":{\"keccak256\":\"0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84\",\"dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol\":{\"keccak256\":\"0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04\",\"dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol\":{\"keccak256\":\"0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00\",\"dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol\":{\"keccak256\":\"0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d\",\"dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol\":{\"keccak256\":\"0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26\",\"dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":{\"keccak256\":\"0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1\",\"dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol\":{\"keccak256\":\"0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc\",\"dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol\":{\"keccak256\":\"0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027\",\"dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol\":{\"keccak256\":\"0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114\",\"dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol\":{\"keccak256\":\"0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4\",\"dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":{\"keccak256\":\"0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6\",\"dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_transferManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChainIdInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreatorFeeBpTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20TransferFromFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LengthsInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MerkleProofTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewGasLimitETHTransferTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewProtocolFeeRecipientCannotBeNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOngoingTransferInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorForStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoncesInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotV2Strategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullSignerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutsideOfTimeRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QuoteTypeInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncementNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameDomainSeparator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureEOAInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureERC1271Invalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SignatureLengthInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureParameterSInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "SignatureParameterVInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyHasNoSelector"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrategyNotAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyProtocolFeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferAlreadyInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongPotentialOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "affiliateFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AffiliatePayment",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CancelOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "InitiateOwnershipRenouncement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "potentialOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitiateOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBidAskNonces",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creatorFeeManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewCreatorFeeManager",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewDomainSeparator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasLimitETHTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewGasLimitETHTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxCreatorFeeBp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewMaxCreatorFeeBp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFeeRecipient",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubsetNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "askUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerAsk",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerBid",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrderNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSubsetNonces"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipRenouncement"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creatorFeeManager",
          "outputs": [
            {
              "internalType": "contract ICreatorFeeManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker[]",
              "name": "takerBids",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker[]",
              "name": "makerAsks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "makerSignatures",
              "type": "bytes[]"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree[]",
              "name": "merkleTrees",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAtomic",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeMultipleTakerBids"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeTakerAsk"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeTakerBid"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "proofLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashBatchOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "batchOrderHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "bid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ask",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementBidAskNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipRenouncement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPotentialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCreatorFeeBp",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipStatus",
          "outputs": [
            {
              "internalType": "enum IOwnableTwoSteps.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "potentialOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restrictedExecuteTakerBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "protocolFeeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyInfo",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferManager",
          "outputs": [
            {
              "internalType": "contract TransferManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCreatorFeeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCreatorFeeManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDomainSeparator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newGasLimitETHTransfer",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateETHGasLimitForTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newMaxCreatorFeeBp",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxCreatorFeeBp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newProtocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProtocolFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "newStandardProtocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "newMinTotalFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBidAskNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userOrderNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userSubsetNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "details": "Strategies have an id that is incremental.      Only callable by owner.",
            "params": {
              "implementation": "Implementation address",
              "isMakerBid": "Whether the function selector is for maker bid",
              "maxProtocolFeeBp": "Maximum protocol fee (in basis point)",
              "minTotalFeeBp": "Minimum total fee (in basis point)",
              "selector": "Function selector for the strategy",
              "standardProtocolFeeBp": "Standard protocol fee (in basis point)"
            }
          },
          "cancelOrderNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.",
            "params": {
              "orderNonces": "Array of order nonces"
            }
          },
          "cancelOwnershipTransfer()": {
            "details": "This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership."
          },
          "cancelSubsetNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas.",
            "params": {
              "subsetNonces": "Array of subset nonces"
            }
          },
          "confirmOwnershipTransfer()": {
            "details": "This function can only be called by the current potential owner."
          },
          "constructor": {
            "params": {
              "_owner": "Owner address",
              "_protocolFeeRecipient": "Protocol fee recipient address",
              "_transferManager": "Transfer manager address",
              "_weth": "Wrapped ETH address"
            }
          },
          "executeMultipleTakerBids((address,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "params": {
              "affiliate": "Affiliate address",
              "isAtomic": "Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail",
              "makerAsks": "Array of maker ask structs",
              "makerSignatures": "Array of maker signatures",
              "merkleTrees": "Array of merkle tree structs if the signature contains multiple maker orders",
              "takerBids": "Array of taker bid structs"
            }
          },
          "executeTakerAsk((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerBid": "Maker bid struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerAsk": "Taker ask struct"
            }
          },
          "executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerAsk": "Maker ask struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerBid": "Taker bid struct"
            }
          },
          "hashBatchOrder(bytes32,uint256)": {
            "params": {
              "proofLength": "Merkle proof length",
              "root": "Merkle root"
            },
            "returns": {
              "batchOrderHash": "The batch order hash"
            }
          },
          "incrementBidAskNonces(bool,bool)": {
            "details": "The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.",
            "params": {
              "ask": "Whether to increment the user ask nonce",
              "bid": "Whether to increment the user bid nonce"
            }
          },
          "initiateOwnershipTransfer(address)": {
            "params": {
              "newPotentialOwner": "New potential owner address"
            }
          },
          "restrictedExecuteTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),address,bytes32)": {
            "details": "This function is only callable by this contract. It is used for non-atomic batch order matching.",
            "params": {
              "makerAsk": "Maker ask struct",
              "orderHash": "Hash of the maker ask order",
              "sender": "Sender address (i.e. the initial msg sender)",
              "takerBid": "Taker bid struct"
            },
            "returns": {
              "protocolFeeAmount": "Protocol fee amount"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCreatorFeeManager(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newCreatorFeeManager": "Address of the creator fee manager"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          },
          "updateDomainSeparator()": {
            "details": "Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "details": "Only callable by owner.",
            "params": {
              "newGasLimitETHTransfer": "New gas limit for ETH transfer"
            }
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "details": "The maximum value that can be set is 25%.      Only callable by owner.",
            "params": {
              "newMaxCreatorFeeBp": "New maximum creator fee (in basis point)"
            }
          },
          "updateProtocolFeeRecipient(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newProtocolFeeRecipient": "New protocol fee recipient address"
            }
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the strategy must be active",
              "newMinTotalFee": "New minimum total fee (in basis point)",
              "newStandardProtocolFee": "New standard protocol fee (in basis point)",
              "strategyId": "Strategy id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": {
            "notice": "Magic value nonce returned if executed (or cancelled)."
          },
          "WETH()": {
            "notice": "Wrapped ETH."
          },
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "notice": "This function allows the owner to add a new execution strategy to the protocol."
          },
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOrderNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of order nonces."
          },
          "cancelOwnershipTransfer()": {
            "notice": "This function is used to cancel the ownership transfer."
          },
          "cancelSubsetNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of subset nonces."
          },
          "chainId()": {
            "notice": "Current chainId."
          },
          "confirmOwnershipRenouncement()": {
            "notice": "This function is used to confirm the ownership renouncement."
          },
          "confirmOwnershipTransfer()": {
            "notice": "This function is used to confirm the ownership transfer."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "creatorFeeManager()": {
            "notice": "Creator fee manager."
          },
          "domainSeparator()": {
            "notice": "Current domain separator."
          },
          "executeMultipleTakerBids((address,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "notice": "This function allows a user to batch buy with an array of taker bids (against an array of maker asks)."
          },
          "executeTakerAsk((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker ask (against a maker bid)."
          },
          "executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker bid (against a maker ask)."
          },
          "hashBatchOrder(bytes32,uint256)": {
            "notice": "This function returns the hash of the concatenation of batch order type hash and merkle root."
          },
          "incrementBidAskNonces(bool,bool)": {
            "notice": "This function increments a user's bid/ask nonces."
          },
          "initiateOwnershipRenouncement()": {
            "notice": "This function is used to initiate the ownership renouncement."
          },
          "initiateOwnershipTransfer(address)": {
            "notice": "This function is used to initiate the transfer of ownership to a new owner."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "maxCreatorFeeBp()": {
            "notice": "Maximum creator fee (in basis point)."
          },
          "owner()": {
            "notice": "Address of the current owner."
          },
          "ownershipStatus()": {
            "notice": "Ownership status."
          },
          "potentialOwner()": {
            "notice": "Address of the potential owner."
          },
          "protocolFeeRecipient()": {
            "notice": "Protocol fee recipient."
          },
          "restrictedExecuteTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),address,bytes32)": {
            "notice": "This function is used to do a non-atomic matching in the context of a batch taker bid."
          },
          "strategyInfo(uint256)": {
            "notice": "This returns the strategy information for a strategy id."
          },
          "transferManager()": {
            "notice": "Transfer manager for ERC721 and ERC1155."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCreatorFeeManager(address)": {
            "notice": "This function allows the owner to update the creator fee manager address."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          },
          "updateDomainSeparator()": {
            "notice": "This function allows the owner to update the domain separator (if possible)."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "notice": "This function allows the owner to update the maximum ETH gas limit for a standard transfer."
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "notice": "This function allows the owner to update the maximum creator fee (in basis point)."
          },
          "updateProtocolFeeRecipient(address)": {
            "notice": "This function allows the owner to update the protocol fee recipient."
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "notice": "This function allows the owner to update parameters for an existing execution strategy."
          },
          "userBidAskNonces(address)": {
            "notice": "This tracks the bid and ask nonces for a user address."
          },
          "userOrderNonce(address,uint256)": {
            "notice": "This checks whether the order nonce for a user was executed or cancelled."
          },
          "userSubsetNonce(address,uint256)": {
            "notice": "This checks whether the subset nonce for a user was cancelled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/OmniXExchange.sol": "OmniXExchange"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2",
        "urls": [
          "bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5",
          "dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke"
        ],
        "license": "MIT"
      },
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90",
        "urls": [
          "bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808",
          "dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L"
        ],
        "license": "MIT"
      },
      "contracts/core/BatchOrderTypehashRegistry.sol": {
        "keccak256": "0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a",
        "urls": [
          "bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2",
          "dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56",
        "urls": [
          "bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5",
          "dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y"
        ],
        "license": "MIT"
      },
      "contracts/core/ExecutionManager.sol": {
        "keccak256": "0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608",
        "urls": [
          "bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7",
          "dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn"
        ],
        "license": "MIT"
      },
      "contracts/core/InheritedStrategy.sol": {
        "keccak256": "0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38",
        "urls": [
          "bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860",
          "dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d"
        ],
        "license": "MIT"
      },
      "contracts/core/NonceManager.sol": {
        "keccak256": "0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737",
        "urls": [
          "bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375",
          "dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa"
        ],
        "license": "MIT"
      },
      "contracts/core/OmniXExchange.sol": {
        "keccak256": "0xabe8aa2dff49c4147ba0e44891a7bfadb8d6981be36c42325c2b4b1cd22e6b59",
        "urls": [
          "bzz-raw://1e479d17b99d812cee83af92c889d71074cf5aba3070f0222c065f951dd6f980",
          "dweb:/ipfs/QmPkfRVTTYoLVXdSUGdSFPFdrsJfGSfCh3CgtDzagZLjP6"
        ],
        "license": "MIT"
      },
      "contracts/core/StrategyManager.sol": {
        "keccak256": "0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a",
        "urls": [
          "bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8",
          "dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferManager.sol": {
        "keccak256": "0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1",
        "urls": [
          "bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f",
          "dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferSelectorNFT.sol": {
        "keccak256": "0xea2cdc3be40de8ed5f5f683c99da1c45ad405716212f1dcc10baa9eb74d4b536",
        "urls": [
          "bzz-raw://8ccdf519cded46a4d94df55918fd94218b2acb7a00dd19974b1cb1e3f4cce94f",
          "dweb:/ipfs/QmTqaWCYznqoHCThcc3XKfjPeH7MnmmyyFBQsRaRajaiMk"
        ],
        "license": "MIT"
      },
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/errors/SharedErrors.sol": {
        "keccak256": "0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf",
        "urls": [
          "bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9",
          "dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICreatorFeeManager.sol": {
        "keccak256": "0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237",
        "urls": [
          "bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e",
          "dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionManager.sol": {
        "keccak256": "0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4",
        "urls": [
          "bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab",
          "dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c",
        "urls": [
          "bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443",
          "dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOmniXExchange.sol": {
        "keccak256": "0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453",
        "urls": [
          "bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb",
          "dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRoyaltyFeeRegistry.sol": {
        "keccak256": "0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6",
        "urls": [
          "bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c",
          "dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f",
        "urls": [
          "bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db",
          "dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9",
        "urls": [
          "bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817",
          "dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITransferManager.sol": {
        "keccak256": "0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50",
        "urls": [
          "bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a",
          "dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol": {
        "keccak256": "0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620",
        "urls": [
          "bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc",
          "dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3",
        "urls": [
          "bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5",
          "dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
        "keccak256": "0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc",
        "urls": [
          "bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda",
          "dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol": {
        "keccak256": "0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d",
        "urls": [
          "bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd",
          "dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77",
        "urls": [
          "bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6",
          "dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol": {
        "keccak256": "0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143",
        "urls": [
          "bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e",
          "dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol": {
        "keccak256": "0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2",
        "urls": [
          "bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e",
          "dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol": {
        "keccak256": "0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262",
        "urls": [
          "bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc",
          "dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol": {
        "keccak256": "0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf",
        "urls": [
          "bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84",
          "dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
        "keccak256": "0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46",
        "urls": [
          "bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7",
          "dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol": {
        "keccak256": "0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9",
        "urls": [
          "bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04",
          "dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol": {
        "keccak256": "0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce",
        "urls": [
          "bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00",
          "dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol": {
        "keccak256": "0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05",
        "urls": [
          "bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d",
          "dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol": {
        "keccak256": "0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73",
        "urls": [
          "bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26",
          "dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
        "keccak256": "0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d",
        "urls": [
          "bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1",
          "dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol": {
        "keccak256": "0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c",
        "urls": [
          "bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc",
          "dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol": {
        "keccak256": "0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8",
        "urls": [
          "bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027",
          "dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol": {
        "keccak256": "0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713",
        "urls": [
          "bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114",
          "dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol": {
        "keccak256": "0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c",
        "urls": [
          "bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4",
          "dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
        "keccak256": "0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab",
        "urls": [
          "bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6",
          "dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/OmniXExchange.sol",
    "id": 4499,
    "exportedSymbols": {
      "BatchOrderTypehashRegistry": [
        1558
      ],
      "CallerInvalid": [
        6161
      ],
      "CurrencyInvalid": [
        6164
      ],
      "IOmniXExchange": [
        11828
      ],
      "LengthsInvalid": [
        6170
      ],
      "LowLevelERC20Transfer": [
        76845
      ],
      "LowLevelETHReturnETHIfAnyExceptOneWei": [
        76914
      ],
      "LowLevelWETH": [
        76957
      ],
      "MAX_CALLDATA_PROOF_LENGTH": [
        1149
      ],
      "MerkleProofCalldataWithNodes": [
        13453
      ],
      "MerkleProofInvalid": [
        6173
      ],
      "MerkleProofTooLarge": [
        6178
      ],
      "ONE_HUNDRED_PERCENT_IN_BP": [
        1145
      ],
      "OmniXExchange": [
        4498
      ],
      "OrderStructs": [
        13693
      ],
      "QuoteType": [
        6096
      ],
      "QuoteTypeInvalid": [
        6184
      ],
      "SignatureCheckerCalldata": [
        75978
      ],
      "TransferSelectorNFT": [
        6086
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:26200:15",
    "nodes": [
      {
        "id": 3290,
        "nodeType": "PragmaDirective",
        "src": "32:24:15",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3292,
        "nodeType": "ImportDirective",
        "src": "95:106:15",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "file": "@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 75979,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3291,
              "name": "SignatureCheckerCalldata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75978,
              "src": "103:24:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3294,
        "nodeType": "ImportDirective",
        "src": "202:148:15",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 76915,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3293,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76914,
              "src": "210:37:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3296,
        "nodeType": "ImportDirective",
        "src": "351:98:15",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 76958,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3295,
              "name": "LowLevelWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76957,
              "src": "359:12:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3298,
        "nodeType": "ImportDirective",
        "src": "450:116:15",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 76846,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3297,
              "name": "LowLevelERC20Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76845,
              "src": "458:21:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3300,
        "nodeType": "ImportDirective",
        "src": "633:104:15",
        "nodes": [],
        "absolutePath": "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "file": "../libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 13454,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3299,
              "name": "MerkleProofCalldataWithNodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13453,
              "src": "641:28:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3302,
        "nodeType": "ImportDirective",
        "src": "752:59:15",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 13694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3301,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13693,
              "src": "760:12:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3304,
        "nodeType": "ImportDirective",
        "src": "827:64:15",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOmniXExchange.sol",
        "file": "../interfaces/IOmniXExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 11829,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3303,
              "name": "IOmniXExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11828,
              "src": "835:14:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3311,
        "nodeType": "ImportDirective",
        "src": "910:149:15",
        "nodes": [],
        "absolutePath": "contracts/errors/SharedErrors.sol",
        "file": "../errors/SharedErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 6185,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3305,
              "name": "CallerInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6161,
              "src": "918:13:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3306,
              "name": "CurrencyInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6164,
              "src": "933:15:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3307,
              "name": "LengthsInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6170,
              "src": "950:14:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3308,
              "name": "MerkleProofInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6173,
              "src": "966:18:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3309,
              "name": "MerkleProofTooLarge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6178,
              "src": "986:19:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3310,
              "name": "QuoteTypeInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6184,
              "src": "1007:16:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3313,
        "nodeType": "ImportDirective",
        "src": "1084:62:15",
        "nodes": [],
        "absolutePath": "contracts/core/TransferSelectorNFT.sol",
        "file": "./TransferSelectorNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 6087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3312,
              "name": "TransferSelectorNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6086,
              "src": "1092:19:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3315,
        "nodeType": "ImportDirective",
        "src": "1147:76:15",
        "nodes": [],
        "absolutePath": "contracts/core/BatchOrderTypehashRegistry.sol",
        "file": "./BatchOrderTypehashRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 1559,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3314,
              "name": "BatchOrderTypehashRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1558,
              "src": "1155:26:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3318,
        "nodeType": "ImportDirective",
        "src": "1238:103:15",
        "nodes": [],
        "absolutePath": "contracts/constants/NumericConstants.sol",
        "file": "../constants/NumericConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 1150,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3316,
              "name": "MAX_CALLDATA_PROOF_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1149,
              "src": "1246:25:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3317,
              "name": "ONE_HUNDRED_PERCENT_IN_BP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1145,
              "src": "1273:25:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3320,
        "nodeType": "ImportDirective",
        "src": "1352:49:15",
        "nodes": [],
        "absolutePath": "contracts/enums/QuoteType.sol",
        "file": "../enums/QuoteType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4499,
        "sourceUnit": 6097,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3319,
              "name": "QuoteType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6096,
              "src": "1360:9:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4498,
        "nodeType": "ContractDefinition",
        "src": "4745:21487:15",
        "nodes": [
          {
            "id": 3337,
            "nodeType": "UsingForDirective",
            "src": "4941:42:15",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3334,
              "name": "OrderStructs",
              "nameLocations": [
                "4947:12:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13693,
              "src": "4947:12:15"
            },
            "typeName": {
              "id": 3336,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3335,
                "name": "OrderStructs.Maker",
                "nameLocations": [
                  "4964:12:15",
                  "4977:5:15"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13599,
                "src": "4964:18:15"
              },
              "referencedDeclaration": 13599,
              "src": "4964:18:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                "typeString": "struct OrderStructs.Maker"
              }
            }
          },
          {
            "id": 3340,
            "nodeType": "VariableDeclaration",
            "src": "5033:29:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3338,
              "nodeType": "StructuredDocumentation",
              "src": "4989:39:15",
              "text": " @notice Wrapped ETH."
            },
            "functionSelector": "ad5c4648",
            "mutability": "immutable",
            "name": "WETH",
            "nameLocation": "5058:4:15",
            "scope": 4498,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3339,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5033:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3343,
            "nodeType": "VariableDeclaration",
            "src": "5117:22:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3341,
              "nodeType": "StructuredDocumentation",
              "src": "5069:43:15",
              "text": " @notice Current chainId."
            },
            "functionSelector": "9a8a0592",
            "mutability": "mutable",
            "name": "chainId",
            "nameLocation": "5132:7:15",
            "scope": 4498,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3342,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5117:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3346,
            "nodeType": "VariableDeclaration",
            "src": "5203:30:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3344,
              "nodeType": "StructuredDocumentation",
              "src": "5146:52:15",
              "text": " @notice Current domain separator."
            },
            "functionSelector": "f698da25",
            "mutability": "mutable",
            "name": "domainSeparator",
            "nameLocation": "5218:15:15",
            "scope": 4498,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3345,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "5203:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3350,
            "nodeType": "VariableDeclaration",
            "src": "5487:44:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3347,
              "nodeType": "StructuredDocumentation",
              "src": "5240:242:15",
              "text": " @notice This variable is used as the gas limit for a ETH transfer.\n         If a standard ETH transfer fails within this gas limit, ETH will get wrapped to WETH\n         and transferred to the initial recipient."
            },
            "mutability": "mutable",
            "name": "_gasLimitETHTransfer",
            "nameLocation": "5503:20:15",
            "scope": 4498,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3348,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5487:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "325f333030",
              "id": 3349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5526:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2300_by_1",
                "typeString": "int_const 2300"
              },
              "value": "2_300"
            },
            "visibility": "private"
          },
          {
            "id": 3375,
            "nodeType": "FunctionDefinition",
            "src": "5779:270:15",
            "nodes": [],
            "body": {
              "id": 3374,
              "nodeType": "Block",
              "src": "5986:63:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3367,
                      "name": "_updateDomainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4374,
                      "src": "5996:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3369,
                  "nodeType": "ExpressionStatement",
                  "src": "5996:24:15"
                },
                {
                  "expression": {
                    "id": 3372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3370,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3340,
                      "src": "6030:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3371,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "6037:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6030:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3373,
                  "nodeType": "ExpressionStatement",
                  "src": "6030:12:15"
                }
              ]
            },
            "documentation": {
              "id": 3351,
              "nodeType": "StructuredDocumentation",
              "src": "5538:236:15",
              "text": " @notice Constructor\n @param _owner Owner address\n @param _protocolFeeRecipient Protocol fee recipient address\n @param _transferManager Transfer manager address\n @param _weth Wrapped ETH address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3362,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3353,
                    "src": "5937:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3363,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3355,
                    "src": "5945:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3364,
                    "name": "_transferManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3357,
                    "src": "5968:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3365,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3361,
                  "name": "TransferSelectorNFT",
                  "nameLocations": [
                    "5917:19:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6086,
                  "src": "5917:19:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5917:68:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3353,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5808:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "5800:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "5832:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "5824:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5824:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "_transferManager",
                  "nameLocation": "5871:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "5863:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "5905:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "5897:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5897:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5790:126:15"
            },
            "returnParameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5986:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3448,
            "nodeType": "FunctionDefinition",
            "src": "6055:993:15",
            "nodes": [],
            "body": {
              "id": 3447,
              "nodeType": "Block",
              "src": "6319:729:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3394,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "6337:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3447,
                      "src": "6329:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6329:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3397,
                  "initialValue": {
                    "expression": {
                      "id": 3395,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3381,
                      "src": "6348:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 3396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6357:8:15",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13582,
                    "src": "6348:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6329:36:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6458:28:15",
                      "subExpression": {
                        "baseExpression": {
                          "id": 3398,
                          "name": "isCurrencyAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "6459:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3400,
                        "indexExpression": {
                          "id": 3399,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3394,
                          "src": "6477:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6459:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3402,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3394,
                        "src": "6490:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6510:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6502:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6502:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6502:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6490:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6458:54:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3413,
                  "nodeType": "IfStatement",
                  "src": "6454:109:15",
                  "trueBody": {
                    "id": 3412,
                    "nodeType": "Block",
                    "src": "6514:49:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3409,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6164,
                            "src": "6535:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6535:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3411,
                        "nodeType": "RevertStatement",
                        "src": "6528:24:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3415,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "6581:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3447,
                      "src": "6573:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6573:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3418,
                  "initialValue": {
                    "expression": {
                      "id": 3416,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3381,
                      "src": "6590:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6599:6:15",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13584,
                    "src": "6590:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6573:32:15"
                },
                {
                  "assignments": [
                    3420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3420,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "6623:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3447,
                      "src": "6615:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3419,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6615:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3424,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3421,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3381,
                        "src": "6635:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6644:4:15",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13692,
                      "src": "6635:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$13599_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$13599_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6635:15:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6615:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3426,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "6690:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 3427,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "6702:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3428,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3383,
                        "src": "6713:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3429,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3415,
                        "src": "6729:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3425,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "6660:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$13620_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6660:76:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3431,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:76:15"
                },
                {
                  "assignments": [
                    3433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3433,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "6820:22:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3447,
                      "src": "6812:30:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6812:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3439,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3435,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "6862:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 3436,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3381,
                        "src": "6872:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "id": 3437,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "6882:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3434,
                      "name": "_executeTakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4001,
                      "src": "6845:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,bytes32) returns (uint256)"
                      }
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6845:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6812:80:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3441,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3394,
                        "src": "6989:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3442,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3415,
                        "src": "6999:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3443,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "7007:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3444,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "7018:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3440,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4245,
                      "src": "6958:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6958:83:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3446,
                  "nodeType": "ExpressionStatement",
                  "src": "6958:83:15"
                }
              ]
            },
            "baseFunctions": [
              11787
            ],
            "functionSelector": "e72853e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3390,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6306:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75810,
                  "src": "6306:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6306:12:15"
              }
            ],
            "name": "executeTakerAsk",
            "nameLocation": "6064:15:15",
            "parameters": {
              "id": 3389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3378,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "6117:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "6089:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 3377,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3376,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "6089:12:15",
                        "6102:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "6089:18:15"
                    },
                    "referencedDeclaration": 13604,
                    "src": "6089:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3381,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "6163:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "6135:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 3380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3379,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "6135:12:15",
                        "6148:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "6135:18:15"
                    },
                    "referencedDeclaration": 13599,
                    "src": "6135:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "6196:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "6181:29:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6181:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3386,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "6253:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "6220:43:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 3385,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3384,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "6220:12:15",
                        "6233:10:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13620,
                      "src": "6220:23:15"
                    },
                    "referencedDeclaration": 13620,
                    "src": "6220:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$13620_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "6281:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "6273:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6273:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6079:217:15"
            },
            "returnParameters": {
              "id": 3392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6319:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3516,
            "nodeType": "FunctionDefinition",
            "src": "7054:1021:15",
            "nodes": [],
            "body": {
              "id": 3515,
              "nodeType": "Block",
              "src": "7326:749:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3467,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "7344:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3515,
                      "src": "7336:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3466,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7336:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3470,
                  "initialValue": {
                    "expression": {
                      "id": 3468,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3454,
                      "src": "7355:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7364:8:15",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13582,
                    "src": "7355:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7336:36:15"
                },
                {
                  "condition": {
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7450:28:15",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3471,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "7451:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3473,
                      "indexExpression": {
                        "id": 3472,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "7469:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7451:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3479,
                  "nodeType": "IfStatement",
                  "src": "7446:83:15",
                  "trueBody": {
                    "id": 3478,
                    "nodeType": "Block",
                    "src": "7480:49:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3475,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6164,
                            "src": "7501:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7501:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3477,
                        "nodeType": "RevertStatement",
                        "src": "7494:24:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3481,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "7547:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3515,
                      "src": "7539:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3480,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7539:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3485,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3482,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3454,
                        "src": "7559:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 3483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7568:4:15",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13692,
                      "src": "7559:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$13599_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$13599_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7559:15:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7539:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3487,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3459,
                        "src": "7614:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 3488,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3481,
                        "src": "7626:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3489,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3456,
                        "src": "7637:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 3490,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3454,
                          "src": "7653:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7662:6:15",
                        "memberName": "signer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13584,
                        "src": "7653:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3486,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "7584:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$13620_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7584:85:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "7584:85:15"
                },
                {
                  "assignments": [
                    3495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3495,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "7753:22:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3515,
                      "src": "7745:30:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7745:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3503,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3497,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3451,
                        "src": "7795:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 3498,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3454,
                        "src": "7805:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 3499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7815:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7819:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7815:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3501,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3481,
                        "src": "7827:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3496,
                      "name": "_executeTakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4171,
                      "src": "7778:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                      }
                    },
                    "id": 3502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7778:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7745:92:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3505,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "7941:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7951:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7955:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7951:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3508,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3461,
                        "src": "7963:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3509,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "7974:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3504,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4245,
                      "src": "7910:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:87:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:87:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3512,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76913,
                      "src": "8037:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8037:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3514,
                  "nodeType": "ExpressionStatement",
                  "src": "8037:31:15"
                }
              ]
            },
            "baseFunctions": [
              11804
            ],
            "functionSelector": "8585ae03",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3464,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3463,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7313:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75810,
                  "src": "7313:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7313:12:15"
              }
            ],
            "name": "executeTakerBid",
            "nameLocation": "7063:15:15",
            "parameters": {
              "id": 3462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3451,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "7116:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "7088:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 3450,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3449,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "7088:12:15",
                        "7101:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "7088:18:15"
                    },
                    "referencedDeclaration": 13604,
                    "src": "7088:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3454,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "7162:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "7134:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 3453,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3452,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "7134:12:15",
                        "7147:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "7134:18:15"
                    },
                    "referencedDeclaration": 13599,
                    "src": "7134:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3456,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "7195:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "7180:29:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3455,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7180:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "7252:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "7219:43:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 3458,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3457,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "7219:12:15",
                        "7232:10:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13620,
                      "src": "7219:23:15"
                    },
                    "referencedDeclaration": 13620,
                    "src": "7219:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$13620_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "7280:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "7272:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7078:217:15"
            },
            "returnParameters": {
              "id": 3465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7326:0:15"
            },
            "scope": 4498,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3765,
            "nodeType": "FunctionDefinition",
            "src": "8082:3405:15",
            "nodes": [],
            "body": {
              "id": 3764,
              "nodeType": "Block",
              "src": "8398:3089:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3541,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "8416:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3764,
                      "src": "8408:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3540,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8408:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3544,
                  "initialValue": {
                    "expression": {
                      "id": 3542,
                      "name": "takerBids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "8425:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Taker_$13604_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8435:6:15",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8425:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8408:33:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3545,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3541,
                        "src": "8468:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8478:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8468:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3548,
                                    "name": "makerAsks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3524,
                                    "src": "8496:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Maker_$13599_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                    }
                                  },
                                  "id": 3549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8506:6:15",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "8496:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 3550,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3541,
                                  "src": "8515:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8496:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3552,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8495:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "|",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3553,
                                    "name": "makerSignatures",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3527,
                                    "src": "8526:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "bytes calldata[] calldata"
                                    }
                                  },
                                  "id": 3554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8542:6:15",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "8526:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 3555,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3541,
                                  "src": "8551:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8526:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3557,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8525:33:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8495:63:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3559,
                                  "name": "merkleTrees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3531,
                                  "src": "8562:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$13620_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                  }
                                },
                                "id": 3560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8574:6:15",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8562:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "id": 3561,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3541,
                                "src": "8583:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8562:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3563,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8561:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8495:95:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8594:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8495:100:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8468:127:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3572,
                  "nodeType": "IfStatement",
                  "src": "8451:203:15",
                  "trueBody": {
                    "id": 3571,
                    "nodeType": "Block",
                    "src": "8606:48:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3568,
                            "name": "LengthsInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6170,
                            "src": "8627:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8627:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3570,
                        "nodeType": "RevertStatement",
                        "src": "8620:23:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3574,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "8747:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3764,
                      "src": "8739:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3573,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8739:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3579,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3575,
                        "name": "makerAsks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3524,
                        "src": "8758:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Maker_$13599_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata[] calldata"
                        }
                      },
                      "id": 3577,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8768:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8758:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8771:8:15",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13582,
                    "src": "8758:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8739:40:15"
                },
                {
                  "condition": {
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8793:28:15",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3580,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "8794:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3582,
                      "indexExpression": {
                        "id": 3581,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3574,
                        "src": "8812:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8794:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3588,
                  "nodeType": "IfStatement",
                  "src": "8789:83:15",
                  "trueBody": {
                    "id": 3587,
                    "nodeType": "Block",
                    "src": "8823:49:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3584,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6164,
                            "src": "8844:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8844:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3586,
                        "nodeType": "RevertStatement",
                        "src": "8837:24:15"
                      }
                    ]
                  }
                },
                {
                  "id": 3760,
                  "nodeType": "Block",
                  "src": "8882:2528:15",
                  "statements": [
                    {
                      "assignments": [
                        3590
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 3590,
                          "mutability": "mutable",
                          "name": "totalProtocolFeeAmount",
                          "nameLocation": "8950:22:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 3760,
                          "src": "8942:30:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 3589,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8942:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 3591,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8942:30:15"
                    },
                    {
                      "condition": {
                        "id": 3592,
                        "name": "isAtomic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "9140:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 3750,
                        "nodeType": "Block",
                        "src": "10138:1101:15",
                        "statements": [
                          {
                            "body": {
                              "id": 3748,
                              "nodeType": "Block",
                              "src": "10186:1039:15",
                              "statements": [
                                {
                                  "assignments": [
                                    3677
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3677,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "10236:8:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3748,
                                      "src": "10208:36:15",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 3676,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 3675,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "10208:12:15",
                                            "10221:5:15"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 13599,
                                          "src": "10208:18:15"
                                        },
                                        "referencedDeclaration": 13599,
                                        "src": "10208:18:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3681,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 3678,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3524,
                                      "src": "10247:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$13599_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 3680,
                                    "indexExpression": {
                                      "id": 3679,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3668,
                                      "src": "10257:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10247:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "10208:51:15"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3682,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3668,
                                      "src": "10341:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 3683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10346:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "10341:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 3695,
                                  "nodeType": "IfStatement",
                                  "src": "10337:176:15",
                                  "trueBody": {
                                    "id": 3694,
                                    "nodeType": "Block",
                                    "src": "10349:164:15",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 3688,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3685,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3677,
                                              "src": "10379:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 3686,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "10388:8:15",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13582,
                                            "src": "10379:17:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 3687,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3574,
                                            "src": "10400:8:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "10379:29:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3693,
                                        "nodeType": "IfStatement",
                                        "src": "10375:116:15",
                                        "trueBody": {
                                          "id": 3692,
                                          "nodeType": "Block",
                                          "src": "10410:81:15",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 3689,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6164,
                                                  "src": "10447:15:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 3690,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10447:17:15",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 3691,
                                              "nodeType": "RevertStatement",
                                              "src": "10440:24:15"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    3700
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3700,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "10563:8:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3748,
                                      "src": "10535:36:15",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 3699,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 3698,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "10535:12:15",
                                            "10548:5:15"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 13604,
                                          "src": "10535:18:15"
                                        },
                                        "referencedDeclaration": 13604,
                                        "src": "10535:18:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3704,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 3701,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3520,
                                      "src": "10574:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$13604_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 3703,
                                    "indexExpression": {
                                      "id": 3702,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3668,
                                      "src": "10584:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10574:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "10535:51:15"
                                },
                                {
                                  "assignments": [
                                    3706
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3706,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "10616:9:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3748,
                                      "src": "10608:17:15",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 3705,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10608:7:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3710,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3707,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3677,
                                        "src": "10628:8:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 3708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10637:4:15",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13692,
                                      "src": "10628:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$13599_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$13599_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 3709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10628:15:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "10608:35:15"
                                },
                                {
                                  "id": 3747,
                                  "nodeType": "Block",
                                  "src": "10666:541:15",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 3712,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3531,
                                              "src": "10722:11:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$13620_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 3714,
                                            "indexExpression": {
                                              "id": 3713,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3668,
                                              "src": "10734:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10722:14:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 3715,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3706,
                                            "src": "10738:9:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 3716,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3527,
                                              "src": "10749:15:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 3718,
                                            "indexExpression": {
                                              "id": 3717,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3668,
                                              "src": "10765:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10749:18:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 3719,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3677,
                                              "src": "10769:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 3720,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "10778:6:15",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13584,
                                            "src": "10769:15:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3711,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4497,
                                          "src": "10692:29:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$13620_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 3721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10692:93:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 3722,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10692:93:15"
                                    },
                                    {
                                      "clauses": [
                                        {
                                          "block": {
                                            "id": 3738,
                                            "nodeType": "Block",
                                            "src": "10980:100:15",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 3736,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 3734,
                                                    "name": "totalProtocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3590,
                                                    "src": "11010:22:15",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "+=",
                                                  "rightHandSide": {
                                                    "id": 3735,
                                                    "name": "protocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3732,
                                                    "src": "11036:17:15",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "11010:43:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 3737,
                                                "nodeType": "ExpressionStatement",
                                                "src": "11010:43:15"
                                              }
                                            ]
                                          },
                                          "errorName": "",
                                          "id": 3739,
                                          "nodeType": "TryCatchClause",
                                          "parameters": {
                                            "id": 3733,
                                            "nodeType": "ParameterList",
                                            "parameters": [
                                              {
                                                "constant": false,
                                                "id": 3732,
                                                "mutability": "mutable",
                                                "name": "protocolFeeAmount",
                                                "nameLocation": "10936:17:15",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 3739,
                                                "src": "10928:25:15",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "typeName": {
                                                  "id": 3731,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "10928:7:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "visibility": "internal"
                                              }
                                            ],
                                            "src": "10898:81:15"
                                          },
                                          "src": "10890:190:15"
                                        },
                                        {
                                          "block": {
                                            "id": 3740,
                                            "nodeType": "Block",
                                            "src": "11087:2:15",
                                            "statements": []
                                          },
                                          "errorName": "",
                                          "id": 3741,
                                          "nodeType": "TryCatchClause",
                                          "src": "11081:8:15"
                                        }
                                      ],
                                      "externalCall": {
                                        "arguments": [
                                          {
                                            "id": 3725,
                                            "name": "takerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3700,
                                            "src": "10847:8:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            }
                                          },
                                          {
                                            "id": 3726,
                                            "name": "makerAsk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3677,
                                            "src": "10857:8:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 3727,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "10867:3:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 3728,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "10871:6:15",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "10867:10:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 3729,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3706,
                                            "src": "10879:9:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3723,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "10816:4:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_OmniXExchange_$4498",
                                              "typeString": "contract OmniXExchange"
                                            }
                                          },
                                          "id": 3724,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "10821:25:15",
                                          "memberName": "restrictedExecuteTakerBid",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3803,
                                          "src": "10816:30:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Taker_$13604_memory_ptr_$_t_struct$_Maker_$13599_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                            "typeString": "function (struct OrderStructs.Taker memory,struct OrderStructs.Maker memory,address,bytes32) external returns (uint256)"
                                          }
                                        },
                                        "id": 3730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10816:73:15",
                                        "tryCall": true,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3742,
                                      "nodeType": "TryStatement",
                                      "src": "10812:277:15"
                                    },
                                    {
                                      "id": 3746,
                                      "nodeType": "UncheckedBlock",
                                      "src": "11115:70:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3744,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "11155:3:15",
                                            "subExpression": {
                                              "id": 3743,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3668,
                                              "src": "11157:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3745,
                                          "nodeType": "ExpressionStatement",
                                          "src": "11155:3:15"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3670,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3668,
                                "src": "10172:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 3671,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3541,
                                "src": "10176:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10172:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 3749,
                            "initializationExpression": {
                              "assignments": [
                                3668
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3668,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "10169:1:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3749,
                                  "src": "10161:9:15",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3667,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10161:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3669,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10161:9:15"
                            },
                            "nodeType": "ForStatement",
                            "src": "10156:1069:15"
                          }
                        ]
                      },
                      "id": 3751,
                      "nodeType": "IfStatement",
                      "src": "9136:2103:15",
                      "trueBody": {
                        "id": 3666,
                        "nodeType": "Block",
                        "src": "9150:982:15",
                        "statements": [
                          {
                            "body": {
                              "id": 3664,
                              "nodeType": "Block",
                              "src": "9198:920:15",
                              "statements": [
                                {
                                  "assignments": [
                                    3603
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3603,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "9248:8:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3664,
                                      "src": "9220:36:15",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 3602,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 3601,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "9220:12:15",
                                            "9233:5:15"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 13599,
                                          "src": "9220:18:15"
                                        },
                                        "referencedDeclaration": 13599,
                                        "src": "9220:18:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3607,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 3604,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3524,
                                      "src": "9259:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$13599_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 3606,
                                    "indexExpression": {
                                      "id": 3605,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3594,
                                      "src": "9269:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9259:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9220:51:15"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3610,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3608,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3594,
                                      "src": "9353:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 3609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9358:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "9353:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 3621,
                                  "nodeType": "IfStatement",
                                  "src": "9349:176:15",
                                  "trueBody": {
                                    "id": 3620,
                                    "nodeType": "Block",
                                    "src": "9361:164:15",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 3614,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3611,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3603,
                                              "src": "9391:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 3612,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9400:8:15",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13582,
                                            "src": "9391:17:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 3613,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3574,
                                            "src": "9412:8:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "9391:29:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3619,
                                        "nodeType": "IfStatement",
                                        "src": "9387:116:15",
                                        "trueBody": {
                                          "id": 3618,
                                          "nodeType": "Block",
                                          "src": "9422:81:15",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 3615,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6164,
                                                  "src": "9459:15:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 3616,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9459:17:15",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 3617,
                                              "nodeType": "RevertStatement",
                                              "src": "9452:24:15"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    3626
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3626,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "9575:8:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3664,
                                      "src": "9547:36:15",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 3625,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 3624,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "9547:12:15",
                                            "9560:5:15"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 13604,
                                          "src": "9547:18:15"
                                        },
                                        "referencedDeclaration": 13604,
                                        "src": "9547:18:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3630,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 3627,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3520,
                                      "src": "9586:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$13604_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 3629,
                                    "indexExpression": {
                                      "id": 3628,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3594,
                                      "src": "9596:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9586:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9547:51:15"
                                },
                                {
                                  "assignments": [
                                    3632
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 3632,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "9628:9:15",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 3664,
                                      "src": "9620:17:15",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 3631,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9620:7:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 3636,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3633,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3603,
                                        "src": "9640:8:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 3634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9649:4:15",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13692,
                                      "src": "9640:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$13599_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$13599_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 3635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9640:15:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9620:35:15"
                                },
                                {
                                  "id": 3663,
                                  "nodeType": "Block",
                                  "src": "9678:422:15",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 3638,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3531,
                                              "src": "9734:11:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$13620_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 3640,
                                            "indexExpression": {
                                              "id": 3639,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3594,
                                              "src": "9746:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9734:14:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 3641,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3632,
                                            "src": "9750:9:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 3642,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3527,
                                              "src": "9761:15:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 3644,
                                            "indexExpression": {
                                              "id": 3643,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3594,
                                              "src": "9777:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9761:18:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 3645,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3603,
                                              "src": "9781:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 3646,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9790:6:15",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13584,
                                            "src": "9781:15:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3637,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4497,
                                          "src": "9704:29:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$13620_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 3647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9704:93:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 3648,
                                      "nodeType": "ExpressionStatement",
                                      "src": "9704:93:15"
                                    },
                                    {
                                      "expression": {
                                        "id": 3657,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 3649,
                                          "name": "totalProtocolFeeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3590,
                                          "src": "9896:22:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "id": 3651,
                                              "name": "takerBid",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3626,
                                              "src": "9939:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              }
                                            },
                                            {
                                              "id": 3652,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3603,
                                              "src": "9949:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 3653,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "9959:3:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 3654,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "9963:6:15",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "9959:10:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3655,
                                              "name": "orderHash",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3632,
                                              "src": "9971:9:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 3650,
                                            "name": "_executeTakerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4171,
                                            "src": "9922:16:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                              "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                                            }
                                          },
                                          "id": 3656,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9922:59:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9896:85:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3658,
                                      "nodeType": "ExpressionStatement",
                                      "src": "9896:85:15"
                                    },
                                    {
                                      "id": 3662,
                                      "nodeType": "UncheckedBlock",
                                      "src": "10008:70:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3660,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "10048:3:15",
                                            "subExpression": {
                                              "id": 3659,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3594,
                                              "src": "10050:1:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3661,
                                          "nodeType": "ExpressionStatement",
                                          "src": "10048:3:15"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3596,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3594,
                                "src": "9184:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 3597,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3541,
                                "src": "9188:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9184:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 3665,
                            "initializationExpression": {
                              "assignments": [
                                3594
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3594,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "9181:1:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3665,
                                  "src": "9173:9:15",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3593,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9173:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3595,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9173:9:15"
                            },
                            "nodeType": "ForStatement",
                            "src": "9168:950:15"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3753,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3574,
                            "src": "11343:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 3754,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11353:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11357:6:15",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11353:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3756,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3533,
                            "src": "11365:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3757,
                            "name": "totalProtocolFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3590,
                            "src": "11376:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3752,
                          "name": "_payProtocolFeeAndAffiliateFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4245,
                          "src": "11312:30:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,address,uint256)"
                          }
                        },
                        "id": 3758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11312:87:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 3759,
                      "nodeType": "ExpressionStatement",
                      "src": "11312:87:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3761,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76913,
                      "src": "11449:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11449:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3763,
                  "nodeType": "ExpressionStatement",
                  "src": "11449:31:15"
                }
              ]
            },
            "baseFunctions": [
              11827
            ],
            "functionSelector": "f4288a21",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3537,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8385:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75810,
                  "src": "8385:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "8385:12:15"
              }
            ],
            "name": "executeMultipleTakerBids",
            "nameLocation": "8091:24:15",
            "parameters": {
              "id": 3536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3520,
                  "mutability": "mutable",
                  "name": "takerBids",
                  "nameLocation": "8155:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8125:39:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Taker_$13604_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3518,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3517,
                        "name": "OrderStructs.Taker",
                        "nameLocations": [
                          "8125:12:15",
                          "8138:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13604,
                        "src": "8125:18:15"
                      },
                      "referencedDeclaration": 13604,
                      "src": "8125:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                        "typeString": "struct OrderStructs.Taker"
                      }
                    },
                    "id": 3519,
                    "nodeType": "ArrayTypeName",
                    "src": "8125:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Taker_$13604_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Taker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "makerAsks",
                  "nameLocation": "8204:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8174:39:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Maker_$13599_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3522,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3521,
                        "name": "OrderStructs.Maker",
                        "nameLocations": [
                          "8174:12:15",
                          "8187:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13599,
                        "src": "8174:18:15"
                      },
                      "referencedDeclaration": 13599,
                      "src": "8174:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                        "typeString": "struct OrderStructs.Maker"
                      }
                    },
                    "id": 3523,
                    "nodeType": "ArrayTypeName",
                    "src": "8174:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Maker_$13599_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Maker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "makerSignatures",
                  "nameLocation": "8240:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8223:32:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3525,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8223:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3526,
                    "nodeType": "ArrayTypeName",
                    "src": "8223:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "merkleTrees",
                  "nameLocation": "8300:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8265:46:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$13620_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3529,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3528,
                        "name": "OrderStructs.MerkleTree",
                        "nameLocations": [
                          "8265:12:15",
                          "8278:10:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13620,
                        "src": "8265:23:15"
                      },
                      "referencedDeclaration": 13620,
                      "src": "8265:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$13620_storage_ptr",
                        "typeString": "struct OrderStructs.MerkleTree"
                      }
                    },
                    "id": 3530,
                    "nodeType": "ArrayTypeName",
                    "src": "8265:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MerkleTree_$13620_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3533,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "8329:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8321:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8321:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3535,
                  "mutability": "mutable",
                  "name": "isAtomic",
                  "nameLocation": "8353:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "8348:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3534,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8348:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8115:252:15"
            },
            "returnParameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8398:0:15"
            },
            "scope": 4498,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3803,
            "nodeType": "FunctionDefinition",
            "src": "11971:411:15",
            "nodes": [],
            "body": {
              "id": 3802,
              "nodeType": "Block",
              "src": "12200:182:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3781,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12214:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12218:6:15",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12214:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3785,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12236:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OmniXExchange_$4498",
                            "typeString": "contract OmniXExchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OmniXExchange_$4498",
                            "typeString": "contract OmniXExchange"
                          }
                        ],
                        "id": 3784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12228:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12228:7:15",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12228:13:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12214:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3792,
                  "nodeType": "IfStatement",
                  "src": "12210:80:15",
                  "trueBody": {
                    "id": 3791,
                    "nodeType": "Block",
                    "src": "12243:47:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3788,
                            "name": "CallerInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6161,
                            "src": "12264:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12264:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3790,
                        "nodeType": "RevertStatement",
                        "src": "12257:22:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3793,
                      "name": "protocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "12300:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3795,
                          "name": "takerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3769,
                          "src": "12337:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          }
                        },
                        {
                          "id": 3796,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3772,
                          "src": "12347:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        {
                          "id": 3797,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3774,
                          "src": "12357:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3798,
                          "name": "orderHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3776,
                          "src": "12365:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          },
                          {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3794,
                        "name": "_executeTakerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4171,
                        "src": "12320:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                        }
                      },
                      "id": 3799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12320:55:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12300:75:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "12300:75:15"
                }
              ]
            },
            "documentation": {
              "id": 3766,
              "nodeType": "StructuredDocumentation",
              "src": "11493:473:15",
              "text": " @notice This function is used to do a non-atomic matching in the context of a batch taker bid.\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param sender Sender address (i.e. the initial msg sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount\n @dev This function is only callable by this contract. It is used for non-atomic batch order matching."
            },
            "functionSelector": "d5b7f065",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restrictedExecuteTakerBid",
            "nameLocation": "11980:25:15",
            "parameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3769,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "12043:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3803,
                  "src": "12015:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 3768,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3767,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "12015:12:15",
                        "12028:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "12015:18:15"
                    },
                    "referencedDeclaration": 13604,
                    "src": "12015:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "12089:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3803,
                  "src": "12061:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 3771,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3770,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "12061:12:15",
                        "12074:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "12061:18:15"
                    },
                    "referencedDeclaration": 13599,
                    "src": "12061:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3774,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12115:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3803,
                  "src": "12107:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12107:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3776,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "12139:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3803,
                  "src": "12131:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3775,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12131:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12005:149:15"
            },
            "returnParameters": {
              "id": 3780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3779,
                  "mutability": "mutable",
                  "name": "protocolFeeAmount",
                  "nameLocation": "12181:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3803,
                  "src": "12173:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12173:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12172:27:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3826,
            "nodeType": "FunctionDefinition",
            "src": "12670:245:15",
            "nodes": [],
            "body": {
              "id": 3825,
              "nodeType": "Block",
              "src": "12722:193:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3809,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12736:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12742:7:15",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "12736:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3811,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3343,
                      "src": "12753:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12736:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3823,
                    "nodeType": "Block",
                    "src": "12856:53:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3820,
                            "name": "SameDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11764,
                            "src": "12877:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12877:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3822,
                        "nodeType": "RevertStatement",
                        "src": "12870:28:15"
                      }
                    ]
                  },
                  "id": 3824,
                  "nodeType": "IfStatement",
                  "src": "12732:177:15",
                  "trueBody": {
                    "id": 3819,
                    "nodeType": "Block",
                    "src": "12762:88:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3813,
                            "name": "_updateDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4374,
                            "src": "12776:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12776:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3815,
                        "nodeType": "ExpressionStatement",
                        "src": "12776:24:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3816,
                            "name": "NewDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11693,
                            "src": "12819:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12819:20:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3818,
                        "nodeType": "EmitStatement",
                        "src": "12814:25:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3804,
              "nodeType": "StructuredDocumentation",
              "src": "12388:277:15",
              "text": " @notice This function allows the owner to update the domain separator (if possible).\n @dev Only callable by owner. If there is a fork of the network with a new chainId,\n      it allows the owner to reset the domain separator for the new chain id."
            },
            "functionSelector": "89ccfe89",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3806,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12712:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "12712:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "12712:9:15"
              }
            ],
            "name": "updateDomainSeparator",
            "nameLocation": "12679:21:15",
            "parameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12700:2:15"
            },
            "returnParameters": {
              "id": 3808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12722:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3851,
            "nodeType": "FunctionDefinition",
            "src": "13148:321:15",
            "nodes": [],
            "body": {
              "id": 3850,
              "nodeType": "Block",
              "src": "13237:232:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3834,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3829,
                      "src": "13251:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "325f333030",
                      "id": 3835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13276:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2300_by_1",
                        "typeString": "int_const 2300"
                      },
                      "value": "2_300"
                    },
                    "src": "13251:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3841,
                  "nodeType": "IfStatement",
                  "src": "13247:98:15",
                  "trueBody": {
                    "id": 3840,
                    "nodeType": "Block",
                    "src": "13283:62:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3837,
                            "name": "NewGasLimitETHTransferTooLow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11761,
                            "src": "13304:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13304:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3839,
                        "nodeType": "RevertStatement",
                        "src": "13297:37:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3842,
                      "name": "_gasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3350,
                      "src": "13355:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3843,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3829,
                      "src": "13378:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13355:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "13355:45:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3847,
                        "name": "newGasLimitETHTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3829,
                        "src": "13439:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3846,
                      "name": "NewGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11698,
                      "src": "13416:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13416:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3849,
                  "nodeType": "EmitStatement",
                  "src": "13411:51:15"
                }
              ]
            },
            "documentation": {
              "id": 3827,
              "nodeType": "StructuredDocumentation",
              "src": "12921:222:15",
              "text": " @notice This function allows the owner to update the maximum ETH gas limit for a standard transfer.\n @param newGasLimitETHTransfer New gas limit for ETH transfer\n @dev Only callable by owner."
            },
            "functionSelector": "974e7c9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3831,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13227:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "13227:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "13227:9:15"
              }
            ],
            "name": "updateETHGasLimitForTransfer",
            "nameLocation": "13157:28:15",
            "parameters": {
              "id": 3830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3829,
                  "mutability": "mutable",
                  "name": "newGasLimitETHTransfer",
                  "nameLocation": "13194:22:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3851,
                  "src": "13186:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13186:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13185:32:15"
            },
            "returnParameters": {
              "id": 3833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13237:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4001,
            "nodeType": "FunctionDefinition",
            "src": "13787:2019:15",
            "nodes": [],
            "body": {
              "id": 4000,
              "nodeType": "Block",
              "src": "13965:1841:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$6096",
                      "typeString": "enum QuoteType"
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3865,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3858,
                        "src": "13979:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 3866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13988:9:15",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13567,
                      "src": "13979:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 3867,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6096,
                        "src": "14001:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$6096_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 3868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14011:3:15",
                      "memberName": "Bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6094,
                      "src": "14001:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "13979:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3874,
                  "nodeType": "IfStatement",
                  "src": "13975:91:15",
                  "trueBody": {
                    "id": 3873,
                    "nodeType": "Block",
                    "src": "14016:50:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3870,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6184,
                            "src": "14037:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14037:18:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3872,
                        "nodeType": "RevertStatement",
                        "src": "14030:25:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3876,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "14084:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14076:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14076:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3879,
                  "initialValue": {
                    "expression": {
                      "id": 3877,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3858,
                      "src": "14093:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14102:6:15",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13584,
                    "src": "14093:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14076:32:15"
                },
                {
                  "id": 3920,
                  "nodeType": "Block",
                  "src": "14118:447:15",
                  "statements": [
                    {
                      "assignments": [
                        3881
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 3881,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "14140:20:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 3920,
                          "src": "14132:28:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 3880,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14132:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 3888,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3882,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3104,
                            "src": "14163:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 3884,
                          "indexExpression": {
                            "id": 3883,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3876,
                            "src": "14178:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14163:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 3887,
                        "indexExpression": {
                          "expression": {
                            "id": 3885,
                            "name": "makerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3858,
                            "src": "14186:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 3886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14195:10:15",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13573,
                          "src": "14186:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14163:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14132:74:15"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3889,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "14270:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$11519_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 3891,
                                "indexExpression": {
                                  "id": 3890,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3876,
                                  "src": "14287:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14270:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$11519_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 3892,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14295:8:15",
                              "memberName": "bidNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11516,
                              "src": "14270:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 3893,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3858,
                                "src": "14307:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 3894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14316:11:15",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13569,
                              "src": "14307:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14270:57:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3896,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3111,
                                "src": "14347:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 3898,
                              "indexExpression": {
                                "id": 3897,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3876,
                                "src": "14363:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14347:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3901,
                            "indexExpression": {
                              "expression": {
                                "id": 3899,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3858,
                                "src": "14371:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 3900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14380:11:15",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13571,
                              "src": "14371:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14347:45:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14270:122:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 3908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3903,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3881,
                                  "src": "14413:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3906,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14445:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14437:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3904,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14437:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14437:10:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "14413:34:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 3911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3909,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3881,
                                  "src": "14451:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 3910,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3860,
                                  "src": "14475:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "14451:33:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14413:71:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3913,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14412:73:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14270:215:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 3919,
                      "nodeType": "IfStatement",
                      "src": "14249:306:15",
                      "trueBody": {
                        "id": 3918,
                        "nodeType": "Block",
                        "src": "14500:55:15",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3915,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11770,
                                "src": "14525:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 3916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14525:15:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 3917,
                            "nodeType": "RevertStatement",
                            "src": "14518:22:15"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    3925,
                    3928,
                    3932,
                    3936,
                    3938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3925,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "14606:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14589:24:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3923,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14589:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3924,
                        "nodeType": "ArrayTypeName",
                        "src": "14589:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3928,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "14644:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14627:24:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14627:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3927,
                        "nodeType": "ArrayTypeName",
                        "src": "14627:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3932,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "14683:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14665:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14665:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3931,
                        "length": {
                          "hexValue": "32",
                          "id": 3930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14673:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "14665:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3936,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "14725:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14707:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3933,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14707:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3935,
                        "length": {
                          "hexValue": "33",
                          "id": 3934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14715:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "14707:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3938,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "14754:18:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4000,
                      "src": "14749:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14749:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3945,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3940,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "14815:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 3941,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3858,
                        "src": "14825:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 3942,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14835:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14839:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14835:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3939,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "14785:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 3944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14785:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14575:271:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3947,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3938,
                        "src": "14920:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3948,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "14940:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3949,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "14948:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14957:10:15",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13573,
                        "src": "14948:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3951,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3860,
                        "src": "14969:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3946,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "14898:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14898:81:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3953,
                  "nodeType": "ExpressionStatement",
                  "src": "14898:81:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3955,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15038:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15047:10:15",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13580,
                        "src": "15038:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3957,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15059:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15068:14:15",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13578,
                        "src": "15059:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "expression": {
                          "id": 3959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15084:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15088:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15084:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3961,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "15096:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3962,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "15104:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3963,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3928,
                        "src": "15113:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 3954,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6085,
                      "src": "15025:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$6091_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15025:96:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3965,
                  "nodeType": "ExpressionStatement",
                  "src": "15025:96:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3967,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3932,
                        "src": "15207:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 3968,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3936,
                        "src": "15219:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 3969,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15231:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15240:8:15",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13582,
                        "src": "15231:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3971,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "15250:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3966,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4338,
                      "src": "15168:38:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15168:89:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3973,
                  "nodeType": "ExpressionStatement",
                  "src": "15168:89:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3976,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3860,
                            "src": "15352:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3977,
                              "name": "makerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3858,
                              "src": "15391:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 3978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15400:10:15",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13573,
                            "src": "15391:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3979,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3938,
                            "src": "15448:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 3975,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11681,
                          "src": "15295:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$11681_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 3980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "15341:9:15",
                          "15379:10:15",
                          "15428:18:15"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "15295:186:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$11681_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 3981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15495:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15499:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15495:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3983,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "15519:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3984,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15539:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15548:10:15",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13575,
                        "src": "15539:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3986,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15572:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15581:8:15",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13582,
                        "src": "15572:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3988,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3858,
                          "src": "15603:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15612:10:15",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13580,
                        "src": "15603:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3990,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "15636:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3991,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3928,
                        "src": "15657:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3992,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3932,
                        "src": "15678:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 3993,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3936,
                        "src": "15702:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$11681_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 3974,
                      "name": "TakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11728,
                      "src": "15273:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$11681_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 3994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15273:449:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3995,
                  "nodeType": "EmitStatement",
                  "src": "15268:454:15"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3996,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3936,
                      "src": "15786:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 3998,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 3997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15797:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15786:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3864,
                  "id": 3999,
                  "nodeType": "Return",
                  "src": "15779:20:15"
                }
              ]
            },
            "documentation": {
              "id": 3852,
              "nodeType": "StructuredDocumentation",
              "src": "13475:307:15",
              "text": " @notice This function is internal and is used to execute a taker ask (against a maker bid).\n @param takerAsk Taker ask order struct\n @param makerBid Maker bid order struct\n @param orderHash Hash of the maker bid order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerAsk",
            "nameLocation": "13796:16:15",
            "parameters": {
              "id": 3861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "13850:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "13822:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 3854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3853,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "13822:12:15",
                        "13835:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "13822:18:15"
                    },
                    "referencedDeclaration": 13604,
                    "src": "13822:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3858,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "13896:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "13868:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 3857,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3856,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "13868:12:15",
                        "13881:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "13868:18:15"
                    },
                    "referencedDeclaration": 13599,
                    "src": "13868:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3860,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "13922:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "13914:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3859,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13914:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13812:125:15"
            },
            "returnParameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "13956:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13956:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13955:9:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4171,
            "nodeType": "FunctionDefinition",
            "src": "16189:2230:15",
            "nodes": [],
            "body": {
              "id": 4170,
              "nodeType": "Block",
              "src": "16391:2028:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$6096",
                      "typeString": "enum QuoteType"
                    },
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4017,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4008,
                        "src": "16405:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 4018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16414:9:15",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13567,
                      "src": "16405:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 4019,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6096,
                        "src": "16427:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$6096_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 4020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "16437:3:15",
                      "memberName": "Ask",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6095,
                      "src": "16427:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$6096",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "16405:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4026,
                  "nodeType": "IfStatement",
                  "src": "16401:91:15",
                  "trueBody": {
                    "id": 4025,
                    "nodeType": "Block",
                    "src": "16442:50:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4022,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6184,
                            "src": "16463:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16463:18:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4024,
                        "nodeType": "RevertStatement",
                        "src": "16456:25:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4028,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "16510:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "16502:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4027,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16502:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4031,
                  "initialValue": {
                    "expression": {
                      "id": 4029,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "16519:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 4030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16528:6:15",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13584,
                    "src": "16519:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16502:32:15"
                },
                {
                  "id": 4072,
                  "nodeType": "Block",
                  "src": "16544:448:15",
                  "statements": [
                    {
                      "assignments": [
                        4033
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 4033,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "16595:20:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 4072,
                          "src": "16587:28:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 4032,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "16587:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 4040,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4034,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3104,
                            "src": "16618:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 4036,
                          "indexExpression": {
                            "id": 4035,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4028,
                            "src": "16633:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16618:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 4039,
                        "indexExpression": {
                          "expression": {
                            "id": 4037,
                            "name": "makerAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4008,
                            "src": "16641:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16650:10:15",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13573,
                          "src": "16641:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16618:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "16587:74:15"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 4041,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "16697:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$11519_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 4043,
                                "indexExpression": {
                                  "id": 4042,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4028,
                                  "src": "16714:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16697:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$11519_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 4044,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16722:8:15",
                              "memberName": "askNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11518,
                              "src": "16697:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 4045,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4008,
                                "src": "16734:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 4046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16743:11:15",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13569,
                              "src": "16734:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16697:57:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4048,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3111,
                                "src": "16774:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 4050,
                              "indexExpression": {
                                "id": 4049,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4028,
                                "src": "16790:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16774:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 4053,
                            "indexExpression": {
                              "expression": {
                                "id": 4051,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4008,
                                "src": "16798:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 4052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16807:11:15",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13571,
                              "src": "16798:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16774:45:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16697:122:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 4060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4055,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4033,
                                  "src": "16840:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4058,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16872:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16864:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 4056,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16864:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16864:10:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "16840:34:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 4063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4061,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4033,
                                  "src": "16878:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 4062,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4012,
                                  "src": "16902:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "16878:33:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "16840:71:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4065,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16839:73:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16697:215:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 4071,
                      "nodeType": "IfStatement",
                      "src": "16676:306:15",
                      "trueBody": {
                        "id": 4070,
                        "nodeType": "Block",
                        "src": "16927:55:15",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4067,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11770,
                                "src": "16952:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16952:15:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4069,
                            "nodeType": "RevertStatement",
                            "src": "16945:22:15"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    4077,
                    4080,
                    4084,
                    4088,
                    4090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4077,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "17033:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "17016:24:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17016:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4076,
                        "nodeType": "ArrayTypeName",
                        "src": "17016:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4080,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "17071:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "17054:24:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4078,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17054:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4079,
                        "nodeType": "ArrayTypeName",
                        "src": "17054:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4084,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "17110:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "17092:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17092:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4083,
                        "length": {
                          "hexValue": "32",
                          "id": 4082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17100:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "17092:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4088,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "17152:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "17134:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17134:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4087,
                        "length": {
                          "hexValue": "33",
                          "id": 4086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17142:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "17134:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4090,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "17181:18:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4170,
                      "src": "17176:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4089,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17176:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4097,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4092,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4005,
                        "src": "17242:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 4093,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4008,
                        "src": "17252:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 4094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17262:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17266:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17262:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4091,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "17212:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$13604_calldata_ptr_$_t_struct$_Maker_$13599_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 4096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17212:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17002:271:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4099,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4090,
                        "src": "17347:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 4100,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4028,
                        "src": "17367:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4101,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "17375:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17384:10:15",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13573,
                        "src": "17375:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4103,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4012,
                        "src": "17396:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4098,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "17325:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 4104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17325:81:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4105,
                  "nodeType": "ExpressionStatement",
                  "src": "17325:81:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4107,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "17491:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 4108,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "17503:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4109,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "17515:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17524:8:15",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13582,
                        "src": "17515:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4111,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4010,
                        "src": "17534:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4106,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4338,
                      "src": "17452:38:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 4112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17452:89:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4113,
                  "nodeType": "ExpressionStatement",
                  "src": "17452:89:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4115,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "17614:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17623:10:15",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13580,
                        "src": "17614:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4117,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "17647:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17656:14:15",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13578,
                        "src": "17647:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "id": 4119,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4028,
                        "src": "17684:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4120,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "17704:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 4121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17713:9:15",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13601,
                            "src": "17704:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17734:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17726:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4122,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17726:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17726:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17704:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 4128,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4005,
                            "src": "17748:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 4129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17757:9:15",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13601,
                          "src": "17748:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "17704:62:15",
                        "trueExpression": {
                          "id": 4127,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4010,
                          "src": "17739:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4131,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "17780:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4132,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "17801:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 4114,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6085,
                      "src": "17588:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$6091_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 4133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17588:230:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4134,
                  "nodeType": "ExpressionStatement",
                  "src": "17588:230:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4137,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4012,
                            "src": "17913:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 4138,
                              "name": "makerAsk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4008,
                              "src": "17952:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 4139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17961:10:15",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13573,
                            "src": "17952:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4140,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4090,
                            "src": "18009:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 4136,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11681,
                          "src": "17856:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$11681_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 4141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "17902:9:15",
                          "17940:10:15",
                          "17989:18:15"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "17856:186:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$11681_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "id": 4142,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4010,
                        "src": "18056:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4143,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "18076:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 4144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18085:9:15",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13601,
                            "src": "18076:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18106:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18098:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18098:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18098:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18076:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 4151,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4005,
                            "src": "18120:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 4152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18129:9:15",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13601,
                          "src": "18120:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "18076:62:15",
                        "trueExpression": {
                          "id": 4150,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4010,
                          "src": "18111:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4154,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "18152:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18161:10:15",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13575,
                        "src": "18152:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4156,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "18185:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18194:8:15",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13582,
                        "src": "18185:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4158,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4008,
                          "src": "18216:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 4159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18225:10:15",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13580,
                        "src": "18216:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4160,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "18249:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4161,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "18270:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4162,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "18291:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 4163,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "18315:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$11681_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 4135,
                      "name": "TakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11758,
                      "src": "17834:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$11681_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 4164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17834:501:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4165,
                  "nodeType": "EmitStatement",
                  "src": "17829:506:15"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4166,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4088,
                      "src": "18399:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 4168,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 4167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18410:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18399:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4016,
                  "id": 4169,
                  "nodeType": "Return",
                  "src": "18392:20:15"
                }
              ]
            },
            "documentation": {
              "id": 4002,
              "nodeType": "StructuredDocumentation",
              "src": "15812:372:15",
              "text": " @notice This function is internal and is used to execute a taker bid (against a maker ask).\n @param takerBid Taker bid order struct\n @param makerAsk Maker ask order struct\n @param sender Sender of the transaction (i.e. msg.sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerBid",
            "nameLocation": "16198:16:15",
            "parameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4005,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "16252:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "16224:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$13604_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 4004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4003,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "16224:12:15",
                        "16237:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13604,
                      "src": "16224:18:15"
                    },
                    "referencedDeclaration": 13604,
                    "src": "16224:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$13604_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4008,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "16298:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "16270:36:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$13599_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 4007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4006,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "16270:12:15",
                        "16283:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13599,
                      "src": "16270:18:15"
                    },
                    "referencedDeclaration": 13599,
                    "src": "16270:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$13599_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "16324:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "16316:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16316:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "16348:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "16340:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16340:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16214:149:15"
            },
            "returnParameters": {
              "id": 4016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "16382:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16382:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16381:9:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4245,
            "nodeType": "FunctionDefinition",
            "src": "18813:1635:15",
            "nodes": [],
            "body": {
              "id": 4244,
              "nodeType": "Block",
              "src": "18986:1462:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4183,
                      "name": "totalProtocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4180,
                      "src": "19000:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19026:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19000:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4243,
                  "nodeType": "IfStatement",
                  "src": "18996:1446:15",
                  "trueBody": {
                    "id": 4242,
                    "nodeType": "Block",
                    "src": "19029:1413:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4186,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4178,
                            "src": "19047:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19068:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19060:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4187,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19060:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19060:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19047:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4234,
                        "nodeType": "IfStatement",
                        "src": "19043:1209:15",
                        "trueBody": {
                          "id": 4233,
                          "nodeType": "Block",
                          "src": "19072:1180:15",
                          "statements": [
                            {
                              "condition": {
                                "id": 4192,
                                "name": "isAffiliateProgramActive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1335,
                                "src": "19260:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4232,
                              "nodeType": "IfStatement",
                              "src": "19256:982:15",
                              "trueBody": {
                                "id": 4231,
                                "nodeType": "Block",
                                "src": "19286:952:15",
                                "statements": [
                                  {
                                    "assignments": [
                                      4194
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4194,
                                        "mutability": "mutable",
                                        "name": "totalAffiliateFeeAmount",
                                        "nameLocation": "19316:23:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 4231,
                                        "src": "19308:31:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 4193,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "19308:7:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4203,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 4199,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 4195,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4180,
                                              "src": "19343:22:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "baseExpression": {
                                                "id": 4196,
                                                "name": "affiliateRates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1343,
                                                "src": "19368:14:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 4198,
                                              "indexExpression": {
                                                "id": 4197,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4178,
                                                "src": "19383:9:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19368:25:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "19343:50:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 4200,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "19342:52:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 4201,
                                        "name": "ONE_HUNDRED_PERCENT_IN_BP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1145,
                                        "src": "19421:25:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19342:104:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "19308:138:15"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4204,
                                        "name": "totalAffiliateFeeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4194,
                                        "src": "19473:23:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 4205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19500:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "19473:28:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4230,
                                    "nodeType": "IfStatement",
                                    "src": "19469:751:15",
                                    "trueBody": {
                                      "id": 4229,
                                      "nodeType": "Block",
                                      "src": "19503:717:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 4209,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 4207,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4180,
                                              "src": "19529:22:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "-=",
                                            "rightHandSide": {
                                              "id": 4208,
                                              "name": "totalAffiliateFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4194,
                                              "src": "19555:23:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "19529:49:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 4210,
                                          "nodeType": "ExpressionStatement",
                                          "src": "19529:49:15"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 4213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 4211,
                                              "name": "bidUser",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4176,
                                              "src": "19947:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "!=",
                                            "rightExpression": {
                                              "id": 4212,
                                              "name": "affiliate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4178,
                                              "src": "19958:9:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "19947:20:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 4222,
                                          "nodeType": "IfStatement",
                                          "src": "19943:161:15",
                                          "trueBody": {
                                            "id": 4221,
                                            "nodeType": "Block",
                                            "src": "19969:135:15",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 4215,
                                                      "name": "currency",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4174,
                                                      "src": "20023:8:15",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 4216,
                                                      "name": "bidUser",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4176,
                                                      "src": "20033:7:15",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 4217,
                                                      "name": "affiliate",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4178,
                                                      "src": "20042:9:15",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 4218,
                                                      "name": "totalAffiliateFeeAmount",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4194,
                                                      "src": "20053:23:15",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 4214,
                                                    "name": "_transferFungibleTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4281,
                                                    "src": "19999:23:15",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                      "typeString": "function (address,address,address,uint256)"
                                                    }
                                                  },
                                                  "id": 4219,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "19999:78:15",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 4220,
                                                "nodeType": "ExpressionStatement",
                                                "src": "19999:78:15"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "id": 4224,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4178,
                                                "src": "20152:9:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 4225,
                                                "name": "currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4174,
                                                "src": "20163:8:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 4226,
                                                "name": "totalAffiliateFeeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4194,
                                                "src": "20173:23:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 4223,
                                              "name": "AffiliatePayment",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11690,
                                              "src": "20135:16:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                              }
                                            },
                                            "id": 4227,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "20135:62:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 4228,
                                          "nodeType": "EmitStatement",
                                          "src": "20130:67:15"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4236,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4174,
                              "src": "20367:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4237,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4176,
                              "src": "20377:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4238,
                              "name": "protocolFeeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2539,
                              "src": "20386:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4239,
                              "name": "totalProtocolFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4180,
                              "src": "20408:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4235,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4281,
                            "src": "20343:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 4240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20343:88:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4241,
                        "nodeType": "ExpressionStatement",
                        "src": "20343:88:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4172,
              "nodeType": "StructuredDocumentation",
              "src": "18425:383:15",
              "text": " @notice This function is internal and is used to pay the protocol fee and affiliate fee (if any).\n @param currency Currency address to transfer (address(0) is ETH)\n @param bidUser Bid user address\n @param affiliate Affiliate address (address(0) if none)\n @param totalProtocolFeeAmount Total protocol fee amount (denominated in the currency)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payProtocolFeeAndAffiliateFee",
            "nameLocation": "18822:30:15",
            "parameters": {
              "id": 4181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4174,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "18870:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4245,
                  "src": "18862:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18862:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4176,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "18896:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4245,
                  "src": "18888:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18888:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4178,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "18921:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4245,
                  "src": "18913:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18913:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4180,
                  "mutability": "mutable",
                  "name": "totalProtocolFeeAmount",
                  "nameLocation": "18948:22:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4245,
                  "src": "18940:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18940:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18852:124:15"
            },
            "returnParameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18986:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4281,
            "nodeType": "FunctionDefinition",
            "src": "20719:357:15",
            "nodes": [],
            "body": {
              "id": 4280,
              "nodeType": "Block",
              "src": "20830:246:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4257,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4248,
                      "src": "20844:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20864:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20856:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4258,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20856:7:15",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20856:10:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20844:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4278,
                    "nodeType": "Block",
                    "src": "20983:87:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4272,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4248,
                              "src": "21023:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4273,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4250,
                              "src": "21033:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4274,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4252,
                              "src": "21041:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4275,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4254,
                              "src": "21052:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4271,
                            "name": "_executeERC20TransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76781,
                            "src": "20997:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 4276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20997:62:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4277,
                        "nodeType": "ExpressionStatement",
                        "src": "20997:62:15"
                      }
                    ]
                  },
                  "id": 4279,
                  "nodeType": "IfStatement",
                  "src": "20840:230:15",
                  "trueBody": {
                    "id": 4270,
                    "nodeType": "Block",
                    "src": "20868:109:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4264,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3340,
                              "src": "20920:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4265,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4252,
                              "src": "20926:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4266,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4254,
                              "src": "20937:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4267,
                              "name": "_gasLimitETHTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3350,
                              "src": "20945:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4263,
                            "name": "_transferETHAndWrapIfFailWithGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76956,
                            "src": "20882:37:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 4268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20882:84:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4269,
                        "nodeType": "ExpressionStatement",
                        "src": "20882:84:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4246,
              "nodeType": "StructuredDocumentation",
              "src": "20454:260:15",
              "text": " @notice This function is internal and is used to transfer fungible tokens.\n @param currency Currency address\n @param sender Sender address\n @param recipient Recipient address\n @param amount Amount (in fungible tokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFungibleTokens",
            "nameLocation": "20728:23:15",
            "parameters": {
              "id": 4255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4248,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "20760:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4281,
                  "src": "20752:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20752:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4250,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "20778:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4281,
                  "src": "20770:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20770:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "20794:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4281,
                  "src": "20786:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20786:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4254,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20813:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4281,
                  "src": "20805:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20805:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20751:69:15"
            },
            "returnParameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20830:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4338,
            "nodeType": "FunctionDefinition",
            "src": "21549:1029:15",
            "nodes": [],
            "body": {
              "id": 4337,
              "nodeType": "Block",
              "src": "21738:840:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4298,
                      "mutability": "mutable",
                      "name": "sellerProceed",
                      "nameLocation": "22115:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4337,
                      "src": "22107:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4297,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22107:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4302,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4299,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4290,
                      "src": "22131:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 4301,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 4300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22142:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22131:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22107:37:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4303,
                      "name": "sellerProceed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4298,
                      "src": "22158:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22175:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22158:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4316,
                  "nodeType": "IfStatement",
                  "src": "22154:121:15",
                  "trueBody": {
                    "id": 4315,
                    "nodeType": "Block",
                    "src": "22178:97:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4307,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4292,
                              "src": "22216:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4308,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294,
                              "src": "22226:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 4309,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4286,
                                "src": "22235:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 4311,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 4310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22246:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22235:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4312,
                              "name": "sellerProceed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4298,
                              "src": "22250:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4306,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4281,
                            "src": "22192:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 4313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22192:72:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4314,
                        "nodeType": "ExpressionStatement",
                        "src": "22192:72:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4318,
                      "mutability": "mutable",
                      "name": "creatorFeeAmount",
                      "nameLocation": "22403:16:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4337,
                      "src": "22395:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22395:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4322,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4319,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4290,
                      "src": "22422:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 4321,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 4320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22433:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22422:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22395:40:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4323,
                      "name": "creatorFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "22449:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22469:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22449:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4336,
                  "nodeType": "IfStatement",
                  "src": "22445:127:15",
                  "trueBody": {
                    "id": 4335,
                    "nodeType": "Block",
                    "src": "22472:100:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4327,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4292,
                              "src": "22510:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4328,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294,
                              "src": "22520:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 4329,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4286,
                                "src": "22529:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 4331,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 4330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22540:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22529:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4332,
                              "name": "creatorFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4318,
                              "src": "22544:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4326,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4281,
                            "src": "22486:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 4333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22486:75:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4334,
                        "nodeType": "ExpressionStatement",
                        "src": "22486:75:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4282,
              "nodeType": "StructuredDocumentation",
              "src": "21082:462:15",
              "text": " @notice This function is private and used to transfer funds to\n         (1) creator recipient (if any)\n         (2) ask recipient.\n @param recipients Recipient addresses\n @param feeAmounts Fees\n @param currency Currency address\n @param bidUser Bid user address\n @dev It does not send to the 0-th element in the array since it is the protocol fee,\n      which is paid later in the execution flow."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToAskRecipientAndCreatorIfAny",
            "nameLocation": "21558:38:15",
            "parameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4286,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "21624:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "21606:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4283,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21606:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4285,
                    "length": {
                      "hexValue": "32",
                      "id": 4284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21614:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "21606:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4290,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "21662:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "21644:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4287,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21644:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4289,
                    "length": {
                      "hexValue": "33",
                      "id": 4288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21652:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "21644:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4292,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "21690:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "21682:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21682:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "21716:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "21708:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21708:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21596:133:15"
            },
            "returnParameters": {
              "id": 4296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21738:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4374,
            "nodeType": "FunctionDefinition",
            "src": "22713:429:15",
            "nodes": [],
            "body": {
              "id": 4373,
              "nodeType": "Block",
              "src": "22755:387:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4342,
                      "name": "domainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3346,
                      "src": "22765:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 4347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22844:84:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 4346,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "22834:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22834:95:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4c6f6f6b735261726550726f746f636f6c",
                                  "id": 4350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22957:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  },
                                  "value": "LooksRareProtocol"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  }
                                ],
                                "id": 4349,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "22947:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22947:30:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32",
                                      "id": 4355,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23011:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      }
                                    ],
                                    "id": 4354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23005:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 4353,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23005:5:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23005:10:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4352,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "22995:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22995:21:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 4358,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "23034:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23040:7:15",
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "23034:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4362,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "23073:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$4498",
                                    "typeString": "contract OmniXExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$4498",
                                    "typeString": "contract OmniXExchange"
                                  }
                                ],
                                "id": 4361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23065:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4360,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23065:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23065:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4344,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "22806:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "22810:6:15",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "22806:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22806:286:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4343,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "22783:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 4365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22783:319:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "22765:337:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4367,
                  "nodeType": "ExpressionStatement",
                  "src": "22765:337:15"
                },
                {
                  "expression": {
                    "id": 4371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4368,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3343,
                      "src": "23112:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4369,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "23122:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23128:7:15",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "23122:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23112:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4372,
                  "nodeType": "ExpressionStatement",
                  "src": "23112:23:15"
                }
              ]
            },
            "documentation": {
              "id": 4339,
              "nodeType": "StructuredDocumentation",
              "src": "22584:124:15",
              "text": " @notice This function is private and used to compute the domain separator and store the current chain id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDomainSeparator",
            "nameLocation": "22722:22:15",
            "parameters": {
              "id": 4340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22744:2:15"
            },
            "returnParameters": {
              "id": 4341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22755:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4399,
            "nodeType": "FunctionDefinition",
            "src": "23819:278:15",
            "nodes": [],
            "body": {
              "id": 4398,
              "nodeType": "Block",
              "src": "23976:121:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4386,
                          "name": "userOrderNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3104,
                          "src": "23986:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bytes32))"
                          }
                        },
                        "id": 4389,
                        "indexExpression": {
                          "id": 4387,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4379,
                          "src": "24001:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23986:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 4390,
                      "indexExpression": {
                        "id": 4388,
                        "name": "orderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4381,
                        "src": "24009:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23986:34:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "condition": {
                            "id": 4391,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4377,
                            "src": "24024:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 4393,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4383,
                            "src": "24080:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 4394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "24024:65:15",
                          "trueExpression": {
                            "id": 4392,
                            "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3091,
                            "src": "24045:32:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 4395,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "24023:67:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "23986:104:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4397,
                  "nodeType": "ExpressionStatement",
                  "src": "23986:104:15"
                }
              ]
            },
            "documentation": {
              "id": 4375,
              "nodeType": "StructuredDocumentation",
              "src": "23148:666:15",
              "text": " @notice This function is internal and is called during the execution of a transaction to decide\n         how to map the user's order nonce.\n @param isNonceInvalidated Whether the nonce is being invalidated\n @param signer Signer address\n @param orderNonce Maker user order nonce\n @param orderHash Hash of the order struct\n @dev If isNonceInvalidated is true, this function invalidates the user order nonce for future execution.\n      If it is equal to false, this function maps the order hash for this user order nonce\n      to prevent other order structs sharing the same order nonce to be executed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateUserOrderNonce",
            "nameLocation": "23828:21:15",
            "parameters": {
              "id": 4384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4377,
                  "mutability": "mutable",
                  "name": "isNonceInvalidated",
                  "nameLocation": "23864:18:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4399,
                  "src": "23859:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4376,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23859:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4379,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "23900:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4399,
                  "src": "23892:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23892:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4381,
                  "mutability": "mutable",
                  "name": "orderNonce",
                  "nameLocation": "23924:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4399,
                  "src": "23916:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23916:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "23952:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4399,
                  "src": "23944:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4382,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23944:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23849:118:15"
            },
            "returnParameters": {
              "id": 4385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23976:0:15"
            },
            "scope": 4498,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4435,
            "nodeType": "FunctionDefinition",
            "src": "24484:485:15",
            "nodes": [],
            "body": {
              "id": 4434,
              "nodeType": "Block",
              "src": "24599:370:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4409,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3343,
                      "src": "24613:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 4410,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "24624:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24630:7:15",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "24624:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24613:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4432,
                    "nodeType": "Block",
                    "src": "24915:48:15",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4429,
                            "name": "ChainIdInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11767,
                            "src": "24936:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24936:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4431,
                        "nodeType": "RevertStatement",
                        "src": "24929:23:15"
                      }
                    ]
                  },
                  "id": 4433,
                  "nodeType": "IfStatement",
                  "src": "24609:354:15",
                  "trueBody": {
                    "id": 4428,
                    "nodeType": "Block",
                    "src": "24639:270:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "1901",
                                      "id": 4419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "24785:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      "value": "\u0019\u0001"
                                    },
                                    {
                                      "id": 4420,
                                      "name": "domainSeparator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3346,
                                      "src": "24797:15:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 4421,
                                      "name": "computedHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4402,
                                      "src": "24814:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4417,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "24768:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "24772:12:15",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "24768:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24768:59:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4416,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "24758:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24758:70:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 4424,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4406,
                              "src": "24846:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4425,
                              "name": "makerSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4404,
                              "src": "24870:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 4413,
                              "name": "SignatureCheckerCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75978,
                              "src": "24709:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureCheckerCalldata_$75978_$",
                                "typeString": "type(library SignatureCheckerCalldata)"
                              }
                            },
                            "id": 4415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "24734:6:15",
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75877,
                            "src": "24709:31:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,bytes calldata) view"
                            }
                          },
                          "id": 4426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24709:189:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4427,
                        "nodeType": "ExpressionStatement",
                        "src": "24709:189:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4400,
              "nodeType": "StructuredDocumentation",
              "src": "24103:376:15",
              "text": " @notice This function is private and used to verify the chain id, compute the digest, and verify the signature.\n @dev If chainId is not equal to the cached chain id, it would revert.\n @param computedHash Hash of order (maker bid or maker ask) or merkle root\n @param makerSignature Signature of the maker\n @param signer Signer address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeDigestAndVerify",
            "nameLocation": "24493:23:15",
            "parameters": {
              "id": 4407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4402,
                  "mutability": "mutable",
                  "name": "computedHash",
                  "nameLocation": "24525:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "24517:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24517:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4404,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "24554:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "24539:29:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4403,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24539:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4406,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "24578:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "24570:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24570:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24516:69:15"
            },
            "returnParameters": {
              "id": 4408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24599:0:15"
            },
            "scope": 4498,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4497,
            "nodeType": "FunctionDefinition",
            "src": "25494:736:15",
            "nodes": [],
            "body": {
              "id": 4496,
              "nodeType": "Block",
              "src": "25690:540:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4449,
                      "mutability": "mutable",
                      "name": "proofLength",
                      "nameLocation": "25708:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 4496,
                      "src": "25700:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25700:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4453,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 4450,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4439,
                        "src": "25722:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      "id": 4451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25733:5:15",
                      "memberName": "proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13619,
                      "src": "25722:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$13613_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                      }
                    },
                    "id": 4452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25739:6:15",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "25722:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25700:45:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4454,
                      "name": "proofLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4449,
                      "src": "25760:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25775:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25760:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4489,
                  "nodeType": "IfStatement",
                  "src": "25756:404:15",
                  "trueBody": {
                    "id": 4488,
                    "nodeType": "Block",
                    "src": "25778:382:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4457,
                            "name": "proofLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4449,
                            "src": "25796:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4458,
                            "name": "MAX_CALLDATA_PROOF_LENGTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "25810:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25796:39:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4465,
                        "nodeType": "IfStatement",
                        "src": "25792:117:15",
                        "trueBody": {
                          "id": 4464,
                          "nodeType": "Block",
                          "src": "25837:72:15",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 4461,
                                    "name": "proofLength",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4449,
                                    "src": "25882:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4460,
                                  "name": "MerkleProofTooLarge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6178,
                                  "src": "25862:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 4462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25862:32:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4463,
                              "nodeType": "RevertStatement",
                              "src": "25855:39:15"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 4474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "25927:90:15",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4468,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4439,
                                  "src": "25972:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 4469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "25983:5:15",
                                "memberName": "proof",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13619,
                                "src": "25972:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$13613_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4470,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4439,
                                  "src": "25990:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 4471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26001:4:15",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13615,
                                "src": "25990:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 4472,
                                "name": "orderHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4441,
                                "src": "26007:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$13613_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 4466,
                                "name": "MerkleProofCalldataWithNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13453,
                                "src": "25928:28:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProofCalldataWithNodes_$13453_$",
                                  "typeString": "type(library MerkleProofCalldataWithNodes)"
                                }
                              },
                              "id": 4467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "25957:14:15",
                              "memberName": "verifyCalldata",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13373,
                              "src": "25928:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_MerkleTreeNode_$13613_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (struct OrderStructs.MerkleTreeNode calldata[] calldata,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 4473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25928:89:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4479,
                        "nodeType": "IfStatement",
                        "src": "25923:156:15",
                        "trueBody": {
                          "id": 4478,
                          "nodeType": "Block",
                          "src": "26019:60:15",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4475,
                                  "name": "MerkleProofInvalid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6173,
                                  "src": "26044:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26044:20:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4477,
                              "nodeType": "RevertStatement",
                              "src": "26037:27:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 4486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4480,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4441,
                            "src": "26093:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4482,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4439,
                                  "src": "26120:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 4483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26131:4:15",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13615,
                                "src": "26120:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 4484,
                                "name": "proofLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4449,
                                "src": "26137:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4481,
                              "name": "hashBatchOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "26105:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                              }
                            },
                            "id": 4485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26105:44:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "26093:56:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 4487,
                        "nodeType": "ExpressionStatement",
                        "src": "26093:56:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4491,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4441,
                        "src": "26194:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4492,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4443,
                        "src": "26205:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 4493,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4445,
                        "src": "26216:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4490,
                      "name": "_computeDigestAndVerify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4435,
                      "src": "26170:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 4494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26170:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4495,
                  "nodeType": "ExpressionStatement",
                  "src": "26170:53:15"
                }
              ]
            },
            "documentation": {
              "id": 4436,
              "nodeType": "StructuredDocumentation",
              "src": "24975:514:15",
              "text": " @notice This function is private and called to verify whether the merkle proofs provided for the order hash\n         are correct or verify the order hash if the order is not part of a merkle tree.\n @param merkleTree Merkle tree\n @param orderHash Order hash (can be maker bid hash or maker ask hash)\n @param signature Maker order signature\n @param signer Maker address\n @dev It verifies (1) merkle proof (if necessary) (2) signature is from the expected signer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMerkleProofOrOrderHash",
            "nameLocation": "25503:29:15",
            "parameters": {
              "id": 4446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4439,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "25575:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4497,
                  "src": "25542:43:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$13620_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 4438,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4437,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "25542:12:15",
                        "25555:10:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13620,
                      "src": "25542:23:15"
                    },
                    "referencedDeclaration": 13620,
                    "src": "25542:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$13620_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4441,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "25603:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4497,
                  "src": "25595:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4440,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25595:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4443,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "25637:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4497,
                  "src": "25622:24:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4442,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25622:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4445,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "25664:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4497,
                  "src": "25656:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25656:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25532:144:15"
            },
            "returnParameters": {
              "id": 4447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25690:0:15"
            },
            "scope": 4498,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3322,
              "name": "IOmniXExchange",
              "nameLocations": [
                "4775:14:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11828,
              "src": "4775:14:15"
            },
            "id": 3323,
            "nodeType": "InheritanceSpecifier",
            "src": "4775:14:15"
          },
          {
            "baseName": {
              "id": 3324,
              "name": "TransferSelectorNFT",
              "nameLocations": [
                "4795:19:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6086,
              "src": "4795:19:15"
            },
            "id": 3325,
            "nodeType": "InheritanceSpecifier",
            "src": "4795:19:15"
          },
          {
            "baseName": {
              "id": 3326,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nameLocations": [
                "4820:37:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76914,
              "src": "4820:37:15"
            },
            "id": 3327,
            "nodeType": "InheritanceSpecifier",
            "src": "4820:37:15"
          },
          {
            "baseName": {
              "id": 3328,
              "name": "LowLevelWETH",
              "nameLocations": [
                "4863:12:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76957,
              "src": "4863:12:15"
            },
            "id": 3329,
            "nodeType": "InheritanceSpecifier",
            "src": "4863:12:15"
          },
          {
            "baseName": {
              "id": 3330,
              "name": "LowLevelERC20Transfer",
              "nameLocations": [
                "4881:21:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76845,
              "src": "4881:21:15"
            },
            "id": 3331,
            "nodeType": "InheritanceSpecifier",
            "src": "4881:21:15"
          },
          {
            "baseName": {
              "id": 3332,
              "name": "BatchOrderTypehashRegistry",
              "nameLocations": [
                "4908:26:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1558,
              "src": "4908:26:15"
            },
            "id": 3333,
            "nodeType": "InheritanceSpecifier",
            "src": "4908:26:15"
          }
        ],
        "canonicalName": "OmniXExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3321,
          "nodeType": "StructuredDocumentation",
          "src": "1403:3341:15",
          "text": " @title LooksRareProtocol\n @notice This contract is the core smart contract of the LooksRare protocol (\"v2\").\n         It is the main entry point for users to initiate transactions with taker orders\n         and manage the cancellation of maker orders, which exist off-chain.\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRAR'''''''''''''''''''''''''''''''''''OOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKS:.                                        .;OOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOO,.                                            .,KSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRAREL'                ..',;:LOOKS::;,'..                'RARELOOKSRARELOOKSR\nLOOKSRARELOOKSRAR.              .,:LOOKSRARELOOKSRARELO:,.              .RELOOKSRARELOOKSR\nLOOKSRARELOOKS:.             .;RARELOOKSRARELOOKSRARELOOKSl;.             .:OOKSRARELOOKSR\nLOOKSRARELOO;.            .'OKSRARELOOKSRARELOOKSRARELOOKSRARE'.            .;KSRARELOOKSR\nLOOKSRAREL,.            .,LOOKSRARELOOK:;;:\"\"\"\":;;;lELOOKSRARELO,.            .,RARELOOKSR\nLOOKSRAR.             .;okLOOKSRAREx:.              .;OOKSRARELOOK;.             .RELOOKSR\nLOOKS:.             .:dOOOLOOKSRARE'      .''''..     .OKSRARELOOKSR:.             .LOOKSR\nLOx;.             .cKSRARELOOKSRAR'     'LOOKSRAR'     .KSRARELOOKSRARc..            .OKSR\nL;.             .cxOKSRARELOOKSRAR.    .LOOKS.RARE'     ;kRARELOOKSRARExc.             .;R\nLO'             .;oOKSRARELOOKSRAl.    .LOOKS.RARE.     :kRARELOOKSRAREo;.             'SR\nLOOK;.            .,KSRARELOOKSRAx,     .;LOOKSR;.     .oSRARELOOKSRAo,.            .;OKSR\nLOOKSk:.            .'RARELOOKSRARd;.      ....       'oOOOOOOOOOOxc'.            .:LOOKSR\nLOOKSRARc.             .:dLOOKSRAREko;.            .,lxOOOOOOOOOd:.             .ARELOOKSR\nLOOKSRARELo'             .;oOKSRARELOOxoc;,....,;:ldkOOOOOOOOkd;.             'SRARELOOKSR\nLOOKSRARELOOd,.            .,lSRARELOOKSRARELOOKSRARELOOKSRkl,.            .,OKSRARELOOKSR\nLOOKSRARELOOKSx;.            ..;oxELOOKSRARELOOKSRARELOkxl:..            .:LOOKSRARELOOKSR\nLOOKSRARELOOKSRARc.              .':cOKSRARELOOKSRALOc;'.              .ARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELl'                 ...'',,,,''...                 'SRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOo,.                                          .,OKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSx;.                                      .;xOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLO:.                                  .:SRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKl.                              .lOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRo'.                        .'oWENV2?LOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARd;.                    .;xRELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELO:.                .:kRARELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKl.            .cOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRo'        'oLOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARE,.  .,dRELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\nLOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSRARELOOKSRARELOOKSRLOOKSRARELOOKSRARELOOKSR\n @author LooksRare protocol team (👀,💎)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4498,
          1558,
          76845,
          76957,
          76914,
          6086,
          75819,
          76257,
          3051,
          11288,
          5384,
          1925,
          1425,
          75780,
          76250,
          11149,
          11193,
          12599,
          3288,
          11545,
          3076,
          11828
        ],
        "name": "OmniXExchange",
        "nameLocation": "4754:13:15",
        "scope": 4499,
        "usedErrors": [
          6161,
          6164,
          6170,
          6173,
          6178,
          6184,
          11145,
          11148,
          11273,
          11276,
          11279,
          11282,
          11287,
          11761,
          11764,
          11767,
          11770,
          12589,
          12592,
          12595,
          12598,
          76159,
          76173,
          76187,
          76190,
          76193,
          76198,
          76201,
          76206,
          76216,
          76219,
          76222,
          76225,
          76228,
          76231,
          76256
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 15
}