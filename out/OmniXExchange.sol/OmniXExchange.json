{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChainIdInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreatorFeeBpTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20TransferFromFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthsInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "MerkleProofTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewGasLimitETHTransferTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewProtocolFeeRecipientCannotBeNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingTransferInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorForStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoncesInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotV2Strategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullSignerAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutsideOfTimeRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuoteTypeInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncementNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameDomainSeparator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureEOAInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureERC1271Invalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SignatureLengthInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureParameterSInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "SignatureParameterVInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyHasNoSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "StrategyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyNotUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyProtocolFeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferAlreadyInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongPotentialOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "AffiliatePayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CancelOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InitiateOwnershipRenouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "InitiateOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "MessageFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "name": "NewBidAskNonces",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creatorFeeManager",
          "type": "address"
        }
      ],
      "name": "NewCreatorFeeManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewDomainSeparator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "NewGasLimitETHTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCreatorFeeBp",
          "type": "uint256"
        }
      ],
      "name": "NewMaxCreatorFeeBp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "NewProtocolFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "OrderNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_type",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_minDstGas",
          "type": "uint256"
        }
      ],
      "name": "SetMinDstGas",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "precrime",
          "type": "address"
        }
      ],
      "name": "SetPrecrime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_remoteAddress",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemoteAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "SubsetNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "askUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerAsk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerBid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelOrderNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelSubsetNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorFeeManager",
      "outputs": [
        {
          "internalType": "contract ICreatorFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker[]",
          "name": "takerBids",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker[]",
          "name": "makerAsks",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "makerSignatures",
          "type": "bytes[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree[]",
          "name": "merkleTrees",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAtomic",
          "type": "bool"
        }
      ],
      "name": "executeMultipleTakerBids",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerBid",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        }
      ],
      "name": "getTrustedRemoteAddress",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "proofLength",
          "type": "uint256"
        }
      ],
      "name": "hashBatchOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "batchOrderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "bid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ask",
          "type": "bool"
        }
      ],
      "name": "incrementBidAskNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "initiateOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "isTrustedRemote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lzEndpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCreatorFeeBp",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "minDstGasLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "nonblockingLzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipStatus",
      "outputs": [
        {
          "internalType": "enum IOwnableTwoSteps.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precrime",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "restrictedExecuteTakerBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "protocolFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "retryMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_packetType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_minGas",
          "type": "uint256"
        }
      ],
      "name": "setMinDstGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_precrime",
          "type": "address"
        }
      ],
      "name": "setPrecrime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_remoteAddress",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemoteAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferManager",
      "outputs": [
        {
          "internalType": "contract TransferManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "trustedRemoteLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCreatorFeeManager",
          "type": "address"
        }
      ],
      "name": "updateCreatorFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDomainSeparator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "updateETHGasLimitForTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxCreatorFeeBp",
          "type": "uint16"
        }
      ],
      "name": "updateMaxCreatorFeeBp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "updateProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "newStandardProtocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMinTotalFee",
          "type": "uint16"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBidAskNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userSubsetNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1536:26274:11:-:0;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;1195:16:54;1536:26274:11;;;;;;;;;;;;;;;;;1166:14:54;1536:26274:11;;;1166:14:54;1536:26274:11;;;;;;1195:16:54;1536:26274:11;1033:42:51;;1536:26274:11;722:1:13;1536:26274:11;;;;;;;;;;;;;;;;;;;;;1061:257:13;;;1536:26274:11;1135:2:13;1536:26274:11;;1061:257:13;;;1135:2;1536:26274:11;;;1061:257:13;;1536:26274:11;1200:3:13;1536:26274:11;;1061:257:13;;;-1:-1:-1;;1536:26274:11;;;;1061:257:13;;;1536:26274:11;;;;1061:257:13;;;1536:26274:11;;;;;;;1043:12:13;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:2:13;1536:26274:11;;;;;1135:2:13;1536:26274:11;;;;;1200:3:13;1536:26274:11;;;;;;;;;;;;;1061:257:13;1536:26274:11;;;;1334:57:13;;;1536:26274:11;1568:5:8;1536:26274:11;;;8012:37:8;;;8008:119;;-1:-1:-1;;;;;;1536:26274:11;;;-1:-1:-1;;;1536:26274:11;1568:5:8;1536:26274:11;;;;;;8198:48:8;;1536:26274:11;;8198:48:8;915:11:89;1536:26274:11;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;;;;1263:51:15;;2680:5:11;;1536:26274;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;21905:95;21877:286;;;1536:26274;;;22018:30;1536:26274;;;;22066:21;1536:26274;;;;22105:13;1536:26274;;;;22144:4;1536:26274;;;;21877:286;;;1061:257:13;1536:26274:11;;;21877:286;;1536:26274;;;;;;;;;;;;;;;21854:319;;21836:337;1536:26274;22105:13;22183:23;1536:26274;1061:257:13;3223:12:11;1536:26274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:257:13;1536:26274:11;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;8008:119:8;1536:26274:11;;-1:-1:-1;;;8072:44:8;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1536:26274:11:-:0;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1326:10:51;-1:-1:-1;;;;;1536:26274:11;719:10:116;1302:35:51;1536:26274:11;;;;1412:32:51;1772:62;1412:32;1586:175;1536:26274:11;1412:32:51;;1536:26274:11;;;;1412:19:51;1536:26274:11;;;;;;;1412:32:51;1536:26274:11;:::i;:::-;;;1594:42:51;;;;:70;;;;1536:26274:11;1594:124:51;;;;1536:26274:11;1586:175:51;;:::i;:::-;1536:26274:11;;;:::i;:::-;;;;;:::i;:::-;1772:62:51;;:::i;:::-;1536:26274:11;1594:124:51;1536:26274:11;;;;;;;:::i;:::-;;;;;;1668:22:51;1536:26274:11;;;;;;1694:24:51;1668:50;1594:124;;;:70;1640:24;;;-1:-1:-1;1594:70:51;;;1536:26274:11;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;3966:10:51;-1:-1:-1;;;;;1536:26274:11;;;;3966:35:51;;;;;1536:26274:11;;;;;;;;;;;;;;3966:35:51;;1536:26274:11;;3966:35:51;;1536:26274:11;3966:35:51;;;;;;1536:26274:11;3966:35:51;;1536:26274:11;;;3966:35:51;;;;:::i;:::-;1536:26274:11;;3966:35:51;;;:::i;:::-;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1536:26274:11;;-1:-1:-1;;1536:26274:11;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5285:3405;1536:26274;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;5285:3405;;:::i;1536:26274::-;;;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;4096:10:51;-1:-1:-1;;;;;1536:26274:11;;;;4096:38:51;;;;;1536:26274:11;;;;;;;;;;;;;;4096:38:51;;1536:26274:11;;4096:38:51;;1536:26274:11;4096:38:51;;;;;;;;1536:26274:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;763:7:89;1536:26274:11;774:1:89;1536:26274:11;;;;;763:12:89;759:66;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;763:7:89;1536:26274:11;3541:17;;;1536:26274;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;-1:-1:-1;1536:26274:11;;;3652:17;1536:26274;;;;;;;;3651:28;:54;;;;;1536:26274;3647:109;;;4211:22;3783:15;3922:6;4038:47;3783:15;;;;;;:::i;:::-;1536:26274;;;3828:15;1536:26274;;;;:::i;:::-;3828:15;:::i;:::-;3922:6;;;:::i;:::-;4038:47;:::i;:::-;4211:22;;:::i;:::-;763:7:89;1536:26274:11;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;;;;3647:109;1536:26274;;-1:-1:-1;;;3728:17:11;;1536:26274;;3728:17;3651:54;3683:22;;;3651:54;;;759:66:89;1536:26274:11;;-1:-1:-1;;;798:16:89;;1536:26274:11;;798:16:89;1536:26274:11;;-1:-1:-1;;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;2686:11:10;;2682:65;;2696:1;2773:10;;;;;;1536:26274:11;2937:47:10;1536:26274:11;2937:47:10;1536:26274:11;;2817:10:10;;;;2937:47;;:::i;:::-;;;;1536:26274:11;2762:9:10;2848:4;2817:10;;2696:1;1536:26274:11;2801:51:10;1536:26274:11;2801:15:10;1536:26274:11;;;;;2696:1:10;1536:26274:11;2829:15:10;;;;;;:::i;:::-;1536:26274:11;2696:1:10;1536:26274:11;;2696:1:10;1536:26274:11;2848:4:10;1536:26274:11;;;;;;;;;2801:51:10;1536:26274:11;2762:9:10;;2682:65;1536:26274:11;;-1:-1:-1;;;2720:16:10;;1536:26274:11;;2720:16:10;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;1181:42:7;1536:26274:11;;;;;;:::i;:::-;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;-1:-1:-1;1536:26274:11;;;1127:17:7;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;1181:42:7;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;8012:37:8;;8008:119;;1536:26274:11;;8198:48:8;1536:26274:11;;;;8137:46:8;1536:26274:11;;;8137:46:8;1536:26274:11;;;;;;8198:48:8;1536:26274:11;8008:119:8;1536:26274:11;;-1:-1:-1;;;8072:44:8;;1536:26274:11;;8072:44:8;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;;-1:-1:-1;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;976:61:54;;:::i;:::-;1536:26274:11;;;;;;;;;;;;;;1576:44:54;;1572:111;;1536:26274:11;;;;;:::i;:::-;1697:45:54;1693:97;;1536:26274:11;-1:-1:-1;1536:26274:11;;;-1:-1:-1;;;;1536:26274:11;;;1838:25:54;;;;1536:26274:11;;1693:97:54;-1:-1:-1;;;;;;1536:26274:11;;;1693:97:54;;;1572:111;1536:26274:11;;-1:-1:-1;;;1643:29:54;;1536:26274:11;;1643:29:54;1536:26274:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;:::o;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;9439:4;9417:10;:27;9413:80;;1536:26274;;9523:55;1536:26274;;;9523:55;;:::i;:::-;1536:26274;;;;;;;;;;;;;;;;;9413:80;1536:26274;;-1:-1:-1;;;9467:15:11;;1536:26274;;9467:15;1536:26274;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1536:26274:11;5938:19:51;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;:::i;:::-;;;;;;5987:24:51;1536:26274:11;;;;:::i;:::-;;;;;;6015:22:51;5987:50;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;976:61:54;;:::i;:::-;2060:29;1536:26274:11;;;;;;;;;;;;;2041:48:54;2037:113;;1536:26274:11;;;-1:-1:-1;;;;;;1536:26274:11;;;;;;-1:-1:-1;;;;1536:26274:11;;;;;;;;2220:20:54;;1536:26274:11;;;;2220:20:54;1536:26274:11;2037:113:54;1536:26274:11;;-1:-1:-1;;;2112:27:54;;1536:26274:11;;2112:27:54;1536:26274:11;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;763:7:89;1536:26274:11;774:1:89;1536:26274:11;;;;;763:12:89;759:66;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;763:7:89;1536:26274:11;4548:17;;;1536:26274;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;-1:-1:-1;1536:26274:11;;;4644:17;1536:26274;;;;;;;;4643:28;4639:83;;4846:15;4976:59;1536:26274;5172:22;1536:26274;4752:15;1536:26274;;;;:::i;4752:15::-;4846;;;;;1536:26274;;;;;:::i;:::-;4846:15;:::i;:::-;5013:10;4976:59;;:::i;:::-;5013:10;;5172:22;;:::i;:::-;;;:::i;1536:26274::-;;;;;;;;:::i;:::-;976:61:54;;;;:::i;:::-;4261:10:51;-1:-1:-1;;;;;1536:26274:11;;4261:55:51;;;;;1536:26274:11;;;;;;;;;4261:55:51;;;;;;;;;;1536:26274:11;4261:55:51;;;:::i;:::-;;;;;;;;;;;1536:26274:11;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;1028:33:10;1536:26274:11;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;1536:26274:11;;;2815:26:8;2836:5;2815:26;;2811:85;;2906:36;1536:26274:11;;-1:-1:-1;;;;1536:26274:11;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;2958:38:8;;1536:26274:11;;2958:38:8;1536:26274:11;2811:85:8;1536:26274:11;;-1:-1:-1;;;2864:21:8;;1536:26274:11;;2864:21:8;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;769:48:15;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;900:34:3;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;2773:35:3;1536:26274:11;;;;;;:::i;:::-;976:61:54;;:::i;:::-;1536:26274:11;;;;2723:35:3;1536:26274:11;;;;;;2723:35:3;1536:26274:11;;;;;;2773:35:3;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1536:26274:11;537:49:7;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;976:61:54;;:::i;:::-;1536:26274:11;;;;;;;;;;;;;;3697:108:54;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;;;3878:31:54;;;;1536:26274:11;;3697:108:54;1536:26274:11;;-1:-1:-1;;;3767:27:54;;1536:26274:11;;3767:27:54;1536:26274:11;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;1425:35:8;1536:26274:11;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;11389:19;1536:26274;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1559:4:53;719:10:116;1535:29:53;1536:26274:11;;;;25478:29;1536:26274;25478:29;;;;;;;1536:26274;25478:29;;;;:::i;:::-;1536:26274;1884:1;25530:33;;1884:1;;1536:26274;;25888:7;1536:26274;;;25724:88;1536:26274;;25724:88;;;;:::i;:::-;1536:26274;-1:-1:-1;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;25888:7;:::i;25526:2276::-;1937:1;25926:33;;;;25922:1880;;1536:26274;25922:1880;26344:161;26545:477;26344:161;26545:477;26344:161;;:::i;:::-;1536:26274;26655:16;;;1536:26274;26655:16;;;;-1:-1:-1;26655:16:11;;;;;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;;;;;1536:26274:11;;26705:16;;1536:26274;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;26545:477;;;:::i;:::-;;1536:26274;;;26545:477;;;;;:::i;1536:26274::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;789:36:3;1536:26274:11;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;:37:8;:26274:11;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;2496:25:54;1536:26274:11;;;;;;;;:::i;:::-;2477:44:54;2473:105;;-1:-1:-1;;;;;1536:26274:11;2592:10:54;:28;2588:87;;2685:18;1536:26274:11;;-1:-1:-1;;;;;;1536:26274:11;2592:10:54;1536:26274:11;;;;;;;;;-1:-1:-1;;;;;;1536:26274:11;;;;;;;;2782:20:54;;1536:26274:11;;;;2782:20:54;1536:26274:11;2588:87:54;1536:26274:11;;-1:-1:-1;;;2643:21:54;;1536:26274:11;;2643:21:54;2473:105;1536:26274:11;;-1:-1:-1;;;2544:23:54;;1536:26274:11;;2544:23:54;1536:26274:11;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1536:26274:11;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;:::i;:::-;;-1:-1:-1;1536:26274:11;533:51:51;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;:::i;:::-;2006:11:10;;2002:65;;2016:1;2093:10;;;;;;1536:26274:11;2283:45:10;1536:26274:11;2283:45:10;1536:26274:11;;2136:10:10;;;;2283:45;;:::i;2082:9::-;2136:10;2016:1;1536:26274:11;2121:14:10;1536:26274:11;2121:77:10;1536:26274:11;;;;;;;2016:1:10;1536:26274:11;2148:14:10;;;;;;:::i;:::-;1536:26274:11;2016:1:10;1536:26274:11;;2016:1:10;1536:26274:11;1028:33:10;162:6:1;;;2121:77:10;1536:26274:11;2082:9:10;;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1536:26274:11;1153:49:3;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;1632:43:8;1536:26274:11;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;976:61:54;;:::i;:::-;9956:7:11;1536:26274;9939:13;:24;9956:7;;-1:-1:-1;;;1536:26274:11;;;;;;:::i;:::-;;;;;;21836:337;1536:26274;;;21877:286;;1536:26274;21905:95;1536:26274;;22018:30;1536:26274;;;;22066:21;1536:26274;;;;9939:13;1536:26274;;;;22144:4;1536:26274;;;;;21877:286;;;;;:::i;:::-;1536:26274;21854:319;;21836:337;162:6:1;;21836:337:11;22183:23;9939:13;9956:7;162:6:1;;22183:23:11;10022:20;;;;1536:26274;;9935:177;1536:26274;;-1:-1:-1;;;10080:21:11;;1536:26274;;10080:21;1536:26274;;;;;;;-1:-1:-1;;1536:26274:11;;;;;590:65:51;1536:26274:11;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;1536:26274:11;590:65:51;1536:26274:11;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;590:65:51;1536:26274:11;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1536:26274:11;587:83:53;1536:26274:11;;;-1:-1:-1;1536:26274:11;;;:::i;:::-;;;-1:-1:-1;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;-1:-1:-1;;;;;;1536:26274:11;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;1536:26274:11;;;;;;;2238:32:13;;;:73;;;;;1536:26274:11;2238:99:13;;;;;;1536:26274:11;2234:165:13;;;-1:-1:-1;;;;;;1536:26274:11;;2413:21:13;2409:82;;1536:26274:11;;-1:-1:-1;;;2506:49:13;;1536:26274:11;;;;-1:-1:-1;;;;;1536:26274:11;;2506:49:13;;;;;;;1536:26274:11;-1:-1:-1;2506:49:13;;;1536:26274:11;2505:50:13;;2501:103;;2971:219;1536:26274:11;2971:219:13;1536:26274:11;;;;:::i;:::-;2680:4:13;1536:26274:11;;;;;;2647:308:13;;1536:26274:11;;;;;2647:308:13;;1536:26274:11;;;;;2647:308:13;;1536:26274:11;-1:-1:-1;;;;;;1536:26274:11;;;2647:308:13;;1536:26274:11;;;;;2647:308:13;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;2647:308:13;;1536:26274:11;2614:30:13;2627:16;1536:26274:11;;;2614:12:13;1536:26274:11;;;;;;;2614:30:13;1536:26274:11;:::i;:::-;2627:16:13;1536:26274:11;2996:18:13;;;;;:::i;:::-;2627:16;162:6:1;;2996:18:13;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1536:26274:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;2501:103:13;1536:26274:11;;-1:-1:-1;;;2578:15:13;;1536:26274:11;;2578:15:13;2506:49;;;;1536:26274:11;2506:49:13;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;2409:82;1536:26274:11;;-1:-1:-1;;;2457:23:13;;1536:26274:11;;2457:23:13;2234:165;1536:26274:11;;-1:-1:-1;;;2360:28:13;;1536:26274:11;;2360:28:13;2238:99;2334:3;2315:22;;;2238:99;;;:73;1536:26274:11;;2274:37:13;;-1:-1:-1;2238:73:13;;;;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;661:23:51;1536:26274:11;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;976:61:54;;:::i;:::-;10479:5:11;10454:30;;10450:98;;1536:26274;162:6:1;10619:46:11;162:6:1;10558:45:11;162:6:1;1536:26274:11;;;;;10619:46;1536:26274;10450:98;1536:26274;;-1:-1:-1;;;10507:30:11;;1536:26274;;10507:30;1536:26274;;;;;;;-1:-1:-1;;1536:26274:11;;;;;2271:22;1536:26274;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;:::i;:::-;;-1:-1:-1;1536:26274:11;5074:19:51;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;:::i;:::-;;;5127:16:51;1536:26274:11;;5194:31:51;1536:26274:11;;;;;;;;;;;;;;5194:31:51;:::i;:::-;1536:26274:11;;;;;;;:::i;:::-;;;:::i;:::-;5194:31:51;:::i;1536:26274:11:-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;2381:46:3;1536:26274:11;;;;;;:::i;:::-;976:61:54;;:::i;:::-;2322:44:3;1536:26274:11;;-1:-1:-1;;;;;;1536:26274:11;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;2381:46:3;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1536:26274:11;-1:-1:-1;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;;;1154:60:10;;1536:26274:11;;;;;;;;;;;;;;;;;;;:::i;:::-;976:61:54;;;;:::i;:::-;1536:26274:11;;4821:47:51;;;;;;;1536:26274:11;4821:47:51;;1536:26274:11;;;;4862:4:51;1536:26274:11;;;;;;4821:47:51;1536:26274:11;4821:47:51;;;;;;;:::i;:::-;-1:-1:-1;1536:26274:11;;;;;;4783:19:51;1536:26274:11;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4883:55:51;1536:26274:11;;;;;4883:55:51;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;4883:55:51;;;;;:::i;:::-;;;;1536:26274:11;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4883:55:51;1536:26274:11;;;4883:55:51;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;2187:29;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;1741:19:3;1536:26274:11;;;;;;-1:-1:-1;;;;;1536:26274:11;1727:10:3;:33;1723:95;;162:6:1;1832:30:3;;1828:87;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;1925:14:3;1536:26274:11;;;;;;;;;162:6:1;;;1536:26274:11;;;;;162:6:1;;1536:26274:11;;;;1970:31:3;;1536:26274:11;;162:6:1;;1970:31:3;162:6:1;1828:87:3;1536:26274:11;;-1:-1:-1;;;1885:19:3;;1536:26274:11;;1885:19:3;1723:95;1536:26274:11;;-1:-1:-1;;;1783:24:3;;1536:26274:11;;1783:24:3;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;481:46:51;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;2391:42:8;1536:26274:11;;;;;;:::i;:::-;976:61:54;;:::i;:::-;2316:60:8;1536:26274:11;;-1:-1:-1;;;;;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;2391:42:8;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;5387:22:51;1536:26274:11;;;;;;:::i;:::-;976:61:54;;:::i;:::-;5352:20:51;1536:26274:11;;-1:-1:-1;;;;;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;5387:22:51;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;-1:-1:-1;1536:26274:11;818:48:13;1536:26274:11;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;1536:26274:11;;;;;;;;;;;;;;3073:108:54;;-1:-1:-1;;;;;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;-1:-1:-1;;;1536:26274:11;;;3465:56:54;;;;1536:26274:11;;;3491:10:54;1536:26274:11;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;:::i;:::-;976:61:54;;;;:::i;:::-;3812:10:51;-1:-1:-1;;;;;1536:26274:11;;3812:62:51;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;3812:62:51;;1536:26274:11;;;;;3812:62:51;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3812:62:51;;;;;;;;1536:26274:11;3812:62:51;;1536:26274:11;3812:62:51;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;1536:26274:11;-1:-1:-1;1536:26274:11;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2073:27:53;;;2208:74;2073:48;:27;1536:26274:11;2073:27:53;;1536:26274:11;;;;2073:14:53;1536:26274:11;;;;;;;2073:27:53;1536:26274:11;;:::i;:::-;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;2073:48:53;1536:26274:11;2131:67:53;2139:25;;;2131:67;:::i;:::-;1536:26274:11;;;;;:::i;:::-;;;;;;2216:19:53;:34;2208:74;:::i;:::-;2162:1;2328:27;;;;:48;:27;1536:26274:11;2328:27:53;;1536:26274:11;;;;2073:14:53;1536:26274:11;;;;;;;2328:27:53;1536:26274:11;;:::i;2328:48:53:-;162:6:1;2456:4:53;:69;;;;;1536:26274:11;;;;;;;;;;;2456:69:53;;1536:26274:11;2456:69:53;;;:::i;:::-;;:4;;;:69;;;;;;1536:26274:11;2456:69:53;;1536:26274:11;;;2456:69:53;;;;;;:::i;:::-;;;:::i;:::-;;;;1536:26274:11;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;976:61:54;;:::i;:::-;3800:16:13;1536:26274:11;3786:30:13;;;3782:85;;3881:58;3898:41;:24;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;3898:24:13;1536:26274:11;;;;;;;3898:41:13;1536:26274:11;;;;3881:58:13;1536:26274:11;;;;;3881:58:13;;;:101;;;;;1536:26274:11;3877:167:13;;;;4260:77;4054:24;4260:77;4054:24;:44;:24;;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;4054:24:13;1536:26274:11;;;;;;;;;;;;;;;4054:44:13;4108:71;:24;;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;4108:24:13;1536:26274:11;;;;;;;;;;;;;;;;4108:71:13;4189:55;:24;;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;4189:24:13;1536:26274:11;;;;;;;;;;;;;;;;4189:55:13;1536:26274:11;;4260:77:13;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3881:101:13;1536:26274:11;;3943:39:13;;-1:-1:-1;3881:101:13;;;;3782:85;1536:26274:11;;-1:-1:-1;;;3839:17:13;;1536:26274:11;;3839:17:13;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;4529:53:10;1536:26274:11;;;;;:::i;:::-;;;;;;:::i;:::-;;;4068:12:10;1536:26274:11;4068:12:10;1536:26274:11;;;;;4142:10:10;1536:26274:11;;;;;;;;;;;;;;4058:27:10;;4089:3;1536:26274:11;;4142:10:10;4083:1;4194:37;1536:26274:11;4242:131:10;;;1536:26274:11;4383:131:10;;1536:26274:11;-1:-1:-1;1536:26274:11;;;4142:10:10;1536:26274:11;;;;;;;;;;;;;;;;;;;4529:53:10;1536:26274:11;4383:131:10;4406:32;;;;:::i;:::-;4142:10;;4083:1;4452:28;4142:10;1536:26274:11;;;;;;4125:16:10;1536:26274:11;4125:16:10;1536:26274:11;;;4125:16:10;1536:26274:11;;;4452:28:10;:37;162:6:1;4383:131:10;;;4242;4265:32;;;;;:::i;:::-;4142:10;4125:16;1536:26274:11;;;;;;;;;;162:6:1;;;4142:10:10;4242:131;;1536:26274:11;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;976:61:54;;;:::i;:::-;5535:11:51;;1536:26274:11;;5648:47:51;;1536:26274:11;;;;-1:-1:-1;1536:26274:11;5582:15:51;1536:26274:11;;;5582:41:51;1536:26274:11;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;5582:41:51;162:6:1;1536:26274:11;;5648:47:51;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1536:26274:11;1496:67:10;1536:26274:11;;;-1:-1:-1;1536:26274:11;;;-1:-1:-1;1536:26274:11;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;:::i;:::-;976:61:54;;;;:::i;:::-;-1:-1:-1;1536:26274:11;;;;;;;4563:19:51;1536:26274:11;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4618:36:51;1536:26274:11;;;;4618:36:51;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;4618:36:51;;;;;:::i;1536:26274:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4618:36:51;1536:26274:11;;;4618:36:51;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;3545:68:51;;1536:26274:11;;;;;3545:68:51;;1536:26274:11;;;;;;;3594:4:51;1536:26274:11;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;3545:10:51;-1:-1:-1;;;;;1536:26274:11;3545:68:51;;;;;;;1536:26274:11;-1:-1:-1;3545:68:51;;;1536:26274:11;;;;;;;;;:::i;3545:68:51:-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1536:26274:11;;;;;;;-1:-1:-1;;1536:26274:11;;;;;2357:30;1536:26274;;;;;;;645:202:4;;2040:1;2030:11;;2040:1;;2057:80;786:53;;1536:26274:11;2026:1340:4;;1536:26274:11;;;786:53:4;;;1536:26274:11;;;;;;;;;;;;;;;;;;786:53:4;;1536:26274:11;;786:53:4;;;;;;:::i;:::-;1536:26274:11;776:64:4;;645:202;:::o;2026:1340::-;2168:1;2158:11;;2168:1;;2185:80;786:53;;1536:26274:11;2154:1212:4;2026:1340;;2154:1212;2296:1;2286:11;;2296:1;;2313:80;786:53;;1536:26274:11;2282:1084:4;2026:1340;;2282:1084;2424:1;2414:11;;2424:1;;2441:80;786:53;;1536:26274:11;2410:956:4;2026:1340;;2410:956;2552:1;2542:11;;2552:1;;2569:80;786:53;;1536:26274:11;2538:828:4;2026:1340;;2538:828;2680:1;2670:11;;2680:1;;2697:80;786:53;;1536:26274:11;2666:700:4;2026:1340;;2666:700;2808:1;2798:11;;2808:1;;2825:80;786:53;;1536:26274:11;2794:572:4;2026:1340;;2794:572;2936:1;2926:11;;2936:1;;2953:80;786:53;;1536:26274:11;2922:444:4;2026:1340;;2922:444;3064:1;3054:11;;3064:1;;3081:80;786:53;;1536:26274:11;3050:316:4;2026:1340;;3050:316;3192:2;3182:12;;3192:2;;3210:80;786:53;;1536:26274:11;3178:188:4;2026:1340;;3178:188;1536:26274:11;;-1:-1:-1;;;3328:27:4;;2424:1;3328:27;;1536:26274:11;;;;;;3328:27:4;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;9045:2:45;1536:26274:11;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;-1:-1:-1;1536:26274:11;;;:::o;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;725:160:89:-;;;;;;;;;;763:7;1536:26274:11;774:1:89;1536:26274:11;;;;;763:12:89;759:66;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;763:7:89;1536:26274:11;5671:11;;:127;;;;725:160:89;5654:203:11;;5997:27;;5961:21;;5996:28;5997:27;5961:21;;:12;:21;;:12;:::i;:::-;:21;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;5997:17;1536:26274;;;;;5997:27;;1536:26274;5997:27;1536:26274;;;;;5997:27;5996:28;;1536:26274;5996:28;5992:83;;-1:-1:-1;;6339:2103:11;;;6376:9;;;;;;;;-1:-1:-1;6371:950:11;6387:10;;;;;;6339:2103;;;;;;;;;;8579:22;6339:2103;;;8556:10;8579:22;;:::i;:::-;;;:::i;:::-;763:7:89;1536:26274:11;;-1:-1:-1;;;;1536:26274:11;-1:-1:-1;;;1536:26274:11;;;:::o;6376:9::-;6462:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6556:6;;6552:176;;6376:9;6789:12;;6964:18;6789:12;7125:59;6789:12;;6937:14;6789:12;;1536:26274;6789:12;;;6984:15;6789:12;7099:85;6789:12;;;:::i;:::-;1536:26274;6843:15;1536:26274;;;;:::i;6843:15::-;6937:14;;:::i;:::-;6964:18;;:::i;:::-;6984:15;;;;;;;:::i;:::-;;;:::i;7125:59::-;7099:85;;:::i;:::-;1536:26274;;6376:9;;;;;;;;;;;6552:176;6594:17;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;6594:29;6590:116;;6552:176;;;;;;;;;;;;;6339:2103;7364:9;;;;;;;;7375:10;;;;;;6339:2103;;;;;;;;;8579:22;6339:2103;;;;;7364:9;7450:12;;;;;;;:::i;:::-;7544:6;;7540:176;;7364:9;8019:73;7777:12;;;;;;:::i;:::-;1536:26274;;7972:15;7925:14;1536:26274;7831:15;1536:26274;;;;:::i;7831:15::-;7925:14;;;:::i;:::-;7952:18;;;;;:::i;:::-;7972:15;;;;;;;:::i;:::-;1536:26274;;;;;;;;;8019:73;;;8070:10;;;;8019:73;;;;;:::i;:::-;;:4;-1:-1:-1;8019:4:11;:73;;;;;-1:-1:-1;8019:73:11;;;7364:9;8015:277;;;;7364:9;1536:26274;;;7364:9;;8015:277;8213:43;;1536:26274;8213:43;;;:::i;:::-;8015:277;;;;8019:73;;;;;;;-1:-1:-1;8019:73:11;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;7540:176;7582:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;7582:29;7578:116;;7540:176;;;;5671:127;5765:27;;;;5729:31;;;5699:25;;;5698:63;:95;:100;;5671:127;;1536:26274;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;1536:26274:11;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;10990:2019::-;;;11182:18;;;:::i;:::-;1536:26274;;;:::i;:::-;11178:91;;11296:15;;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;11366:22;;;11389:19;11366:43;11389:19;;;1536:26274;11366:43;;1536:26274;;;;;;;;;;11366:43;1536:26274;-1:-1:-1;;;;;1536:26274:11;;11182:18;1536:26274;;;;;;;;;;;11510:20;;;1536:26274;11473:57;;;;:122;;;10990:2019;11473:215;;;;10990:2019;11452:306;;;12038:10;;11988:61;;;;:::i;:::-;12172:9;;;;;;;;;;;;;;:::i;:::-;12241:19;;;;;;;:::i;:::-;12038:10;;;;12262:23;;;;;:::i;:::-;12316:7;;;:::i;:::-;12434:17;;;;;;;;:::i;:::-;12453:6;;;;;;:::i;:::-;1536:26274;;:::i;:::-;;;;11510:20;12498:186;;1536:26274;;;12498:186;;;1536:26274;12775:17;;;:::i;:::-;12806:19;;;;:::i;:::-;1536:26274;12498:186;1536:26274;12742:19;;;;;1536:26274;12038:10;;12476:449;;;;:::i;:::-;;;;;12498:186;1536:26274;;10990:2019;:::o;11452:306::-;1536:26274;;-1:-1:-1;;;11728:15:11;;;;;11473:215;11616:34;;;;;;:71;;;;11473:215;;;;;;11616:71;11654:33;;;-1:-1:-1;11616:71:11;;;;11473:122;11550:23;;:45;;:23;;1536:26274;;;;;;;;11550:15;1536:26274;;;;;;;11550:23;11574:20;;;1536:26274;;;;;;;;;;11550:45;11473:122;;;11178:91;1536:26274;;-1:-1:-1;;;11240:18:11;;;;;1536:26274;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1536:26274:11;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;:::o;4060:3692:8:-;;;;1536:26274:11;;:::i;:::-;;;;:::i;:::-;4432:23:8;1536:26274:11;4608:18:8;;;;1536:26274:11;4586:20:8;;;1536:26274:11;4608:18:8;:::i;:::-;4642:21;;;1536:26274:11;;4642:26:8;;;4736:18;;;;;1536:26274:11;4736:18:8;4856;4736;;;;1536:26274:11;4836:18:8;4736;4756;4736;;;;:::i;:::-;4756;;;;;;;:::i;:::-;;;;;:::i;:::-;4836;;:::i;:::-;4856;;;;;:::i;:::-;1536:26274:11;;;:::i;:::-;;;;;:::i;:::-;4818:16:8;4910:4;;4818:16;;;1536:26274:11;;7023:159:8;7056:126;4818:16;4638:2321;7111:21;;;;;;:::i;:::-;7056:126;:::i;:::-;1536:26274:11;;;;;;;;;;;;;;;;;7023:159:8;7196:20;;;:::i;:::-;1536:26274:11;;;:::i;:::-;7196:37:8;;7477:10;;-1:-1:-1;;;;;;7365:20:8;;;:::i;:::-;1536:26274:11;7365:34:8;:66;;-1:-1:-1;7365:66:8;;;;7477:10;:::i;7365:66::-;7411:20;;;;:::i;:::-;7365:66;7477:10;:::i;7192:554::-;7648:17;;;;;7711:10;7648:17;;;:::i;4638:2321::-;4949:44;:35;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;4949:44:8;4962:21;;;5849:20;;;:::i;:::-;5905:46;:35;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;5905:35:8;1536:26274:11;;;;;;;5905:46:8;5969:266;;;6288:35;;:50;:35;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;6288:35:8;1536:26274:11;;;;;6288:50:8;6388:44;:35;;1536:26274:11;;2614:12:13;1536:26274:11;;;;;;;6388:35:8;1536:26274:11;;;-1:-1:-1;;;;;;1536:26274:11;;;6388:44:8;1536:26274:11;;6365:92:8;1536:26274:11;6365:92:8;1536:26274:11;;6365:92:8;;;;;;;;;;;;;:::i;:::-;6288:187;;;;;;;:::i;:::-;6498:7;;6494:230;;7023:159;1536:26274:11;;;;;;;6790:55:8;1536:26274:11;6365:92:8;1536:26274:11;7056:126:8;1536:26274:11;;6790:55:8;;;;;;:::i;:::-;6742:103;;;;;;;;;;4638:2321;;6494:230;6615:91;;6365:92;6615:91;;;5969:266;;;;;;;4945:2004;1536:26274:11;;-1:-1:-1;;;6891:43:8;;;;;1536:26274:11;;;;;3328:27:4;1536:26274:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;162:6:1;1536:26274:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;9496:780:8:-;9725:17;1536:26274:11;;;;;9496:780:8;;;9717:26;;-1:-1:-1;;;;;1536:26274:11;;-1:-1:-1;;;;;1536:26274:11;;;9717:26:8;-1:-1:-1;;;;;1536:26274:11;;;;9713:557:8;;9496:780;;;;;;:::o;9713:557::-;9803:64;1536:26274:11;;;;;;;;;;;;;;;;;;;;;9803:64:8;;;;;;:::i;:::-;;;;;;;;;9713:557;1536:26274:11;;;9803:64:8;;;9713:557;9773:94;;;;1536:26274:11;9886:21:8;9882:378;1536:26274:11;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;;9882:378:8;9713:557;;;;;;;9882:378;10045:44;10093:32;10045:44;;:::i;:::-;1536:26274:11;10101:24:8;1536:26274:11;10109:15:8;1536:26274:11;;;;;;;;10101:24:8;10093:32;;:::i;:::-;-1:-1:-1;10041:219:8;9882:378;10041:219;1536:26274:11;;-1:-1:-1;;;10224:21:8;;9803:64;;10224:21;9803:64;;;;;;;1536:26274:11;9803:64:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;10418:1032;;11415:28;10418:1032;;;;1536:26274:11;-1:-1:-1;1536:26274:11;10731:12:8;1536:26274:11;;162:6:1;1536:26274:11;;;;10723:46:8;1536:26274:11;;-1:-1:-1;1536:26274:11;;;;;10723:46:8;;:::i;:::-;1536:26274:11;;;;;;;;10813:18:8;;;10809:596;1536:26274:11;;;;;;;;11042:21:8;1536:26274:11;;;;;;11042:21:8;:::i;:::-;1536:26274:11;;-1:-1:-1;;;;;1536:26274:11;;;;;;10809:596:8;11357:37;11206:80;;;;;;1536:26274:11;8880:54:8;11206:80;-1:-1:-1;1536:26274:11;;;10731:12:8;1536:26274:11;;;;;;;8880:54:8;;:::i;:::-;1536:26274:11;;;;;;;;;;;10809:596:8;8978:56;8974:143;;10809:596;1536:26274:11;;11357:21:8;1536:26274:11;;;;;;;;;11357:21:8;;:::i;:::-;1536:26274:11;;11357:37:8;;:::i;8974:143::-;11357:21;1536:26274:11;;;;;;;;;8974:143:8;;;;;1536:26274:11;;;:::i;:::-;;;;;;:::i;:::-;;;11699:457:8;;11899:251;-1:-1:-1;11899:251:8;;-1:-1:-1;11899:251:8;;;11699:457::o;11899:251::-;;;;;;;1201:1977:9;;-1:-1:-1;1364:1808:9;;;;;;;;;;;;;;;1201:1977;;;:::o;1364:1808::-;-1:-1:-1;;1364:1808:9;;;;;;;;;;;;;;;;;;;;;15258:2232:11;;;;;15496:13;15474:18;;;:::i;:::-;1536:26274;;;:::i;:::-;15474:35;15470:91;;15588:15;;;;;:::i;:::-;15689:22;:43;:22;;1536:26274;;;;;;;;;;;;;;;;15689:22;15712:19;;;1536:26274;;;;;;;;;;15689:43;1536:26274;-1:-1:-1;;;;;1536:26274:11;;11182:18;1536:26274;;;;;;;;;;15496:13;15768:33;1536:26274;15805:20;;;1536:26274;15768:57;;;;:122;;;15258:2232;15768:215;;;;15258:2232;15747:306;;;16283:61;16333:10;16283:61;;;:::i;:::-;15712:19;;;;;;;;;;;;;;;1536:26274;16467:9;;;;;;:::i;:::-;16586:17;;;;;;:::i;:::-;16605:6;;;;;;:::i;:::-;16685:19;;;;;:::i;:::-;16718:23;;;;;;:::i;:::-;1536:26274;-1:-1:-1;;;;;16775:18:11;;;:::i;:::-;1536:26274;16775:32;:62;;16927:186;16775:62;16905:501;16775:62;17223:19;16775:62;16905:501;16775:62;16927:186;16775:62;16872:7;16775:62;;;;;16872:7;:::i;:::-;1536:26274;;:::i;:::-;;;;15712:19;;;1536:26274;15805:20;16927:186;;1536:26274;;;16927:186;;;1536:26274;;16927:186;17147:32;:18;;;:::i;:32::-;:62;;;;;;17256:17;16586;;;17256;:::i;:::-;16685:19;17287;16685;;;17287;:::i;:::-;1536:26274;;;17223:19;;;;1536:26274;16905:501;;;:::i;:::-;;;;1536:26274;;15258:2232;:::o;17147:62::-;17191:18;;;:::i;:::-;17147:62;;;16775;16819:18;;;:::i;:::-;16775:62;16872:7;:::i;15768:215::-;15911:34;;;;;;:71;;;;15768:215;;;;;;15911:71;15949:33;;;-1:-1:-1;15911:71:11;;;;15768:122;15845:23;;:45;;:23;;1536:26274;;;;;;;;11550:15;1536:26274;;;;;;;15845:23;15869:20;;;1536:26274;;;;;;;;;;15845:45;15768:122;;;17884:1635;;;;;18071:27;18067:1446;;17884:1635;;;;;:::o;18067:1446::-;19479:22;;-1:-1:-1;;;;;1536:26274:11;;;;;18114:1209;;18067:1446;-1:-1:-1;;19457:20:11;1536:26274;-1:-1:-1;;;;;1536:26274:11;;-1:-1:-1;19479:22:11;;:::i;:::-;18067:1446;;;;;;18114:1209;1536:26274;18331:24;1536:26274;;18327:982;18114:1209;18327:982;-1:-1:-1;;;;;1536:26274:11;;;;;;1925:14:3;1536:26274:11;;;;;162:6:1;;18414:50:11;;1536:26274;18414:50;;:::i;:::-;1536:26274;18544:28;;18540:751;;18327:982;;18114:1209;;18540:751;1536:26274;19206:62;1536:26274;;;;;19206:62;1536:26274;;;;;;;;18540:751;1536:26274;;;19018:20;19014:161;;18540:751;1536:26274;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;19206:62;;;;18540:751;;;;;;19014:161;19124:23;;;;;;:::i;:::-;19014:161;;1536:26274;;;:::i;:::-;;;19790:357;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;20016:20;1536:26274;20016:20;1536:26274;19991:4;;20016:20;:::i;19911:230::-;811:20:107;;:25;807:77;;1536:26274:11;;-1:-1:-1;;;943:55:107;;;;;;-1:-1:-1;;;;;1536:26274:11;;;943:55:107;;;1536:26274:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;943:55:107;1536:26274:11;;;;943:55:107;1536:26274:11;943:55:107;929:70;;;;;;:::i;:::-;1014:7;;1010:68;;1536:26274:11;;1092:15:107;1088:139;;19911:230:11;;19790:357::o;1088:139:107:-;1128:24;943:55;1128:24;;;1127:25;1128:24;;;;;;:::i;1127:25::-;1123:94;;19790:357:11:o;1123:94:107:-;1536:26274:11;;-1:-1:-1;;;1179:23:107;;943:55;;1179:23;807:77;1536:26274:11;;-1:-1:-1;;;859:14:107;;;;;20620:1029:11;;;;1536:26274;20620:1029;1536:26274;;21229:18;21225:121;;20620:1029;1536:26274;;;21520:21;;21516:127;;20620:1029;;;;:::o;21516:127::-;21615:16;1536:26274;;;;;;;;;;;21615:16;;:::i;21225:121::-;1536:26274;;21321:13;;1536:26274;-1:-1:-1;;;;;1536:26274:11;21321:13;;;:::i;:::-;21225:121;;;22890:278;;;;23095:65;;;;1028:33:10;23095:65:11;;1536:26274;;;;;;-1:-1:-1;1536:26274:11;;;;;-1:-1:-1;1536:26274:11;;-1:-1:-1;1536:26274:11;;;;-1:-1:-1;1536:26274:11;162:6:1;22890:278:11:o;23095:65::-;;;;1536:26274;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;:::o;24565:736::-;;;;;24793:16;;;;;;;;;;:::i;:::-;24831;;;;24827:404;;24565:736;25287:6;;;;;;;:::i;24827:404::-;384:2:1;24867:39:11;;24863:117;;25043:16;;;;;;:::i;:::-;384:2:1;;1465:27:48;;;1547:13;24846:1:11;1542:374:48;1562:10;;;;;;933:41;;;;;24994:156:11;;25287:6;25176:44;;;;:::i;:::-;24827:404;;;;;24994:156;1536:26274;;-1:-1:-1;;;25115:20:11;;;;;1547:13:48;1594:8;;;;;;;;;;;;:::i;:::-;:17;1536:26274:11;;;;:::i;:::-;;;;:::i;:::-;1594:61:48;;1705:8;;;;;:::i;:::-;1536:26274:11;24846:1;2093:119:48;;;1536:26274:11;2093:119:48;24846:1:11;2093:119:48;1590:257;;1536:26274:11;1547:13:48;;;;;;;;;1590:257;1817:8;;;;;:::i;:::-;1536:26274:11;2093:119:48;24846:1:11;2093:119:48;;;1536:26274:11;2093:119:48;24846:1:11;2093:119:48;1590:257;;;24863:117:11;1536:26274;;-1:-1:-1;;;24933:32:11;;;;;1536:26274;;;;;24933:32;23555:485;;23684:7;1536:26274;23695:13;23684:24;23680:354;23695:13;;;23941:14;1536:26274;23868:15;1536:26274;;;;23839:59;;;;1536:26274;;;;;;;;;;;;;;;23839:59;;1536:26274;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;23680:354;1536:26274;;;23829:70;;23941:14;:::i;1536:26274::-;;;:::i;:::-;;;23680:354;1536:26274;;-1:-1:-1;;;24007:16:11;;;;;1536:26274;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1536:26274:11;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;;;-1:-1:-1;;1536:26274:11;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;1702:555:15:-;;;;;1536:26274:11;;;:::i;:::-;1939:39:15;;;-1:-1:-1;1994:15:15;-1:-1:-1;;;;;1536:26274:11;;1994:84:15;;;;;1957:21;1536:26274:11;1994:84:15;1536:26274:11;;;;;;;;;;;;;;1994:84:15;;;;;;:::i;:::-;;;;;;;;;1935:316;1994:84;;1935:316;1702:555::o;1994:84::-;;;;;;:::i;:::-;;;:::i;:::-;;;1935:316;1536:26274:11;;2117:22:15;1536:26274:11;;:::i;:::-;2099:40:15;2095:156;;1935:316;;;;;1702:555::o;2095:156::-;2155:15;-1:-1:-1;;;;;1536:26274:11;;2155:85:15;;;;;1957:21;1536:26274:11;2155:85:15;1536:26274:11;;;;;;;;;;;;;;2155:85:15;;;;;;:::i;:::-;;;;;;;;;2095:156;2155:85;;2095:156;;;;;;;2155:85;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1536:26274:11;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;3643:654:50;;;;;;;;;;;;;;;;1536:26274:11;3643:654:50;1536:26274:11;;;;;:::i;:::-;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;;;;:::i;:::-;3643:654:50;;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;;;3643:654:50;;;1536:26274:11;;3643:654:50;;1536:26274:11;3643:654:50:o;:::-;1536:26274:11;;;;;;3643:654:50;;;;;;;;;;;;;:::o;:::-;;;1536:26274:11;;;;;;;;;;3643:654:50;;;;;;;;;;;1536:26274:11;;;;;;;;3643:654:50;;;;;;1536:26274:11;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;3643:654:50;;;;;;;:::i;4783:1130::-;4979:913;3643:654;;1536:26274:11;;;;:::i;:::-;5131:17:50;;5447:427;5131:17;5013:412;5131:17;;;1536:26274:11;5174:17:50;;;1536:26274:11;5217:16:50;;;1536:26274:11;5259:16:50;;;1536:26274:11;5301:20:50;;;3643:654;1536:26274:11;;;;:::i;:::-;5347:16:50;;;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;5389:14:50;;;1536:26274:11;5389:14:50;;;-1:-1:-1;;;;;1536:26274:11;;5174:17:50;1536:26274:11;5013:412:50;;;;;;:::i;:::-;;;1536:26274:11;;5013:412:50;;;;;;;;:::i;:::-;5483:12;;;1536:26274:11;5483:12:50;;5447:427;;-1:-1:-1;;;;;1536:26274:11;5521:15:50;;;;1536:26274:11;5562:13:50;;;;1536:26274:11;5601:11:50;;;1536:26274:11;5665:13:50;;;;5174:17;1536:26274:11;5648:31:50;;3643:654;5648:31;;;3643:654;;;:::i;:::-;5648:31;;;;;;;;:::i;:::-;1536:26274:11;5638:42:50;;5733:13;;;;;5174:17;1536:26274:11;5716:31:50;;3643:654;5716:31;;;3643:654;;;:::i;:::-;5716:31;;;;;;;;:::i;:::-;1536:26274:11;5706:42:50;;5774:15;5825:26;1536:26274:11;5774:15:50;;;1536:26274:11;;;;;;5825:26:50;;;1536:26274:11;;;;;5815:37:50;5174:17;1536:26274:11;;-1:-1:-1;;;;;1536:26274:11;;;5447:427:50;;;1536:26274:11;;;3643:654:50;;;1536:26274:11;;;;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;;3643:654:50;;1536:26274:11;;;3643:654:50;;;1536:26274:11;3643:654:50;;;1536:26274:11;;;3643:654:50;;;;5447:427;;;;;;;;;:::i;:::-;4979:913;:::i;:::-;1536:26274:11;;;;4952:954:50;;4783:1130::o;1536:26274:11:-;;;;:::o;:::-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1536:26274:11;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;-1:-1:-1;;;1536:26274:11;;;;;;;8865:2712:45;9027:50;9035:12;;;;:::i;:::-;:23;;9027:50;:::i;:::-;9087:63;1536:26274:11;;;9095:33:45;;9087:63;:::i;:::-;9194:2350;;;;;;;-1:-1:-1;9194:2350:45;;;;;;;8865:2712;:::o;9194:2350::-;;;;9045:2;9194:2350;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9194:2350:45;;9045:2;9194:2350;-1:-1:-1;;9194:2350:45;;;;8865:2712::o;9194:2350::-;;;;;;;;;;;;;;;;1536:26274:11;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;826:519:53:-;;;1021:4;:69;;;;1536:26274:11;;-1:-1:-1;;;1021:69:53;;;1536:26274:11;;1021:69:53;;;;;;;;;:::i;:::-;;:4;;;:69;;;;;;826:519;-1:-1:-1;1017:322:53;;1536:26274:11;1271:57:53;1536:26274:11;1271:57:53;1536:26274:11;;;;;1233:19:53;1182:48;:27;1536:26274:11;1182:27:53;;1536:26274:11;;;;2073:14:53;1536:26274:11;;;;;;;1182:27:53;1536:26274:11;;:::i;1182:48:53:-;162:6:1;1536:26274:11;;1271:57:53;;;;;:::i;:::-;;;;826:519::o;1021:69::-;;;;:::i;:::-;;;;1536:26274:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;1937:1::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;1536:26274;;1937:1;1536:26274;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;1937:1;1536:26274;;1937:1;;;1536:26274;;;;;;:::i;:::-;1937:1;;;;;1536:26274;;;;:::i;:::-;1937:1;;;;1536:26274;1937:1;;1536:26274;;;;:::i;:::-;;1937:1;;;;;;;;;:::i;:::-;;;:::o;1536:26274::-;;;:::i;:::-;;;1937:1;;;;;;;;;;;1536:26274;;;:::i;:::-;1937:1;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1937:1:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1536:26274;1937:1;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1536:26274;;;;;;;;;;;;;;;;;;:::i;:::-;1937:1;;;1536:26274;;1937:1;;;1536:26274;;1937:1;;;1536:26274;1937:1;;;;;;;;;;:::i;:::-;;;;;1536:26274;1937:1;;;;:::i;:::-;1536:26274;;1937:1;;;1536:26274;;1937:1;;;1536:26274;1937:1;;;;;;;;:::i;:::-;;;;;;;;;1536:26274;;;:::i;:::-;1937:1;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1937:1:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1536:26274::-;;;;:::o;:::-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1536:26274:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:26274:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;3922:94:54:-;3985:5;1536:26274:11;-1:-1:-1;;;;;1536:26274:11;3971:10:54;:19;3967:42;;3922:94::o;3967:42::-;1536:26274:11;;-1:-1:-1;;;3999:10:54;;;;;1536:26274:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1078:416:90:-;;;;1178:18;;;;1221:34;;;;:::i;:::-;-1:-1:-1;;;;;1536:26274:11;;;;;1221:44:90;1217:57;;1536:26274:11;;-1:-1:-1;;;1294:21:90;;;;;1174:314;1536:26274:11;1350:50:90;1536:26274:11;1350:50:90;1536:26274:11;;;;;;;;;;;;1350:50:90;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1536:26274:11;1350:50:90;;;;;;;1174:314;1200:1;1350:50;;;1174:314;-1:-1:-1;;;;;;;1536:26274:11;1350:73:90;1346:86;;1536:26274:11;;-1:-1:-1;;;1452:25:90;;1350:50;;1452:25;1350:50;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;3167:398;;;1977:2;1967:12;;1977:2;;-1:-1:-1;1995:211:90;;;;-1:-1:-1;1995:211:90;;;;;;;;1963:653;2643:66;2630:79;;2626:145;;1536:26274:11;;;2790:2:90;2785:7;;;:18;;;;1963:653;2781:85;;;1536:26274:11;;;;;;;;;;;3447:24:90;1536:26274:11;;;;;;;;;;;;;;;-1:-1:-1;3447:24:90;;;-1:-1:-1;1536:26274:11;;3447:24:90;;;;;;1963:653;-1:-1:-1;3447:24:90;;-1:-1:-1;;;;;1536:26274:11;;3486:20:90;3482:77;;3167:398::o;3482:77::-;1536:26274:11;;-1:-1:-1;;;3529:19:90;;;;;3447:24;;;:::i;:::-;;;2781:85;1536:26274:11;;-1:-1:-1;;;2826:29:90;;1536:26274:11;;;2826:29:90;;;1536:26274:11;;;3328:27:4;2785:18:90;2801:2;2796:7;;;;2785:18;;;2626:145;1536:26274:11;;-1:-1:-1;;;2732:28:90;;;;;1963:653;2236:2;2226:12;;2236:2;;-1:-1:-1;2254:284:90;;;;;;;;;;;-1:-1:-1;;;;;2254:284:90;;;;;1963:653;;2222:394;2236:2;1536:26274:11;-1:-1:-1;;;2575:30:90;;;;;1536:26274:11;;;;;;3328:27:4;687:465:109;747:399;;;;;;687:465;:::o;747:399::-;;1536:26274:11;;;;;;747:399:109;;;;;;;687:465::o;747:399::-;;;;;;;808:415:110;1096:7;808:415;;;-1:-1:-1;998:84:110;;;;;;;;1096:7;;1536:26274:11;1096:7:110;1092:125;;808:415;;;;:::o;1092:125::-;-1:-1:-1;;;;;1536:26274:11;;1119:38:110;;;;;1536:26274:11;1171:35:110;1536:26274:11;;1171:35:110;1536:26274:11;;;;;;1119:38:110;;;;;;;;;;;;;;1092:125;1119:38;;1092:125;-1:-1:-1;1536:26274:11;;-1:-1:-1;;;1171:35:110;;-1:-1:-1;;;;;1536:26274:11;;;1119:38:110;1171:35;;1536:26274:11;162:6:1;;;1536:26274:11;;;;;;;;;;;162:6:1;;;;;1171:35:110;;;;;;;;;1092:125;1171:35;;1092:125;;;;;;1171:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1119:38;;;;;;:::i;:::-;;;;;;;:::i;:::-;;",
    "linkReferences": {},
    "immutableReferences": {
      "10730": [
        {
          "start": 1461,
          "length": 32
        },
        {
          "start": 1758,
          "length": 32
        },
        {
          "start": 2194,
          "length": 32
        },
        {
          "start": 4180,
          "length": 32
        },
        {
          "start": 9132,
          "length": 32
        },
        {
          "start": 9790,
          "length": 32
        },
        {
          "start": 11714,
          "length": 32
        }
      ],
      "1689": [
        {
          "start": 8875,
          "length": 32
        },
        {
          "start": 18121,
          "length": 32
        }
      ],
      "3972": [
        {
          "start": 4514,
          "length": 32
        },
        {
          "start": 19341,
          "length": 32
        },
        {
          "start": 19496,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": "463357ec",
    "WETH()": "ad5c4648",
    "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": "91be1360",
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOrderNonces(uint256[])": "79ed31d4",
    "cancelOwnershipTransfer()": "23452b9c",
    "cancelSubsetNonces(uint256[])": "134849a6",
    "chainId()": "9a8a0592",
    "confirmOwnershipRenouncement()": "3e567539",
    "confirmOwnershipTransfer()": "7200b829",
    "creatorFeeManager()": "838b8f5c",
    "domainSeparator()": "f698da25",
    "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": "0db2bd1e",
    "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "10e89db4",
    "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "41fb13d0",
    "failedMessages(uint16,bytes,uint256)": "8ee74912",
    "forceResumeReceive(uint16,bytes)": "42d65a8d",
    "getConfig(uint16,uint16,address,uint256)": "f5ecbdbc",
    "getTrustedRemoteAddress(uint16)": "9f38369a",
    "hashBatchOrder(bytes32,uint256)": "86c07642",
    "incrementBidAskNonces(bool,bool)": "d5b010f5",
    "initiateOwnershipRenouncement()": "5b6ac011",
    "initiateOwnershipTransfer(address)": "c0b6f561",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "isTrustedRemote(uint16,bytes)": "3d8b38f6",
    "lzEndpoint()": "b353aaa7",
    "lzReceive(uint16,bytes,uint64,bytes)": "001d3567",
    "maxCreatorFeeBp()": "6e90c014",
    "minDstGasLookup(uint16,uint16)": "8cfd8f5c",
    "nonblockingLzReceive(uint16,bytes,uint64,bytes)": "66ad5c8a",
    "owner()": "8da5cb5b",
    "ownershipStatus()": "2bb5a9e6",
    "potentialOwner()": "7762df25",
    "precrime()": "950c8a74",
    "protocolFeeRecipient()": "64df049e",
    "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": "37e8cc71",
    "retryMessage(uint16,bytes,uint64,bytes)": "d1deba1f",
    "setConfig(uint16,uint16,uint256,bytes)": "cbed8b9c",
    "setMinDstGas(uint16,uint16,uint256)": "df2a5b3b",
    "setPrecrime(address)": "baf3292d",
    "setReceiveVersion(uint16)": "10ddb137",
    "setSendVersion(uint16)": "07e0db17",
    "setTrustedRemote(uint16,bytes)": "eb8d72b7",
    "setTrustedRemoteAddress(uint16,bytes)": "a6c3d165",
    "strategyInfo(uint256)": "bb91c339",
    "transferManager()": "46ea2552",
    "trustedRemoteLookup(uint16)": "7533d788",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCreatorFeeManager(address)": "b647a404",
    "updateCurrencyStatus(address,bool)": "1d3c4268",
    "updateDomainSeparator()": "89ccfe89",
    "updateETHGasLimitForTransfer(uint256)": "974e7c9f",
    "updateMaxCreatorFeeBp(uint16)": "46b625bc",
    "updateProtocolFeeRecipient(address)": "1df47f80",
    "updateStrategy(uint256,bool,uint16,uint16)": "d5a06adf",
    "userBidAskNonces(address)": "a39bf29f",
    "userOrderNonce(address,uint256)": "20cd05c7",
    "userSubsetNonce(address,uint256)": "ea179b76"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChainIdInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatorFeeBpTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20TransferFromFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthsInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"MerkleProofTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewGasLimitETHTransferTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewProtocolFeeRecipientCannotBeNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingTransferInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorForStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoncesInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotV2Strategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullSignerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutsideOfTimeRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteTypeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncementNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameDomainSeparator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureEOAInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureERC1271Invalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SignatureLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureParameterSInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"SignatureParameterVInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasNoSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"StrategyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPotentialOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"affiliateFee\",\"type\":\"uint256\"}],\"name\":\"AffiliatePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"InitiateOwnershipRenouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"InitiateOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"name\":\"NewBidAskNonces\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creatorFeeManager\",\"type\":\"address\"}],\"name\":\"NewCreatorFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewDomainSeparator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"NewGasLimitETHTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCreatorFeeBp\",\"type\":\"uint256\"}],\"name\":\"NewMaxCreatorFeeBp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"OrderNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"SubsetNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"askUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAGIC_VALUE_ORDER_NONCE_EXECUTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelOrderNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelSubsetNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFeeManager\",\"outputs\":[{\"internalType\":\"contract ICreatorFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker[]\",\"name\":\"takerBids\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker[]\",\"name\":\"makerAsks\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"makerSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree[]\",\"name\":\"merkleTrees\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAtomic\",\"type\":\"bool\"}],\"name\":\"executeMultipleTakerBids\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proofLength\",\"type\":\"uint256\"}],\"name\":\"hashBatchOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchOrderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"bid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ask\",\"type\":\"bool\"}],\"name\":\"incrementBidAskNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCreatorFeeBp\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipStatus\",\"outputs\":[{\"internalType\":\"enum IOwnableTwoSteps.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"restrictedExecuteTakerBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferManager\",\"outputs\":[{\"internalType\":\"contract TransferManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCreatorFeeManager\",\"type\":\"address\"}],\"name\":\"updateCreatorFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"updateETHGasLimitForTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxCreatorFeeBp\",\"type\":\"uint16\"}],\"name\":\"updateMaxCreatorFeeBp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"newStandardProtocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMinTotalFee\",\"type\":\"uint16\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBidAskNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSubsetNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"MerkleProofTooLarge(uint256)\":[{\"params\":{\"length\":\"Proof length\"}}],\"NotV2Strategy()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyHasNoSelector()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyNotAvailable(uint256)\":[{\"details\":\"It is returned if there is no implementation address and the strategyId is strictly greater than 0.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"details\":\"It can only be returned for owner operations.\"}]},\"kind\":\"dev\",\"methods\":{\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"details\":\"Strategies have an id that is incremental.      Only callable by owner.\",\"params\":{\"implementation\":\"Implementation address\",\"isMakerBid\":\"Whether the function selector is for maker bid\",\"maxProtocolFeeBp\":\"Maximum protocol fee (in basis point)\",\"minTotalFeeBp\":\"Minimum total fee (in basis point)\",\"selector\":\"Function selector for the strategy\",\"standardProtocolFeeBp\":\"Standard protocol fee (in basis point)\"}},\"cancelOrderNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.\",\"params\":{\"orderNonces\":\"Array of order nonces\"}},\"cancelOwnershipTransfer()\":{\"details\":\"This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership.\"},\"cancelSubsetNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas.\",\"params\":{\"subsetNonces\":\"Array of subset nonces\"}},\"confirmOwnershipTransfer()\":{\"details\":\"This function can only be called by the current potential owner.\"},\"constructor\":{\"params\":{\"_owner\":\"Owner address\",\"_protocolFeeRecipient\":\"Protocol fee recipient address\",\"_transferManager\":\"Transfer manager address\",\"_weth\":\"Wrapped ETH address\"}},\"executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"isAtomic\":\"Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail\",\"makerAsks\":\"Array of maker ask structs\",\"makerSignatures\":\"Array of maker signatures\",\"merkleTrees\":\"Array of merkle tree structs if the signature contains multiple maker orders\",\"takerBids\":\"Array of taker bid structs\"}},\"executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerBid\":\"Maker bid struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerAsk\":\"Taker ask struct\"}},\"executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerAsk\":\"Maker ask struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerBid\":\"Taker bid struct\"}},\"hashBatchOrder(bytes32,uint256)\":{\"params\":{\"proofLength\":\"Merkle proof length\",\"root\":\"Merkle root\"},\"returns\":{\"batchOrderHash\":\"The batch order hash\"}},\"incrementBidAskNonces(bool,bool)\":{\"details\":\"The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.\",\"params\":{\"ask\":\"Whether to increment the user ask nonce\",\"bid\":\"Whether to increment the user bid nonce\"}},\"initiateOwnershipTransfer(address)\":{\"params\":{\"newPotentialOwner\":\"New potential owner address\"}},\"restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)\":{\"details\":\"This function is only callable by this contract. It is used for non-atomic batch order matching.\",\"params\":{\"makerAsk\":\"Maker ask struct\",\"orderHash\":\"Hash of the maker ask order\",\"sender\":\"Sender address (i.e. the initial msg sender)\",\"takerBid\":\"Taker bid struct\"},\"returns\":{\"protocolFeeAmount\":\"Protocol fee amount\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCreatorFeeManager(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newCreatorFeeManager\":\"Address of the creator fee manager\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}},\"updateDomainSeparator()\":{\"details\":\"Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id.\"},\"updateETHGasLimitForTransfer(uint256)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newGasLimitETHTransfer\":\"New gas limit for ETH transfer\"}},\"updateMaxCreatorFeeBp(uint16)\":{\"details\":\"The maximum value that can be set is 25%.      Only callable by owner.\",\"params\":{\"newMaxCreatorFeeBp\":\"New maximum creator fee (in basis point)\"}},\"updateProtocolFeeRecipient(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newProtocolFeeRecipient\":\"New protocol fee recipient address\"}},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the strategy must be active\",\"newMinTotalFee\":\"New minimum total fee (in basis point)\",\"newStandardProtocolFee\":\"New standard protocol fee (in basis point)\",\"strategyId\":\"Strategy id\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerInvalid()\":[{\"notice\":\"It is returned if the function cannot be called by the sender.\"}],\"ChainIdInvalid()\":[{\"notice\":\"It is returned if the domain separator should change.\"}],\"CreatorFeeBpTooHigh()\":[{\"notice\":\"It is returned if the creator fee (in basis point) is too high.\"}],\"CurrencyInvalid()\":[{\"notice\":\"It is returned if the currency is invalid.\"}],\"ERC20TransferFromFail()\":[{\"notice\":\"It is emitted if the ERC20 transferFrom fails.\"}],\"LengthsInvalid()\":[{\"notice\":\"It is returned if there is either a mismatch or an error in the length of the array(s).\"}],\"MerkleProofInvalid()\":[{\"notice\":\"It is returned if the merkle proof provided is invalid.\"}],\"MerkleProofTooLarge(uint256)\":[{\"notice\":\"It is returned if the length of the merkle proof provided is greater than tolerated.\"}],\"NewGasLimitETHTransferTooLow()\":[{\"notice\":\"It is returned if the gas limit for a standard ETH transfer is too low.\"}],\"NewProtocolFeeRecipientCannotBeNullAddress()\":[{\"notice\":\"It is returned if the new protocol fee recipient is set to address(0).\"}],\"NoOngoingTransferInProgress()\":[{\"notice\":\"This is returned when there is no transfer of ownership in progress.\"}],\"NoSelectorForStrategy()\":[{\"notice\":\"It is returned if there is no selector for maker ask/bid for a given strategyId,         depending on the quote type.\"}],\"NoncesInvalid()\":[{\"notice\":\"It is returned if the nonces are invalid.\"}],\"NotAContract()\":[{\"notice\":\"It is emitted if the call recipient is not a contract.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotOwner()\":[{\"notice\":\"This is returned when the caller is not the owner.\"}],\"NotV2Strategy()\":[{\"notice\":\"If the strategy has not set properly its implementation contract.\"}],\"NullSignerAddress()\":[{\"notice\":\"It is emitted if the signer is null.\"}],\"OutsideOfTimeRange()\":[{\"notice\":\"It is returned if the current block timestamp is not between start and end times in the maker order.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"QuoteTypeInvalid()\":[{\"notice\":\"It is returned if the maker quote type is invalid.\"}],\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}],\"RenouncementNotInProgress()\":[{\"notice\":\"This is returned when there is no renouncement in progress but         the owner tries to validate the ownership renouncement.\"}],\"SameDomainSeparator()\":[{\"notice\":\"It is returned if the domain separator cannot be updated (i.e. the chainId is the same).\"}],\"SignatureEOAInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid for an EOA (the address recovered is not the expected one).\"}],\"SignatureERC1271Invalid()\":[{\"notice\":\"It is emitted if the signature is invalid for a ERC1271 contract signer.\"}],\"SignatureLengthInvalid(uint256)\":[{\"notice\":\"It is emitted if the signature's length is neither 64 nor 65 bytes.\"}],\"SignatureParameterSInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid due to S parameter.\"}],\"SignatureParameterVInvalid(uint8)\":[{\"notice\":\"It is emitted if the signature is invalid due to V parameter.\"}],\"StrategyHasNoSelector()\":[{\"notice\":\"It is returned if the strategy has no selector.\"}],\"StrategyNotAvailable(uint256)\":[{\"notice\":\"It is returned if the strategy id has no implementation.\"}],\"StrategyNotUsed()\":[{\"notice\":\"It is returned if the strategyId is invalid.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"notice\":\"It is returned if the strategy's protocol fee is too high.\"}],\"TransferAlreadyInProgress()\":[{\"notice\":\"This is returned when the transfer is already in progress but the owner tries         initiate a new ownership transfer.\"}],\"TransferNotInProgress()\":[{\"notice\":\"This is returned when there is no ownership transfer in progress but the         ownership change tries to be approved.\"}],\"WrongPotentialOwner()\":[{\"notice\":\"This is returned when the ownership transfer is attempted to be validated by the         a caller that is not the potential owner.\"}]},\"events\":{\"AffiliatePayment(address,address,uint256)\":{\"notice\":\"It is emitted when there is an affiliate fee paid.\"},\"CancelOwnershipTransfer()\":{\"notice\":\"This is emitted if the ownership transfer is cancelled.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"InitiateOwnershipRenouncement()\":{\"notice\":\"This is emitted if the ownership renouncement is initiated.\"},\"InitiateOwnershipTransfer(address,address)\":{\"notice\":\"This is emitted if the ownership transfer is initiated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewBidAskNonces(address,uint256,uint256)\":{\"notice\":\"It is emitted when there is an update of the global bid/ask nonces for a user.\"},\"NewCreatorFeeManager(address)\":{\"notice\":\"It is issued when there is a new creator fee manager.\"},\"NewDomainSeparator()\":{\"notice\":\"It is emitted if there is a change in the domain separator.\"},\"NewGasLimitETHTransfer(uint256)\":{\"notice\":\"It is emitted when there is a new gas limit for a ETH transfer (before it is wrapped to WETH).\"},\"NewMaxCreatorFeeBp(uint256)\":{\"notice\":\"It is issued when there is a new maximum creator fee (in basis point).\"},\"NewOwner(address)\":{\"notice\":\"This is emitted when there is a new owner.\"},\"NewProtocolFeeRecipient(address)\":{\"notice\":\"It is issued when there is a new protocol fee recipient address.\"},\"NewStrategy(uint256,uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"It is emitted when a new strategy is added.\"},\"OrderNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when order nonces are cancelled for a user.\"},\"StrategyUpdated(uint256,bool,uint16,uint16)\":{\"notice\":\"It is emitted when an existing strategy is updated.\"},\"SubsetNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when subset nonces are cancelled for a user.\"},\"TakerAsk((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker ask transaction is completed.\"},\"TakerBid((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker bid transaction is completed.\"}},\"kind\":\"user\",\"methods\":{\"MAGIC_VALUE_ORDER_NONCE_EXECUTED()\":{\"notice\":\"Magic value nonce returned if executed (or cancelled).\"},\"WETH()\":{\"notice\":\"Wrapped ETH.\"},\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"This function allows the owner to add a new execution strategy to the protocol.\"},\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOrderNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of order nonces.\"},\"cancelOwnershipTransfer()\":{\"notice\":\"This function is used to cancel the ownership transfer.\"},\"cancelSubsetNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of subset nonces.\"},\"chainId()\":{\"notice\":\"Current chainId.\"},\"confirmOwnershipRenouncement()\":{\"notice\":\"This function is used to confirm the ownership renouncement.\"},\"confirmOwnershipTransfer()\":{\"notice\":\"This function is used to confirm the ownership transfer.\"},\"constructor\":{\"notice\":\"Constructor\"},\"creatorFeeManager()\":{\"notice\":\"Creator fee manager.\"},\"domainSeparator()\":{\"notice\":\"Current domain separator.\"},\"executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"notice\":\"This function allows a user to batch buy with an array of taker bids (against an array of maker asks).\"},\"executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker ask (against a maker bid).\"},\"executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker bid (against a maker ask).\"},\"hashBatchOrder(bytes32,uint256)\":{\"notice\":\"This function returns the hash of the concatenation of batch order type hash and merkle root.\"},\"incrementBidAskNonces(bool,bool)\":{\"notice\":\"This function increments a user's bid/ask nonces.\"},\"initiateOwnershipRenouncement()\":{\"notice\":\"This function is used to initiate the ownership renouncement.\"},\"initiateOwnershipTransfer(address)\":{\"notice\":\"This function is used to initiate the transfer of ownership to a new owner.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"maxCreatorFeeBp()\":{\"notice\":\"Maximum creator fee (in basis point).\"},\"owner()\":{\"notice\":\"Address of the current owner.\"},\"ownershipStatus()\":{\"notice\":\"Ownership status.\"},\"potentialOwner()\":{\"notice\":\"Address of the potential owner.\"},\"protocolFeeRecipient()\":{\"notice\":\"Protocol fee recipient.\"},\"restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)\":{\"notice\":\"This function is used to do a non-atomic matching in the context of a batch taker bid.\"},\"strategyInfo(uint256)\":{\"notice\":\"This returns the strategy information for a strategy id.\"},\"transferManager()\":{\"notice\":\"Transfer manager for ERC721 and ERC1155.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCreatorFeeManager(address)\":{\"notice\":\"This function allows the owner to update the creator fee manager address.\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"},\"updateDomainSeparator()\":{\"notice\":\"This function allows the owner to update the domain separator (if possible).\"},\"updateETHGasLimitForTransfer(uint256)\":{\"notice\":\"This function allows the owner to update the maximum ETH gas limit for a standard transfer.\"},\"updateMaxCreatorFeeBp(uint16)\":{\"notice\":\"This function allows the owner to update the maximum creator fee (in basis point).\"},\"updateProtocolFeeRecipient(address)\":{\"notice\":\"This function allows the owner to update the protocol fee recipient.\"},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"notice\":\"This function allows the owner to update parameters for an existing execution strategy.\"},\"userBidAskNonces(address)\":{\"notice\":\"This tracks the bid and ask nonces for a user address.\"},\"userOrderNonce(address,uint256)\":{\"notice\":\"This checks whether the order nonce for a user was executed or cancelled.\"},\"userSubsetNonce(address,uint256)\":{\"notice\":\"This checks whether the subset nonce for a user was cancelled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/OmniXExchange.sol\":\"OmniXExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5\",\"dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke\"]},\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x523e993d95d2958e25c77a9e5893e6281558ae23b7fbdcfd65fbd252e59e84c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ebe8e2ccc7dfa0a5f72e8d6b956115c323fb982ead23acb870094862b8cdf5a\",\"dweb:/ipfs/QmcRTYKnUQRTMtWv8CD3dPNn9ddjazEUnu8eZNk884xFE4\"]},\"contracts/core/BatchOrderTypehashRegistry.sol\":{\"keccak256\":\"0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2\",\"dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x9faa7b1be507069bda09813f01912e1642ef114ba8d9939f1b21c8831a6569cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd2e5b1d133cfed8fcdc847050fbce6101c847bdae1be62ff4caf8103e87de30\",\"dweb:/ipfs/QmWEGD2QiFswjbT67dPTUGNRtdZQV8bDc9m79RAiEksqs8\"]},\"contracts/core/ExecutionManager.sol\":{\"keccak256\":\"0x952233881b5f0514a8a45ad4a88b8e51912bd4968286a6a584e6c61e63a44e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47f6f5d607b0b7b6616376be562b9b849f9f23ec7085486927c6b2f225d98f1b\",\"dweb:/ipfs/QmdCibeE9LSbzZXMH6fzzTWAQkPKWXLBwXirytFnqMRw12\"]},\"contracts/core/InheritedStrategy.sol\":{\"keccak256\":\"0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860\",\"dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375\",\"dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa\"]},\"contracts/core/OmniXExchange.sol\":{\"keccak256\":\"0x727892acfd2d39fc1de4a5e835fdc481cb4688f42ede35486b9df0eb4eb0a62f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18dbe8e25576107b454e4655893cdd80a527c530da9cc44a832efa0d5e5a6a11\",\"dweb:/ipfs/QmcmyhoBBNmc2JL79YWy62BtztueV8yUUUbTF9sBZT4EsA\"]},\"contracts/core/StrategyManager.sol\":{\"keccak256\":\"0x40407314de830d393b8a323ddde763d5076b5e395f402a9f02d7dbb2d524579d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e5298c9853acece5fd3e6df443598fc2f24b881db51ac7d4ede0abe1d55a88\",\"dweb:/ipfs/QmcHUxdGzwgfVqun4gaeUo3ynQYo5qKXqCKvtQ8oceP9gC\"]},\"contracts/core/TransferManager.sol\":{\"keccak256\":\"0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f\",\"dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r\"]},\"contracts/core/TransferSelectorNFT.sol\":{\"keccak256\":\"0xa73dbd84940748e287c817f5b1770829f50e40c3e97077f66de3ac6eed7b3404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb7638beff6ccb860fe556656a8c5e1b9c0351e7f2f1311be92529040aa535d\",\"dweb:/ipfs/QmSarekTmo6sPcDHPnt4z4NFe8zrsyMBN66i3GXFcWg2U9\"]},\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/errors/SharedErrors.sol\":{\"keccak256\":\"0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9\",\"dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICreatorFeeManager.sol\":{\"keccak256\":\"0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e\",\"dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"contracts/interfaces/IExecutionManager.sol\":{\"keccak256\":\"0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab\",\"dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps\"]},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"keccak256\":\"0x99e841ea21cba851b8356c00db1f42f8b6f51f7c69c9d51c567124530a3cf842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbdb5500c2cb54c39c153dcc7974d8e6eb4cd13c2ec52563ff7b2d0b61aa4b2d\",\"dweb:/ipfs/QmX4ukYKAuZuG3gEQTn8XdpRLXXF9wt8hcBTwXVd1Ly9Hq\"]},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0x8d3744d49cea963aca1774a20e95e4ea157725f8d70eaa8fdf601c4ca28cb99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3ad97a5758dae977499283cfb56d59038f285010c7b8672e13e2ed7cdb5d91c\",\"dweb:/ipfs/QmatHGWtb9mtSj4iZs1PpK8YnK5s9qP9BwTHkYdCqs7nhc\"]},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"keccak256\":\"0xc4a255f5e1c8636ff1f46c97eecfdf583f50d87f53f7dad5451bea4f14fe3132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45216f78e00d4de204e21db3b82eea06f3e1f347964a037cb93351e5c461de03\",\"dweb:/ipfs/Qmb7NMFmkrXsmp42pdaJEJxrctZBvrczmFxjjN52ddVmzP\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443\",\"dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS\"]},\"contracts/interfaces/IOmniXExchange.sol\":{\"keccak256\":\"0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb\",\"dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3\"]},\"contracts/interfaces/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c\",\"dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db\",\"dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD\"]},\"contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817\",\"dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw\"]},\"contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a\",\"dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E\"]},\"contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x880ceabc6474d5cfc5c533800c41bb7a12fd88980b66a1e4849916d214f2d8cd\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://428da4f9eed925935522d7bcf440535d26572880cb9df9c2fdba0bb5a4708b5f\",\"dweb:/ipfs/QmPkyKtuYqP8SdTBYspiqUh5dcJyztnRjA3uZuhv6rUhYk\"]},\"contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol\":{\"keccak256\":\"0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc\",\"dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0x1091e6ca0e5550ed60c6322dc7786fad44f30adecf347d3dadde6bf536b21dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d5d91dd0d336f9211db9fc1b22ace2d0e8ee92c0f776d3c8a2d2f1260db97d7\",\"dweb:/ipfs/QmR2L1L8cmXwe37fjpj8RBKaLaD5AXqk5P2Prnm4ytpVsN\"]},\"contracts/lzApp/exchangeLzApp/ExchangeLzApp.sol\":{\"keccak256\":\"0x4fd71bf649b7277954071e09bce0a1c1883c2c12e1fd26ba1db38cff50c30586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b03c04b61ee7217b90eda43e78a383a3f25398e690c6b02c169185aaf3153240\",\"dweb:/ipfs/QmZPobYmDBfvTUkgkKqY7e1QotvugxWk377KX5sfgMMzCj\"]},\"contracts/lzApp/exchangeLzApp/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]},\"contracts/lzApp/exchangeLzApp/NonBlockingExchangeLzApp.sol\":{\"keccak256\":\"0xf391cf6c7b29e40b3b85e0eac32a0a1e9c0daa04afce0e74f72322815effbe6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb0466e3cfd488e03aee9d464c28e6a92ec4dac0362a97448d622f539b394891\",\"dweb:/ipfs/QmUgcTRC5XL2gBD4aaVpHzmNpy6m1y1aTbEc8CSnwgqLNk\"]},\"contracts/lzApp/exchangeLzApp/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0666abde000717e31c42f675940620276722f910aa7dcdb41f533d631ebac962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d88bda0221d5a60d72b65ef0defb6d090edce619a2936b0059074646ab0a0a8\",\"dweb:/ipfs/QmPBW2ubniUpjhTPoyipeWa6WtsukmdGaqdZvnFXX8JJdj\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":{\"keccak256\":\"0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda\",\"dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd\"]},\"node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol\":{\"keccak256\":\"0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd\",\"dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6\",\"dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol\":{\"keccak256\":\"0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e\",\"dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol\":{\"keccak256\":\"0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e\",\"dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol\":{\"keccak256\":\"0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc\",\"dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol\":{\"keccak256\":\"0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84\",\"dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol\":{\"keccak256\":\"0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04\",\"dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol\":{\"keccak256\":\"0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00\",\"dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol\":{\"keccak256\":\"0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d\",\"dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol\":{\"keccak256\":\"0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26\",\"dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":{\"keccak256\":\"0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1\",\"dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol\":{\"keccak256\":\"0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc\",\"dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol\":{\"keccak256\":\"0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027\",\"dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol\":{\"keccak256\":\"0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114\",\"dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol\":{\"keccak256\":\"0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4\",\"dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":{\"keccak256\":\"0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6\",\"dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_endpoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_transferManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChainIdInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreatorFeeBpTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20TransferFromFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LengthsInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MerkleProofTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewGasLimitETHTransferTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewProtocolFeeRecipientCannotBeNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOngoingTransferInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorForStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoncesInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotV2Strategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullSignerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutsideOfTimeRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QuoteTypeInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncementNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameDomainSeparator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureEOAInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureERC1271Invalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SignatureLengthInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureParameterSInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "SignatureParameterVInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyHasNoSelector"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrategyNotAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyProtocolFeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferAlreadyInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongPotentialOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "affiliateFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AffiliatePayment",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CancelOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "InitiateOwnershipRenouncement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "potentialOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitiateOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBidAskNonces",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creatorFeeManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewCreatorFeeManager",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewDomainSeparator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasLimitETHTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewGasLimitETHTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxCreatorFeeBp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewMaxCreatorFeeBp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFeeRecipient",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_dstChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "_type",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_minDstGas",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMinDstGas",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "precrime",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPrecrime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_path",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTrustedRemote",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_remoteAddress",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTrustedRemoteAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubsetNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "askUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerAsk",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerBid",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrderNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSubsetNonces"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipRenouncement"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creatorFeeManager",
          "outputs": [
            {
              "internalType": "contract ICreatorFeeManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker[]",
              "name": "takerBids",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker[]",
              "name": "makerAsks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "makerSignatures",
              "type": "bytes[]"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree[]",
              "name": "merkleTrees",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAtomic",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeMultipleTakerBids"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeTakerAsk"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeTakerBid"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "failedMessages",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forceResumeReceive"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_chainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_configType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfig",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTrustedRemoteAddress",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "proofLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashBatchOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "batchOrderHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "bid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ask",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementBidAskNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipRenouncement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPotentialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedRemote",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lzEndpoint",
          "outputs": [
            {
              "internalType": "contract ILayerZeroEndpoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lzReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCreatorFeeBp",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minDstGasLookup",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nonblockingLzReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipStatus",
          "outputs": [
            {
              "internalType": "enum IOwnableTwoSteps.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "potentialOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "precrime",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restrictedExecuteTakerBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "protocolFeeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "retryMessage"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_chainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_configType",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_config",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setConfig"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_packetType",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_minGas",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDstGas"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_precrime",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrecrime"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReceiveVersion"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSendVersion"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_path",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedRemote"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_remoteAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedRemoteAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyInfo",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferManager",
          "outputs": [
            {
              "internalType": "contract TransferManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedRemoteLookup",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCreatorFeeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCreatorFeeManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDomainSeparator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newGasLimitETHTransfer",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateETHGasLimitForTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newMaxCreatorFeeBp",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxCreatorFeeBp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newProtocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProtocolFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "newStandardProtocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "newMinTotalFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBidAskNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userOrderNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userSubsetNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "details": "Strategies have an id that is incremental.      Only callable by owner.",
            "params": {
              "implementation": "Implementation address",
              "isMakerBid": "Whether the function selector is for maker bid",
              "maxProtocolFeeBp": "Maximum protocol fee (in basis point)",
              "minTotalFeeBp": "Minimum total fee (in basis point)",
              "selector": "Function selector for the strategy",
              "standardProtocolFeeBp": "Standard protocol fee (in basis point)"
            }
          },
          "cancelOrderNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.",
            "params": {
              "orderNonces": "Array of order nonces"
            }
          },
          "cancelOwnershipTransfer()": {
            "details": "This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership."
          },
          "cancelSubsetNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas.",
            "params": {
              "subsetNonces": "Array of subset nonces"
            }
          },
          "confirmOwnershipTransfer()": {
            "details": "This function can only be called by the current potential owner."
          },
          "constructor": {
            "params": {
              "_owner": "Owner address",
              "_protocolFeeRecipient": "Protocol fee recipient address",
              "_transferManager": "Transfer manager address",
              "_weth": "Wrapped ETH address"
            }
          },
          "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "params": {
              "affiliate": "Affiliate address",
              "isAtomic": "Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail",
              "makerAsks": "Array of maker ask structs",
              "makerSignatures": "Array of maker signatures",
              "merkleTrees": "Array of merkle tree structs if the signature contains multiple maker orders",
              "takerBids": "Array of taker bid structs"
            }
          },
          "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerBid": "Maker bid struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerAsk": "Taker ask struct"
            }
          },
          "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerAsk": "Maker ask struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerBid": "Taker bid struct"
            }
          },
          "hashBatchOrder(bytes32,uint256)": {
            "params": {
              "proofLength": "Merkle proof length",
              "root": "Merkle root"
            },
            "returns": {
              "batchOrderHash": "The batch order hash"
            }
          },
          "incrementBidAskNonces(bool,bool)": {
            "details": "The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.",
            "params": {
              "ask": "Whether to increment the user ask nonce",
              "bid": "Whether to increment the user bid nonce"
            }
          },
          "initiateOwnershipTransfer(address)": {
            "params": {
              "newPotentialOwner": "New potential owner address"
            }
          },
          "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": {
            "details": "This function is only callable by this contract. It is used for non-atomic batch order matching.",
            "params": {
              "makerAsk": "Maker ask struct",
              "orderHash": "Hash of the maker ask order",
              "sender": "Sender address (i.e. the initial msg sender)",
              "takerBid": "Taker bid struct"
            },
            "returns": {
              "protocolFeeAmount": "Protocol fee amount"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCreatorFeeManager(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newCreatorFeeManager": "Address of the creator fee manager"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          },
          "updateDomainSeparator()": {
            "details": "Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "details": "Only callable by owner.",
            "params": {
              "newGasLimitETHTransfer": "New gas limit for ETH transfer"
            }
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "details": "The maximum value that can be set is 25%.      Only callable by owner.",
            "params": {
              "newMaxCreatorFeeBp": "New maximum creator fee (in basis point)"
            }
          },
          "updateProtocolFeeRecipient(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newProtocolFeeRecipient": "New protocol fee recipient address"
            }
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the strategy must be active",
              "newMinTotalFee": "New minimum total fee (in basis point)",
              "newStandardProtocolFee": "New standard protocol fee (in basis point)",
              "strategyId": "Strategy id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": {
            "notice": "Magic value nonce returned if executed (or cancelled)."
          },
          "WETH()": {
            "notice": "Wrapped ETH."
          },
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "notice": "This function allows the owner to add a new execution strategy to the protocol."
          },
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOrderNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of order nonces."
          },
          "cancelOwnershipTransfer()": {
            "notice": "This function is used to cancel the ownership transfer."
          },
          "cancelSubsetNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of subset nonces."
          },
          "chainId()": {
            "notice": "Current chainId."
          },
          "confirmOwnershipRenouncement()": {
            "notice": "This function is used to confirm the ownership renouncement."
          },
          "confirmOwnershipTransfer()": {
            "notice": "This function is used to confirm the ownership transfer."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "creatorFeeManager()": {
            "notice": "Creator fee manager."
          },
          "domainSeparator()": {
            "notice": "Current domain separator."
          },
          "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "notice": "This function allows a user to batch buy with an array of taker bids (against an array of maker asks)."
          },
          "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker ask (against a maker bid)."
          },
          "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker bid (against a maker ask)."
          },
          "hashBatchOrder(bytes32,uint256)": {
            "notice": "This function returns the hash of the concatenation of batch order type hash and merkle root."
          },
          "incrementBidAskNonces(bool,bool)": {
            "notice": "This function increments a user's bid/ask nonces."
          },
          "initiateOwnershipRenouncement()": {
            "notice": "This function is used to initiate the ownership renouncement."
          },
          "initiateOwnershipTransfer(address)": {
            "notice": "This function is used to initiate the transfer of ownership to a new owner."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "maxCreatorFeeBp()": {
            "notice": "Maximum creator fee (in basis point)."
          },
          "owner()": {
            "notice": "Address of the current owner."
          },
          "ownershipStatus()": {
            "notice": "Ownership status."
          },
          "potentialOwner()": {
            "notice": "Address of the potential owner."
          },
          "protocolFeeRecipient()": {
            "notice": "Protocol fee recipient."
          },
          "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": {
            "notice": "This function is used to do a non-atomic matching in the context of a batch taker bid."
          },
          "strategyInfo(uint256)": {
            "notice": "This returns the strategy information for a strategy id."
          },
          "transferManager()": {
            "notice": "Transfer manager for ERC721 and ERC1155."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCreatorFeeManager(address)": {
            "notice": "This function allows the owner to update the creator fee manager address."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          },
          "updateDomainSeparator()": {
            "notice": "This function allows the owner to update the domain separator (if possible)."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "notice": "This function allows the owner to update the maximum ETH gas limit for a standard transfer."
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "notice": "This function allows the owner to update the maximum creator fee (in basis point)."
          },
          "updateProtocolFeeRecipient(address)": {
            "notice": "This function allows the owner to update the protocol fee recipient."
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "notice": "This function allows the owner to update parameters for an existing execution strategy."
          },
          "userBidAskNonces(address)": {
            "notice": "This tracks the bid and ask nonces for a user address."
          },
          "userOrderNonce(address,uint256)": {
            "notice": "This checks whether the order nonce for a user was executed or cancelled."
          },
          "userSubsetNonce(address,uint256)": {
            "notice": "This checks whether the subset nonce for a user was cancelled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/OmniXExchange.sol": "OmniXExchange"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2",
        "urls": [
          "bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5",
          "dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke"
        ],
        "license": "MIT"
      },
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x523e993d95d2958e25c77a9e5893e6281558ae23b7fbdcfd65fbd252e59e84c4",
        "urls": [
          "bzz-raw://4ebe8e2ccc7dfa0a5f72e8d6b956115c323fb982ead23acb870094862b8cdf5a",
          "dweb:/ipfs/QmcRTYKnUQRTMtWv8CD3dPNn9ddjazEUnu8eZNk884xFE4"
        ],
        "license": "MIT"
      },
      "contracts/core/BatchOrderTypehashRegistry.sol": {
        "keccak256": "0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a",
        "urls": [
          "bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2",
          "dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x9faa7b1be507069bda09813f01912e1642ef114ba8d9939f1b21c8831a6569cb",
        "urls": [
          "bzz-raw://fd2e5b1d133cfed8fcdc847050fbce6101c847bdae1be62ff4caf8103e87de30",
          "dweb:/ipfs/QmWEGD2QiFswjbT67dPTUGNRtdZQV8bDc9m79RAiEksqs8"
        ],
        "license": "MIT"
      },
      "contracts/core/ExecutionManager.sol": {
        "keccak256": "0x952233881b5f0514a8a45ad4a88b8e51912bd4968286a6a584e6c61e63a44e87",
        "urls": [
          "bzz-raw://47f6f5d607b0b7b6616376be562b9b849f9f23ec7085486927c6b2f225d98f1b",
          "dweb:/ipfs/QmdCibeE9LSbzZXMH6fzzTWAQkPKWXLBwXirytFnqMRw12"
        ],
        "license": "MIT"
      },
      "contracts/core/InheritedStrategy.sol": {
        "keccak256": "0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38",
        "urls": [
          "bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860",
          "dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d"
        ],
        "license": "MIT"
      },
      "contracts/core/NonceManager.sol": {
        "keccak256": "0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737",
        "urls": [
          "bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375",
          "dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa"
        ],
        "license": "MIT"
      },
      "contracts/core/OmniXExchange.sol": {
        "keccak256": "0x727892acfd2d39fc1de4a5e835fdc481cb4688f42ede35486b9df0eb4eb0a62f",
        "urls": [
          "bzz-raw://18dbe8e25576107b454e4655893cdd80a527c530da9cc44a832efa0d5e5a6a11",
          "dweb:/ipfs/QmcmyhoBBNmc2JL79YWy62BtztueV8yUUUbTF9sBZT4EsA"
        ],
        "license": "MIT"
      },
      "contracts/core/StrategyManager.sol": {
        "keccak256": "0x40407314de830d393b8a323ddde763d5076b5e395f402a9f02d7dbb2d524579d",
        "urls": [
          "bzz-raw://a6e5298c9853acece5fd3e6df443598fc2f24b881db51ac7d4ede0abe1d55a88",
          "dweb:/ipfs/QmcHUxdGzwgfVqun4gaeUo3ynQYo5qKXqCKvtQ8oceP9gC"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferManager.sol": {
        "keccak256": "0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1",
        "urls": [
          "bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f",
          "dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferSelectorNFT.sol": {
        "keccak256": "0xa73dbd84940748e287c817f5b1770829f50e40c3e97077f66de3ac6eed7b3404",
        "urls": [
          "bzz-raw://4cb7638beff6ccb860fe556656a8c5e1b9c0351e7f2f1311be92529040aa535d",
          "dweb:/ipfs/QmSarekTmo6sPcDHPnt4z4NFe8zrsyMBN66i3GXFcWg2U9"
        ],
        "license": "MIT"
      },
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/errors/SharedErrors.sol": {
        "keccak256": "0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf",
        "urls": [
          "bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9",
          "dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICreatorFeeManager.sol": {
        "keccak256": "0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237",
        "urls": [
          "bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e",
          "dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionManager.sol": {
        "keccak256": "0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4",
        "urls": [
          "bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab",
          "dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroEndpoint.sol": {
        "keccak256": "0x99e841ea21cba851b8356c00db1f42f8b6f51f7c69c9d51c567124530a3cf842",
        "urls": [
          "bzz-raw://dbdb5500c2cb54c39c153dcc7974d8e6eb4cd13c2ec52563ff7b2d0b61aa4b2d",
          "dweb:/ipfs/QmX4ukYKAuZuG3gEQTn8XdpRLXXF9wt8hcBTwXVd1Ly9Hq"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroReceiver.sol": {
        "keccak256": "0x8d3744d49cea963aca1774a20e95e4ea157725f8d70eaa8fdf601c4ca28cb99b",
        "urls": [
          "bzz-raw://f3ad97a5758dae977499283cfb56d59038f285010c7b8672e13e2ed7cdb5d91c",
          "dweb:/ipfs/QmatHGWtb9mtSj4iZs1PpK8YnK5s9qP9BwTHkYdCqs7nhc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroUserApplicationConfig.sol": {
        "keccak256": "0xc4a255f5e1c8636ff1f46c97eecfdf583f50d87f53f7dad5451bea4f14fe3132",
        "urls": [
          "bzz-raw://45216f78e00d4de204e21db3b82eea06f3e1f347964a037cb93351e5c461de03",
          "dweb:/ipfs/Qmb7NMFmkrXsmp42pdaJEJxrctZBvrczmFxjjN52ddVmzP"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c",
        "urls": [
          "bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443",
          "dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOmniXExchange.sol": {
        "keccak256": "0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453",
        "urls": [
          "bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb",
          "dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRoyaltyFeeRegistry.sol": {
        "keccak256": "0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6",
        "urls": [
          "bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c",
          "dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f",
        "urls": [
          "bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db",
          "dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9",
        "urls": [
          "bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817",
          "dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITransferManager.sol": {
        "keccak256": "0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50",
        "urls": [
          "bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a",
          "dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E"
        ],
        "license": "MIT"
      },
      "contracts/libraries/BytesLib.sol": {
        "keccak256": "0x880ceabc6474d5cfc5c533800c41bb7a12fd88980b66a1e4849916d214f2d8cd",
        "urls": [
          "bzz-raw://428da4f9eed925935522d7bcf440535d26572880cb9df9c2fdba0bb5a4708b5f",
          "dweb:/ipfs/QmPkyKtuYqP8SdTBYspiqUh5dcJyztnRjA3uZuhv6rUhYk"
        ],
        "license": "Unlicense"
      },
      "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol": {
        "keccak256": "0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620",
        "urls": [
          "bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc",
          "dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0x1091e6ca0e5550ed60c6322dc7786fad44f30adecf347d3dadde6bf536b21dfc",
        "urls": [
          "bzz-raw://3d5d91dd0d336f9211db9fc1b22ace2d0e8ee92c0f776d3c8a2d2f1260db97d7",
          "dweb:/ipfs/QmR2L1L8cmXwe37fjpj8RBKaLaD5AXqk5P2Prnm4ytpVsN"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/ExchangeLzApp.sol": {
        "keccak256": "0x4fd71bf649b7277954071e09bce0a1c1883c2c12e1fd26ba1db38cff50c30586",
        "urls": [
          "bzz-raw://b03c04b61ee7217b90eda43e78a383a3f25398e690c6b02c169185aaf3153240",
          "dweb:/ipfs/QmZPobYmDBfvTUkgkKqY7e1QotvugxWk377KX5sfgMMzCj"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/NonBlockingExchangeLzApp.sol": {
        "keccak256": "0xf391cf6c7b29e40b3b85e0eac32a0a1e9c0daa04afce0e74f72322815effbe6f",
        "urls": [
          "bzz-raw://cb0466e3cfd488e03aee9d464c28e6a92ec4dac0362a97448d622f539b394891",
          "dweb:/ipfs/QmUgcTRC5XL2gBD4aaVpHzmNpy6m1y1aTbEc8CSnwgqLNk"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/OwnableTwoSteps.sol": {
        "keccak256": "0x0666abde000717e31c42f675940620276722f910aa7dcdb41f533d631ebac962",
        "urls": [
          "bzz-raw://7d88bda0221d5a60d72b65ef0defb6d090edce619a2936b0059074646ab0a0a8",
          "dweb:/ipfs/QmPBW2ubniUpjhTPoyipeWa6WtsukmdGaqdZvnFXX8JJdj"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
        "keccak256": "0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc",
        "urls": [
          "bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda",
          "dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol": {
        "keccak256": "0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d",
        "urls": [
          "bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd",
          "dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77",
        "urls": [
          "bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6",
          "dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol": {
        "keccak256": "0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143",
        "urls": [
          "bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e",
          "dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol": {
        "keccak256": "0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2",
        "urls": [
          "bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e",
          "dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol": {
        "keccak256": "0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262",
        "urls": [
          "bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc",
          "dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol": {
        "keccak256": "0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf",
        "urls": [
          "bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84",
          "dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
        "keccak256": "0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46",
        "urls": [
          "bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7",
          "dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol": {
        "keccak256": "0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9",
        "urls": [
          "bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04",
          "dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol": {
        "keccak256": "0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce",
        "urls": [
          "bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00",
          "dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol": {
        "keccak256": "0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05",
        "urls": [
          "bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d",
          "dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol": {
        "keccak256": "0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73",
        "urls": [
          "bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26",
          "dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
        "keccak256": "0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d",
        "urls": [
          "bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1",
          "dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol": {
        "keccak256": "0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c",
        "urls": [
          "bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc",
          "dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol": {
        "keccak256": "0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8",
        "urls": [
          "bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027",
          "dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol": {
        "keccak256": "0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713",
        "urls": [
          "bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114",
          "dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol": {
        "keccak256": "0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c",
        "urls": [
          "bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4",
          "dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
        "keccak256": "0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab",
        "urls": [
          "bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6",
          "dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/OmniXExchange.sol",
    "id": 2994,
    "exportedSymbols": {
      "BatchOrderTypehashRegistry": [
        455
      ],
      "CallerInvalid": [
        4124
      ],
      "CollectionType": [
        4054
      ],
      "CurrencyInvalid": [
        4127
      ],
      "ICurrencyManager": [
        9156
      ],
      "IOmniXExchange": [
        9575
      ],
      "LengthsInvalid": [
        4133
      ],
      "LowLevelERC20Transfer": [
        47352
      ],
      "LowLevelETHReturnETHIfAnyExceptOneWei": [
        47421
      ],
      "LowLevelWETH": [
        47464
      ],
      "MAX_CALLDATA_PROOF_LENGTH": [
        41
      ],
      "MerkleProofCalldataWithNodes": [
        10432
      ],
      "MerkleProofInvalid": [
        4136
      ],
      "MerkleProofTooLarge": [
        4141
      ],
      "ONE_HUNDRED_PERCENT_IN_BP": [
        37
      ],
      "OmniXExchange": [
        2993
      ],
      "OrderStructs": [
        10711
      ],
      "QuoteType": [
        4059
      ],
      "QuoteTypeInvalid": [
        4147
      ],
      "SignatureCheckerCalldata": [
        46485
      ],
      "TransferSelectorNFT": [
        4049
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:27778:11",
    "nodes": [
      {
        "id": 1615,
        "nodeType": "PragmaDirective",
        "src": "32:24:11",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 1617,
        "nodeType": "ImportDirective",
        "src": "95:106:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "file": "@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 46486,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1616,
              "name": "SignatureCheckerCalldata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46485,
              "src": "103:24:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1619,
        "nodeType": "ImportDirective",
        "src": "202:148:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 47422,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1618,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47421,
              "src": "210:37:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1621,
        "nodeType": "ImportDirective",
        "src": "351:98:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 47465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1620,
              "name": "LowLevelWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47464,
              "src": "359:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1623,
        "nodeType": "ImportDirective",
        "src": "450:116:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 47353,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1622,
              "name": "LowLevelERC20Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47352,
              "src": "458:21:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1625,
        "nodeType": "ImportDirective",
        "src": "633:104:11",
        "nodes": [],
        "absolutePath": "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "file": "../libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 10433,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1624,
              "name": "MerkleProofCalldataWithNodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10432,
              "src": "641:28:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1627,
        "nodeType": "ImportDirective",
        "src": "752:59:11",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 10712,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1626,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10711,
              "src": "760:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1629,
        "nodeType": "ImportDirective",
        "src": "827:64:11",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOmniXExchange.sol",
        "file": "../interfaces/IOmniXExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 9576,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1628,
              "name": "IOmniXExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9575,
              "src": "835:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1631,
        "nodeType": "ImportDirective",
        "src": "892:59:11",
        "nodes": [],
        "absolutePath": "contracts/enums/CollectionType.sol",
        "file": "../enums/CollectionType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 4055,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1630,
              "name": "CollectionType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4054,
              "src": "900:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1638,
        "nodeType": "ImportDirective",
        "src": "971:149:11",
        "nodes": [],
        "absolutePath": "contracts/errors/SharedErrors.sol",
        "file": "../errors/SharedErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 4148,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1632,
              "name": "CallerInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4124,
              "src": "979:13:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1633,
              "name": "CurrencyInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4127,
              "src": "994:15:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1634,
              "name": "LengthsInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4133,
              "src": "1011:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1635,
              "name": "MerkleProofInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4136,
              "src": "1027:18:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1636,
              "name": "MerkleProofTooLarge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4141,
              "src": "1047:19:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1637,
              "name": "QuoteTypeInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4147,
              "src": "1068:16:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1640,
        "nodeType": "ImportDirective",
        "src": "1145:62:11",
        "nodes": [],
        "absolutePath": "contracts/core/TransferSelectorNFT.sol",
        "file": "./TransferSelectorNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 4050,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1639,
              "name": "TransferSelectorNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4049,
              "src": "1153:19:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1642,
        "nodeType": "ImportDirective",
        "src": "1208:76:11",
        "nodes": [],
        "absolutePath": "contracts/core/BatchOrderTypehashRegistry.sol",
        "file": "./BatchOrderTypehashRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 456,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1641,
              "name": "BatchOrderTypehashRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 455,
              "src": "1216:26:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1645,
        "nodeType": "ImportDirective",
        "src": "1299:103:11",
        "nodes": [],
        "absolutePath": "contracts/constants/NumericConstants.sol",
        "file": "../constants/NumericConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 42,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1643,
              "name": "MAX_CALLDATA_PROOF_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41,
              "src": "1307:25:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1644,
              "name": "ONE_HUNDRED_PERCENT_IN_BP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37,
              "src": "1334:25:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1647,
        "nodeType": "ImportDirective",
        "src": "1413:49:11",
        "nodes": [],
        "absolutePath": "contracts/enums/QuoteType.sol",
        "file": "../enums/QuoteType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 4060,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1646,
              "name": "QuoteType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4059,
              "src": "1421:9:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1649,
        "nodeType": "ImportDirective",
        "src": "1464:68:11",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICurrencyManager.sol",
        "file": "../interfaces/ICurrencyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2994,
        "sourceUnit": 9157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1648,
              "name": "ICurrencyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9156,
              "src": "1472:16:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2993,
        "nodeType": "ContractDefinition",
        "src": "1536:26274:11",
        "nodes": [
          {
            "id": 1665,
            "nodeType": "UsingForDirective",
            "src": "1732:42:11",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1662,
              "name": "OrderStructs",
              "nameLocations": [
                "1738:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10711,
              "src": "1738:12:11"
            },
            "typeName": {
              "id": 1664,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1663,
                "name": "OrderStructs.Maker",
                "nameLocations": [
                  "1755:12:11",
                  "1768:5:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10580,
                "src": "1755:18:11"
              },
              "referencedDeclaration": 10580,
              "src": "1755:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                "typeString": "struct OrderStructs.Maker"
              }
            }
          },
          {
            "id": 1668,
            "nodeType": "VariableDeclaration",
            "src": "1786:46:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LZ_ADAPTER_VERSION",
            "nameLocation": "1810:18:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 1666,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1786:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1667,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1831:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 1671,
            "nodeType": "VariableDeclaration",
            "src": "1838:47:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LZ_MESSAGE_ORDER_ASK",
            "nameLocation": "1861:20:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1669,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1838:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1884:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 1674,
            "nodeType": "VariableDeclaration",
            "src": "1891:47:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LZ_MESSAGE_ORDER_BID",
            "nameLocation": "1914:20:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1672,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1891:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1673,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1937:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 1677,
            "nodeType": "VariableDeclaration",
            "src": "1944:52:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LZ_MESSAGE_ORDER_ASK_RESP",
            "nameLocation": "1967:25:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1675,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1944:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 1676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1995:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "private"
          },
          {
            "id": 1680,
            "nodeType": "VariableDeclaration",
            "src": "2002:52:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LZ_MESSAGE_ORDER_BID_RESP",
            "nameLocation": "2025:25:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1678,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2002:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 1679,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2053:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "private"
          },
          {
            "id": 1683,
            "nodeType": "VariableDeclaration",
            "src": "2060:34:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "RESP_OK",
            "nameLocation": "2083:7:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1681,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2060:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1682,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2093:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 1686,
            "nodeType": "VariableDeclaration",
            "src": "2100:36:11",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "RESP_FAIL",
            "nameLocation": "2123:9:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1684,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2100:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2135:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 1689,
            "nodeType": "VariableDeclaration",
            "src": "2187:29:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1687,
              "nodeType": "StructuredDocumentation",
              "src": "2143:39:11",
              "text": " @notice Wrapped ETH."
            },
            "functionSelector": "ad5c4648",
            "mutability": "immutable",
            "name": "WETH",
            "nameLocation": "2212:4:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2187:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1692,
            "nodeType": "VariableDeclaration",
            "src": "2271:22:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1690,
              "nodeType": "StructuredDocumentation",
              "src": "2223:43:11",
              "text": " @notice Current chainId."
            },
            "functionSelector": "9a8a0592",
            "mutability": "mutable",
            "name": "chainId",
            "nameLocation": "2286:7:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1691,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2271:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1695,
            "nodeType": "VariableDeclaration",
            "src": "2357:30:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1693,
              "nodeType": "StructuredDocumentation",
              "src": "2300:52:11",
              "text": " @notice Current domain separator."
            },
            "functionSelector": "f698da25",
            "mutability": "mutable",
            "name": "domainSeparator",
            "nameLocation": "2372:15:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1694,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2357:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1699,
            "nodeType": "VariableDeclaration",
            "src": "2641:44:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1696,
              "nodeType": "StructuredDocumentation",
              "src": "2394:242:11",
              "text": " @notice This variable is used as the gas limit for a ETH transfer.\n         If a standard ETH transfer fails within this gas limit, ETH will get wrapped to WETH\n         and transferred to the initial recipient."
            },
            "mutability": "mutable",
            "name": "_gasLimitETHTransfer",
            "nameLocation": "2657:20:11",
            "scope": 2993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1697,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2641:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "325f333030",
              "id": 1698,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2680:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2300_by_1",
                "typeString": "int_const 2300"
              },
              "value": "2_300"
            },
            "visibility": "private"
          },
          {
            "id": 1727,
            "nodeType": "FunctionDefinition",
            "src": "2933:309:11",
            "nodes": [],
            "body": {
              "id": 1726,
              "nodeType": "Block",
              "src": "3179:63:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1719,
                      "name": "_updateDomainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2726,
                      "src": "3189:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:24:11"
                },
                {
                  "expression": {
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1722,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "3223:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1723,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "3230:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3223:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1725,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:12:11"
                }
              ]
            },
            "documentation": {
              "id": 1700,
              "nodeType": "StructuredDocumentation",
              "src": "2692:236:11",
              "text": " @notice Constructor\n @param _owner Owner address\n @param _protocolFeeRecipient Protocol fee recipient address\n @param _transferManager Transfer manager address\n @param _weth Wrapped ETH address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1713,
                    "name": "_endpoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1702,
                    "src": "3119:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1714,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1704,
                    "src": "3130:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1715,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1706,
                    "src": "3138:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1716,
                    "name": "_transferManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1708,
                    "src": "3161:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1717,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1712,
                  "name": "TransferSelectorNFT",
                  "nameLocations": [
                    "3098:19:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4049,
                  "src": "3098:19:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3098:80:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1702,
                  "mutability": "mutable",
                  "name": "_endpoint",
                  "nameLocation": "2962:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "2954:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1704,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2989:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "2981:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "3013:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "3005:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1708,
                  "mutability": "mutable",
                  "name": "_transferManager",
                  "nameLocation": "3052:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "3044:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "3086:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "3078:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2944:153:11"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1800,
            "nodeType": "FunctionDefinition",
            "src": "3248:993:11",
            "nodes": [],
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "3512:729:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1746,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "3530:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "3522:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1745,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3522:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1749,
                  "initialValue": {
                    "expression": {
                      "id": 1747,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "3541:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3550:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10561,
                    "src": "3541:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3522:36:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3651:28:11",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1750,
                          "name": "isCurrencyAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "3652:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1752,
                        "indexExpression": {
                          "id": 1751,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1746,
                          "src": "3670:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3652:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1754,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "3683:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3703:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3695:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3695:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3695:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3683:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3651:54:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1765,
                  "nodeType": "IfStatement",
                  "src": "3647:109:11",
                  "trueBody": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "3707:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1761,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4127,
                            "src": "3728:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3728:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1763,
                        "nodeType": "RevertStatement",
                        "src": "3721:24:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1767,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "3774:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "3766:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3766:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1770,
                  "initialValue": {
                    "expression": {
                      "id": 1768,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "3783:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3792:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10563,
                    "src": "3783:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3766:32:11"
                },
                {
                  "assignments": [
                    1772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1772,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "3816:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "3808:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1771,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3808:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1776,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1773,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "3828:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3837:4:11",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10710,
                      "src": "3828:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10580_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10580_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3828:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3808:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1778,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1738,
                        "src": "3883:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 1779,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "3895:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1780,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1735,
                        "src": "3906:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 1781,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "3922:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1777,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2849,
                      "src": "3853:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10612_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 1782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:76:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1783,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:76:11"
                },
                {
                  "assignments": [
                    1785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1785,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "4013:22:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "4005:30:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1784,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4005:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1791,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1787,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "4055:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 1788,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "4065:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "id": 1789,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "4075:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1786,
                      "name": "_executeTakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2353,
                      "src": "4038:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,bytes32) returns (uint256)"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4005:80:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1793,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "4182:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1794,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "4192:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1795,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "4200:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1796,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1785,
                        "src": "4211:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1792,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2597,
                      "src": "4151:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4151:83:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1798,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:83:11"
                }
              ]
            },
            "baseFunctions": [
              9534
            ],
            "functionSelector": "10e89db4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1742,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3499:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46317,
                  "src": "3499:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3499:12:11"
              }
            ],
            "name": "executeTakerAsk",
            "nameLocation": "3257:15:11",
            "parameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "3310:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "3282:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 1729,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1728,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "3282:12:11",
                        "3295:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10587,
                      "src": "3282:18:11"
                    },
                    "referencedDeclaration": 10587,
                    "src": "3282:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1733,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "3356:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "3328:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 1732,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1731,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "3328:12:11",
                        "3341:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10580,
                      "src": "3328:18:11"
                    },
                    "referencedDeclaration": 10580,
                    "src": "3328:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1735,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "3389:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "3374:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1738,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "3446:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "3413:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 1737,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1736,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "3413:12:11",
                        "3426:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10612,
                      "src": "3413:23:11"
                    },
                    "referencedDeclaration": 10612,
                    "src": "3413:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10612_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "3474:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "3466:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:217:11"
            },
            "returnParameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3512:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1868,
            "nodeType": "FunctionDefinition",
            "src": "4247:1031:11",
            "nodes": [],
            "body": {
              "id": 1867,
              "nodeType": "Block",
              "src": "4519:759:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1819,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "4537:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1867,
                      "src": "4529:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1818,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4529:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1822,
                  "initialValue": {
                    "expression": {
                      "id": 1820,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "4548:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4557:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10561,
                    "src": "4548:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4529:36:11"
                },
                {
                  "condition": {
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4643:28:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1823,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "4644:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1825,
                      "indexExpression": {
                        "id": 1824,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1819,
                        "src": "4662:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4644:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1831,
                  "nodeType": "IfStatement",
                  "src": "4639:83:11",
                  "trueBody": {
                    "id": 1830,
                    "nodeType": "Block",
                    "src": "4673:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1827,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4127,
                            "src": "4694:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4694:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1829,
                        "nodeType": "RevertStatement",
                        "src": "4687:24:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1833,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "4740:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1867,
                      "src": "4732:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1832,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4732:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1837,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1834,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1806,
                        "src": "4752:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4761:4:11",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10710,
                      "src": "4752:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10580_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10580_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4732:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1839,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "4807:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 1840,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1833,
                        "src": "4819:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1841,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1808,
                        "src": "4830:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 1842,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1806,
                          "src": "4846:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4855:6:11",
                        "memberName": "signer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10563,
                        "src": "4846:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1838,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2849,
                      "src": "4777:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10612_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4777:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:85:11"
                },
                {
                  "assignments": [
                    1847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1847,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "4951:22:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1867,
                      "src": "4943:30:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4943:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1855,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1849,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "4993:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 1850,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1806,
                        "src": "5003:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 1851,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5013:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5017:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5013:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1853,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1833,
                        "src": "5025:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1848,
                      "name": "_executeTakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "4976:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4976:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4943:92:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1857,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1819,
                        "src": "5139:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5149:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5153:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5149:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1860,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "5161:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1861,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "5172:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1856,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2597,
                      "src": "5108:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5108:87:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "5108:87:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1864,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47420,
                      "src": "5234:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1866,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:31:11"
                }
              ]
            },
            "baseFunctions": [
              9551
            ],
            "functionSelector": "41fb13d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1816,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1815,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4506:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46317,
                  "src": "4506:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4506:12:11"
              }
            ],
            "name": "executeTakerBid",
            "nameLocation": "4256:15:11",
            "parameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "4309:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "4281:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 1802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1801,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "4281:12:11",
                        "4294:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10587,
                      "src": "4281:18:11"
                    },
                    "referencedDeclaration": 10587,
                    "src": "4281:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "4355:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "4327:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 1805,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1804,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "4327:12:11",
                        "4340:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10580,
                      "src": "4327:18:11"
                    },
                    "referencedDeclaration": 10580,
                    "src": "4327:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "4388:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "4373:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1811,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "4445:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "4412:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 1810,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1809,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "4412:12:11",
                        "4425:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10612,
                      "src": "4412:23:11"
                    },
                    "referencedDeclaration": 10612,
                    "src": "4412:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10612_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "4473:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "4465:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4271:217:11"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4519:0:11"
            },
            "scope": 2993,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2117,
            "nodeType": "FunctionDefinition",
            "src": "5285:3405:11",
            "nodes": [],
            "body": {
              "id": 2116,
              "nodeType": "Block",
              "src": "5601:3089:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1893,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "5619:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2116,
                      "src": "5611:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1892,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5611:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1896,
                  "initialValue": {
                    "expression": {
                      "id": 1894,
                      "name": "takerBids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1872,
                      "src": "5628:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Taker_$10587_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5638:6:11",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5628:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5611:33:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1897,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "5671:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5681:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5671:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1900,
                                    "name": "makerAsks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1876,
                                    "src": "5699:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Maker_$10580_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                    }
                                  },
                                  "id": 1901,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5709:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5699:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 1902,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1893,
                                  "src": "5718:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5699:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1904,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5698:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "|",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1905,
                                    "name": "makerSignatures",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1879,
                                    "src": "5729:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "bytes calldata[] calldata"
                                    }
                                  },
                                  "id": 1906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5745:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5729:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 1907,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1893,
                                  "src": "5754:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5729:31:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1909,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5728:33:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5698:63:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1911,
                                  "name": "merkleTrees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1883,
                                  "src": "5765:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10612_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                  }
                                },
                                "id": 1912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5777:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5765:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "id": 1913,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1893,
                                "src": "5786:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5765:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1915,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5764:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5698:95:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5797:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5698:100:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5671:127:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1924,
                  "nodeType": "IfStatement",
                  "src": "5654:203:11",
                  "trueBody": {
                    "id": 1923,
                    "nodeType": "Block",
                    "src": "5809:48:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1920,
                            "name": "LengthsInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4133,
                            "src": "5830:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5830:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1922,
                        "nodeType": "RevertStatement",
                        "src": "5823:23:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1926,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "5950:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2116,
                      "src": "5942:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5942:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1931,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1927,
                        "name": "makerAsks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1876,
                        "src": "5961:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Maker_$10580_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata[] calldata"
                        }
                      },
                      "id": 1929,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5971:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5961:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5974:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10561,
                    "src": "5961:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5942:40:11"
                },
                {
                  "condition": {
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5996:28:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1932,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "5997:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1934,
                      "indexExpression": {
                        "id": 1933,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1926,
                        "src": "6015:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5997:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1940,
                  "nodeType": "IfStatement",
                  "src": "5992:83:11",
                  "trueBody": {
                    "id": 1939,
                    "nodeType": "Block",
                    "src": "6026:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1936,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4127,
                            "src": "6047:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6047:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1938,
                        "nodeType": "RevertStatement",
                        "src": "6040:24:11"
                      }
                    ]
                  }
                },
                {
                  "id": 2112,
                  "nodeType": "Block",
                  "src": "6085:2528:11",
                  "statements": [
                    {
                      "assignments": [
                        1942
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1942,
                          "mutability": "mutable",
                          "name": "totalProtocolFeeAmount",
                          "nameLocation": "6153:22:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2112,
                          "src": "6145:30:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1941,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6145:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1943,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6145:30:11"
                    },
                    {
                      "condition": {
                        "id": 1944,
                        "name": "isAtomic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "6343:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2102,
                        "nodeType": "Block",
                        "src": "7341:1101:11",
                        "statements": [
                          {
                            "body": {
                              "id": 2100,
                              "nodeType": "Block",
                              "src": "7389:1039:11",
                              "statements": [
                                {
                                  "assignments": [
                                    2029
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2029,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "7439:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2100,
                                      "src": "7411:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 2028,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 2027,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "7411:12:11",
                                            "7424:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10580,
                                          "src": "7411:18:11"
                                        },
                                        "referencedDeclaration": 10580,
                                        "src": "7411:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2033,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 2030,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1876,
                                      "src": "7450:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$10580_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 2032,
                                    "indexExpression": {
                                      "id": 2031,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2020,
                                      "src": "7460:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7450:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7411:51:11"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2036,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2034,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2020,
                                      "src": "7544:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2035,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7549:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7544:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2047,
                                  "nodeType": "IfStatement",
                                  "src": "7540:176:11",
                                  "trueBody": {
                                    "id": 2046,
                                    "nodeType": "Block",
                                    "src": "7552:164:11",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 2040,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 2037,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2029,
                                              "src": "7582:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 2038,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7591:8:11",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10561,
                                            "src": "7582:17:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 2039,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1926,
                                            "src": "7603:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "7582:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2045,
                                        "nodeType": "IfStatement",
                                        "src": "7578:116:11",
                                        "trueBody": {
                                          "id": 2044,
                                          "nodeType": "Block",
                                          "src": "7613:81:11",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 2041,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4127,
                                                  "src": "7650:15:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 2042,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7650:17:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 2043,
                                              "nodeType": "RevertStatement",
                                              "src": "7643:24:11"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    2052
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2052,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "7766:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2100,
                                      "src": "7738:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 2051,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 2050,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "7738:12:11",
                                            "7751:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10587,
                                          "src": "7738:18:11"
                                        },
                                        "referencedDeclaration": 10587,
                                        "src": "7738:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2056,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 2053,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1872,
                                      "src": "7777:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$10587_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 2055,
                                    "indexExpression": {
                                      "id": 2054,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2020,
                                      "src": "7787:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7777:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7738:51:11"
                                },
                                {
                                  "assignments": [
                                    2058
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2058,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "7819:9:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2100,
                                      "src": "7811:17:11",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 2057,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7811:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2062,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2059,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2029,
                                        "src": "7831:8:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 2060,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7840:4:11",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10710,
                                      "src": "7831:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10580_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10580_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 2061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7831:15:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7811:35:11"
                                },
                                {
                                  "id": 2099,
                                  "nodeType": "Block",
                                  "src": "7869:541:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 2064,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1883,
                                              "src": "7925:11:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10612_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 2066,
                                            "indexExpression": {
                                              "id": 2065,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2020,
                                              "src": "7937:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7925:14:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 2067,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2058,
                                            "src": "7941:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 2068,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1879,
                                              "src": "7952:15:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 2070,
                                            "indexExpression": {
                                              "id": 2069,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2020,
                                              "src": "7968:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7952:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 2071,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2029,
                                              "src": "7972:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 2072,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7981:6:11",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10563,
                                            "src": "7972:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2063,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2849,
                                          "src": "7895:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10612_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 2073,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7895:93:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2074,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7895:93:11"
                                    },
                                    {
                                      "clauses": [
                                        {
                                          "block": {
                                            "id": 2090,
                                            "nodeType": "Block",
                                            "src": "8183:100:11",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 2088,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 2086,
                                                    "name": "totalProtocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1942,
                                                    "src": "8213:22:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "+=",
                                                  "rightHandSide": {
                                                    "id": 2087,
                                                    "name": "protocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2084,
                                                    "src": "8239:17:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "8213:43:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2089,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8213:43:11"
                                              }
                                            ]
                                          },
                                          "errorName": "",
                                          "id": 2091,
                                          "nodeType": "TryCatchClause",
                                          "parameters": {
                                            "id": 2085,
                                            "nodeType": "ParameterList",
                                            "parameters": [
                                              {
                                                "constant": false,
                                                "id": 2084,
                                                "mutability": "mutable",
                                                "name": "protocolFeeAmount",
                                                "nameLocation": "8139:17:11",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 2091,
                                                "src": "8131:25:11",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "typeName": {
                                                  "id": 2083,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "8131:7:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "visibility": "internal"
                                              }
                                            ],
                                            "src": "8101:81:11"
                                          },
                                          "src": "8093:190:11"
                                        },
                                        {
                                          "block": {
                                            "id": 2092,
                                            "nodeType": "Block",
                                            "src": "8290:2:11",
                                            "statements": []
                                          },
                                          "errorName": "",
                                          "id": 2093,
                                          "nodeType": "TryCatchClause",
                                          "src": "8284:8:11"
                                        }
                                      ],
                                      "externalCall": {
                                        "arguments": [
                                          {
                                            "id": 2077,
                                            "name": "takerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2052,
                                            "src": "8050:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            }
                                          },
                                          {
                                            "id": 2078,
                                            "name": "makerAsk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2029,
                                            "src": "8060:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 2079,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "8070:3:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 2080,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8074:6:11",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "8070:10:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 2081,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2058,
                                            "src": "8082:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2075,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "8019:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_OmniXExchange_$2993",
                                              "typeString": "contract OmniXExchange"
                                            }
                                          },
                                          "id": 2076,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8024:25:11",
                                          "memberName": "restrictedExecuteTakerBid",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2155,
                                          "src": "8019:30:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Taker_$10587_memory_ptr_$_t_struct$_Maker_$10580_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                            "typeString": "function (struct OrderStructs.Taker memory,struct OrderStructs.Maker memory,address,bytes32) external returns (uint256)"
                                          }
                                        },
                                        "id": 2082,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8019:73:11",
                                        "tryCall": true,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2094,
                                      "nodeType": "TryStatement",
                                      "src": "8015:277:11"
                                    },
                                    {
                                      "id": 2098,
                                      "nodeType": "UncheckedBlock",
                                      "src": "8318:70:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2096,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "8358:3:11",
                                            "subExpression": {
                                              "id": 2095,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2020,
                                              "src": "8360:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2097,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8358:3:11"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2022,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2020,
                                "src": "7375:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2023,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1893,
                                "src": "7379:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7375:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2101,
                            "initializationExpression": {
                              "assignments": [
                                2020
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2020,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "7372:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2101,
                                  "src": "7364:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2019,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7364:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2021,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7364:9:11"
                            },
                            "nodeType": "ForStatement",
                            "src": "7359:1069:11"
                          }
                        ]
                      },
                      "id": 2103,
                      "nodeType": "IfStatement",
                      "src": "6339:2103:11",
                      "trueBody": {
                        "id": 2018,
                        "nodeType": "Block",
                        "src": "6353:982:11",
                        "statements": [
                          {
                            "body": {
                              "id": 2016,
                              "nodeType": "Block",
                              "src": "6401:920:11",
                              "statements": [
                                {
                                  "assignments": [
                                    1955
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1955,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "6451:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2016,
                                      "src": "6423:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 1954,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1953,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "6423:12:11",
                                            "6436:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10580,
                                          "src": "6423:18:11"
                                        },
                                        "referencedDeclaration": 10580,
                                        "src": "6423:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1959,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1956,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1876,
                                      "src": "6462:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$10580_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 1958,
                                    "indexExpression": {
                                      "id": 1957,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1946,
                                      "src": "6472:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6462:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6423:51:11"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1960,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1946,
                                      "src": "6556:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6561:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6556:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1973,
                                  "nodeType": "IfStatement",
                                  "src": "6552:176:11",
                                  "trueBody": {
                                    "id": 1972,
                                    "nodeType": "Block",
                                    "src": "6564:164:11",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 1966,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 1963,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1955,
                                              "src": "6594:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 1964,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6603:8:11",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10561,
                                            "src": "6594:17:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 1965,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1926,
                                            "src": "6615:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "6594:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 1971,
                                        "nodeType": "IfStatement",
                                        "src": "6590:116:11",
                                        "trueBody": {
                                          "id": 1970,
                                          "nodeType": "Block",
                                          "src": "6625:81:11",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 1967,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4127,
                                                  "src": "6662:15:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 1968,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6662:17:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 1969,
                                              "nodeType": "RevertStatement",
                                              "src": "6655:24:11"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    1978
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1978,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "6778:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2016,
                                      "src": "6750:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 1977,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1976,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "6750:12:11",
                                            "6763:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10587,
                                          "src": "6750:18:11"
                                        },
                                        "referencedDeclaration": 10587,
                                        "src": "6750:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1982,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1979,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1872,
                                      "src": "6789:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$10587_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 1981,
                                    "indexExpression": {
                                      "id": 1980,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1946,
                                      "src": "6799:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6789:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6750:51:11"
                                },
                                {
                                  "assignments": [
                                    1984
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1984,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "6831:9:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2016,
                                      "src": "6823:17:11",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 1983,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6823:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1988,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1985,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1955,
                                        "src": "6843:8:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 1986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6852:4:11",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10710,
                                      "src": "6843:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10580_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10580_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 1987,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6843:15:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6823:35:11"
                                },
                                {
                                  "id": 2015,
                                  "nodeType": "Block",
                                  "src": "6881:422:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 1990,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1883,
                                              "src": "6937:11:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10612_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 1992,
                                            "indexExpression": {
                                              "id": 1991,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1946,
                                              "src": "6949:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6937:14:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 1993,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1984,
                                            "src": "6953:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 1994,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1879,
                                              "src": "6964:15:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 1996,
                                            "indexExpression": {
                                              "id": 1995,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1946,
                                              "src": "6980:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6964:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 1997,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1955,
                                              "src": "6984:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 1998,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6993:6:11",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10563,
                                            "src": "6984:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1989,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2849,
                                          "src": "6907:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10612_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 1999,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6907:93:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2000,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6907:93:11"
                                    },
                                    {
                                      "expression": {
                                        "id": 2009,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 2001,
                                          "name": "totalProtocolFeeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1942,
                                          "src": "7099:22:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "id": 2003,
                                              "name": "takerBid",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1978,
                                              "src": "7142:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              }
                                            },
                                            {
                                              "id": 2004,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1955,
                                              "src": "7152:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 2005,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "7162:3:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 2006,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "7166:6:11",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "7162:10:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 2007,
                                              "name": "orderHash",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1984,
                                              "src": "7174:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 2002,
                                            "name": "_executeTakerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2523,
                                            "src": "7125:16:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                              "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                                            }
                                          },
                                          "id": 2008,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7125:59:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7099:85:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2010,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7099:85:11"
                                    },
                                    {
                                      "id": 2014,
                                      "nodeType": "UncheckedBlock",
                                      "src": "7211:70:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2012,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "7251:3:11",
                                            "subExpression": {
                                              "id": 2011,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1946,
                                              "src": "7253:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2013,
                                          "nodeType": "ExpressionStatement",
                                          "src": "7251:3:11"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1948,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1946,
                                "src": "6387:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1949,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1893,
                                "src": "6391:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6387:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2017,
                            "initializationExpression": {
                              "assignments": [
                                1946
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1946,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "6384:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2017,
                                  "src": "6376:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1945,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6376:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1947,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6376:9:11"
                            },
                            "nodeType": "ForStatement",
                            "src": "6371:950:11"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2105,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "8546:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 2106,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8556:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8560:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8556:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2108,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1885,
                            "src": "8568:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2109,
                            "name": "totalProtocolFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "8579:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2104,
                          "name": "_payProtocolFeeAndAffiliateFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2597,
                          "src": "8515:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,address,uint256)"
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8515:87:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2111,
                      "nodeType": "ExpressionStatement",
                      "src": "8515:87:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2113,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47420,
                      "src": "8652:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8652:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "8652:31:11"
                }
              ]
            },
            "baseFunctions": [
              9574
            ],
            "functionSelector": "0db2bd1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1889,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5588:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46317,
                  "src": "5588:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "5588:12:11"
              }
            ],
            "name": "executeMultipleTakerBids",
            "nameLocation": "5294:24:11",
            "parameters": {
              "id": 1888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "takerBids",
                  "nameLocation": "5358:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5328:39:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Taker_$10587_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1870,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1869,
                        "name": "OrderStructs.Taker",
                        "nameLocations": [
                          "5328:12:11",
                          "5341:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10587,
                        "src": "5328:18:11"
                      },
                      "referencedDeclaration": 10587,
                      "src": "5328:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                        "typeString": "struct OrderStructs.Taker"
                      }
                    },
                    "id": 1871,
                    "nodeType": "ArrayTypeName",
                    "src": "5328:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Taker_$10587_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Taker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "makerAsks",
                  "nameLocation": "5407:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5377:39:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Maker_$10580_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1874,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1873,
                        "name": "OrderStructs.Maker",
                        "nameLocations": [
                          "5377:12:11",
                          "5390:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10580,
                        "src": "5377:18:11"
                      },
                      "referencedDeclaration": 10580,
                      "src": "5377:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                        "typeString": "struct OrderStructs.Maker"
                      }
                    },
                    "id": 1875,
                    "nodeType": "ArrayTypeName",
                    "src": "5377:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Maker_$10580_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Maker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1879,
                  "mutability": "mutable",
                  "name": "makerSignatures",
                  "nameLocation": "5443:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5426:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1877,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5426:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1878,
                    "nodeType": "ArrayTypeName",
                    "src": "5426:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "merkleTrees",
                  "nameLocation": "5503:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5468:46:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10612_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1881,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1880,
                        "name": "OrderStructs.MerkleTree",
                        "nameLocations": [
                          "5468:12:11",
                          "5481:10:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10612,
                        "src": "5468:23:11"
                      },
                      "referencedDeclaration": 10612,
                      "src": "5468:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$10612_storage_ptr",
                        "typeString": "struct OrderStructs.MerkleTree"
                      }
                    },
                    "id": 1882,
                    "nodeType": "ArrayTypeName",
                    "src": "5468:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10612_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1885,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "5532:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5524:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1887,
                  "mutability": "mutable",
                  "name": "isAtomic",
                  "nameLocation": "5556:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "5551:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1886,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5551:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5318:252:11"
            },
            "returnParameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5601:0:11"
            },
            "scope": 2993,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2155,
            "nodeType": "FunctionDefinition",
            "src": "9174:411:11",
            "nodes": [],
            "body": {
              "id": 2154,
              "nodeType": "Block",
              "src": "9403:182:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9417:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9421:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9417:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2137,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9439:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OmniXExchange_$2993",
                            "typeString": "contract OmniXExchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OmniXExchange_$2993",
                            "typeString": "contract OmniXExchange"
                          }
                        ],
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9431:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9431:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9431:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9417:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2144,
                  "nodeType": "IfStatement",
                  "src": "9413:80:11",
                  "trueBody": {
                    "id": 2143,
                    "nodeType": "Block",
                    "src": "9446:47:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2140,
                            "name": "CallerInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4124,
                            "src": "9467:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9467:15:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2142,
                        "nodeType": "RevertStatement",
                        "src": "9460:22:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2145,
                      "name": "protocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "9503:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2147,
                          "name": "takerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2121,
                          "src": "9540:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          }
                        },
                        {
                          "id": 2148,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "9550:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        {
                          "id": 2149,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2126,
                          "src": "9560:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2150,
                          "name": "orderHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "9568:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          },
                          {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 2146,
                        "name": "_executeTakerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2523,
                        "src": "9523:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                        }
                      },
                      "id": 2151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9523:55:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9503:75:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2153,
                  "nodeType": "ExpressionStatement",
                  "src": "9503:75:11"
                }
              ]
            },
            "documentation": {
              "id": 2118,
              "nodeType": "StructuredDocumentation",
              "src": "8696:473:11",
              "text": " @notice This function is used to do a non-atomic matching in the context of a batch taker bid.\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param sender Sender address (i.e. the initial msg sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount\n @dev This function is only callable by this contract. It is used for non-atomic batch order matching."
            },
            "functionSelector": "37e8cc71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restrictedExecuteTakerBid",
            "nameLocation": "9183:25:11",
            "parameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "9246:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "9218:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2120,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2119,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "9218:12:11",
                        "9231:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10587,
                      "src": "9218:18:11"
                    },
                    "referencedDeclaration": 10587,
                    "src": "9218:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "9292:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "9264:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2123,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2122,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "9264:12:11",
                        "9277:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10580,
                      "src": "9264:18:11"
                    },
                    "referencedDeclaration": 10580,
                    "src": "9264:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9318:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "9310:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9310:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "9342:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "9334:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9334:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9208:149:11"
            },
            "returnParameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "protocolFeeAmount",
                  "nameLocation": "9384:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "9376:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9376:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9375:27:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2178,
            "nodeType": "FunctionDefinition",
            "src": "9873:245:11",
            "nodes": [],
            "body": {
              "id": 2177,
              "nodeType": "Block",
              "src": "9925:193:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2161,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9939:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9945:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "9939:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2163,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "9956:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9939:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2175,
                    "nodeType": "Block",
                    "src": "10059:53:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2172,
                            "name": "SameDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9511,
                            "src": "10080:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10080:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2174,
                        "nodeType": "RevertStatement",
                        "src": "10073:28:11"
                      }
                    ]
                  },
                  "id": 2176,
                  "nodeType": "IfStatement",
                  "src": "9935:177:11",
                  "trueBody": {
                    "id": 2171,
                    "nodeType": "Block",
                    "src": "9965:88:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2165,
                            "name": "_updateDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2726,
                            "src": "9979:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9979:24:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2167,
                        "nodeType": "ExpressionStatement",
                        "src": "9979:24:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2168,
                            "name": "NewDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9440,
                            "src": "10022:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10022:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2170,
                        "nodeType": "EmitStatement",
                        "src": "10017:25:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2156,
              "nodeType": "StructuredDocumentation",
              "src": "9591:277:11",
              "text": " @notice This function allows the owner to update the domain separator (if possible).\n @dev Only callable by owner. If there is a fork of the network with a new chainId,\n      it allows the owner to reset the domain separator for the new chain id."
            },
            "functionSelector": "89ccfe89",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2158,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9915:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11462,
                  "src": "9915:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9915:9:11"
              }
            ],
            "name": "updateDomainSeparator",
            "nameLocation": "9882:21:11",
            "parameters": {
              "id": 2157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9903:2:11"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9925:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2203,
            "nodeType": "FunctionDefinition",
            "src": "10351:321:11",
            "nodes": [],
            "body": {
              "id": 2202,
              "nodeType": "Block",
              "src": "10440:232:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2186,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2181,
                      "src": "10454:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "325f333030",
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10479:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2300_by_1",
                        "typeString": "int_const 2300"
                      },
                      "value": "2_300"
                    },
                    "src": "10454:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2193,
                  "nodeType": "IfStatement",
                  "src": "10450:98:11",
                  "trueBody": {
                    "id": 2192,
                    "nodeType": "Block",
                    "src": "10486:62:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2189,
                            "name": "NewGasLimitETHTransferTooLow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "10507:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10507:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2191,
                        "nodeType": "RevertStatement",
                        "src": "10500:37:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2194,
                      "name": "_gasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "10558:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2195,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2181,
                      "src": "10581:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10558:45:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2197,
                  "nodeType": "ExpressionStatement",
                  "src": "10558:45:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2199,
                        "name": "newGasLimitETHTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "10642:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2198,
                      "name": "NewGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9445,
                      "src": "10619:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "EmitStatement",
                  "src": "10614:51:11"
                }
              ]
            },
            "documentation": {
              "id": 2179,
              "nodeType": "StructuredDocumentation",
              "src": "10124:222:11",
              "text": " @notice This function allows the owner to update the maximum ETH gas limit for a standard transfer.\n @param newGasLimitETHTransfer New gas limit for ETH transfer\n @dev Only callable by owner."
            },
            "functionSelector": "974e7c9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2183,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10430:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11462,
                  "src": "10430:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "10430:9:11"
              }
            ],
            "name": "updateETHGasLimitForTransfer",
            "nameLocation": "10360:28:11",
            "parameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "mutability": "mutable",
                  "name": "newGasLimitETHTransfer",
                  "nameLocation": "10397:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2203,
                  "src": "10389:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10389:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10388:32:11"
            },
            "returnParameters": {
              "id": 2185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10440:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2353,
            "nodeType": "FunctionDefinition",
            "src": "10990:2019:11",
            "nodes": [],
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "11168:1841:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$4059",
                      "typeString": "enum QuoteType"
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2217,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2210,
                        "src": "11182:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11191:9:11",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10546,
                      "src": "11182:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$4059",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 2219,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "11204:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$4059_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 2220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "11214:3:11",
                      "memberName": "Bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4057,
                      "src": "11204:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$4059",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "11182:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2226,
                  "nodeType": "IfStatement",
                  "src": "11178:91:11",
                  "trueBody": {
                    "id": 2225,
                    "nodeType": "Block",
                    "src": "11219:50:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2222,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4147,
                            "src": "11240:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11240:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "RevertStatement",
                        "src": "11233:25:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2228,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "11287:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11279:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2227,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11279:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2231,
                  "initialValue": {
                    "expression": {
                      "id": 2229,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "11296:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11305:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10563,
                    "src": "11296:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11279:32:11"
                },
                {
                  "id": 2272,
                  "nodeType": "Block",
                  "src": "11321:447:11",
                  "statements": [
                    {
                      "assignments": [
                        2233
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2233,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "11343:20:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2272,
                          "src": "11335:28:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 2232,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11335:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2240,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2234,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "11366:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 2236,
                          "indexExpression": {
                            "id": 2235,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2228,
                            "src": "11381:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11366:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 2239,
                        "indexExpression": {
                          "expression": {
                            "id": 2237,
                            "name": "makerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "11389:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11398:10:11",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10552,
                          "src": "11389:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11366:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11335:74:11"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2241,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "11473:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$9390_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 2243,
                                "indexExpression": {
                                  "id": 2242,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2228,
                                  "src": "11490:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11473:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$9390_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 2244,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11498:8:11",
                              "memberName": "bidNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9387,
                              "src": "11473:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2245,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2210,
                                "src": "11510:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11519:11:11",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10548,
                              "src": "11510:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11473:57:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2248,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "11550:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 2250,
                              "indexExpression": {
                                "id": 2249,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2228,
                                "src": "11566:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11550:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 2253,
                            "indexExpression": {
                              "expression": {
                                "id": 2251,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2210,
                                "src": "11574:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11583:11:11",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10550,
                              "src": "11574:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11550:45:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11473:122:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2255,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2233,
                                  "src": "11616:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2258,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11648:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11640:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 2256,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11640:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11640:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "11616:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2261,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2233,
                                  "src": "11654:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2262,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2212,
                                  "src": "11678:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "11654:33:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11616:71:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2265,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11615:73:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11473:215:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2271,
                      "nodeType": "IfStatement",
                      "src": "11452:306:11",
                      "trueBody": {
                        "id": 2270,
                        "nodeType": "Block",
                        "src": "11703:55:11",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2267,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9517,
                                "src": "11728:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11728:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2269,
                            "nodeType": "RevertStatement",
                            "src": "11721:22:11"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    2277,
                    2280,
                    2284,
                    2288,
                    2290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2277,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "11809:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11792:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2275,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11792:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2276,
                        "nodeType": "ArrayTypeName",
                        "src": "11792:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2280,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11847:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11830:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11830:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2279,
                        "nodeType": "ArrayTypeName",
                        "src": "11830:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2284,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "11886:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11868:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11868:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2283,
                        "length": {
                          "hexValue": "32",
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11876:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "11868:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2288,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "11928:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11910:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11910:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2287,
                        "length": {
                          "hexValue": "33",
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11918:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "11910:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2290,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "11957:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "11952:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2289,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11952:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2292,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "12018:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 2293,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2210,
                        "src": "12028:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 2294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12038:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12042:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12038:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2291,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "11988:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11988:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11778:271:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2299,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "12123:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2300,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "12143:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2301,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12151:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12160:10:11",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10552,
                        "src": "12151:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2303,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "12172:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2298,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "12101:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12101:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "12101:81:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2307,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12241:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12250:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10559,
                        "src": "12241:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2309,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12262:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12271:14:11",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10557,
                        "src": "12262:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$4054",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "expression": {
                          "id": 2311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12287:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12291:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12287:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2313,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "12299:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2314,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "12307:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2315,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "12316:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$4054",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2306,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "12228:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$4054_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12228:96:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "12228:96:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2319,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "12410:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2320,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "12422:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2321,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12434:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12443:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10561,
                        "src": "12434:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2323,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "12453:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2318,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "12371:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12371:89:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2325,
                  "nodeType": "ExpressionStatement",
                  "src": "12371:89:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2328,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2212,
                            "src": "12555:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2329,
                              "name": "makerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2210,
                              "src": "12594:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12603:10:11",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10552,
                            "src": "12594:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2331,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "12651:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2327,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "12498:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$9428_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "12544:9:11",
                          "12582:10:11",
                          "12631:18:11"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "12498:186:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9428_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12698:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12702:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12698:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2335,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "12722:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2336,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12742:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12751:10:11",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10554,
                        "src": "12742:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2338,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12775:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12784:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10561,
                        "src": "12775:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2340,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "12806:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12815:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10559,
                        "src": "12806:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2342,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "12839:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2343,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "12860:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2344,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "12881:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2345,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "12905:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9428_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 2326,
                      "name": "TakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9475,
                      "src": "12476:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$9428_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12476:449:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2347,
                  "nodeType": "EmitStatement",
                  "src": "12471:454:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2348,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "12989:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2350,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13000:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12989:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2216,
                  "id": 2351,
                  "nodeType": "Return",
                  "src": "12982:20:11"
                }
              ]
            },
            "documentation": {
              "id": 2204,
              "nodeType": "StructuredDocumentation",
              "src": "10678:307:11",
              "text": " @notice This function is internal and is used to execute a taker ask (against a maker bid).\n @param takerAsk Taker ask order struct\n @param makerBid Maker bid order struct\n @param orderHash Hash of the maker bid order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerAsk",
            "nameLocation": "10999:16:11",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "11053:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "11025:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2205,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "11025:12:11",
                        "11038:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10587,
                      "src": "11025:18:11"
                    },
                    "referencedDeclaration": 10587,
                    "src": "11025:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2210,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "11099:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "11071:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2209,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2208,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "11071:12:11",
                        "11084:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10580,
                      "src": "11071:18:11"
                    },
                    "referencedDeclaration": 10580,
                    "src": "11071:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "11125:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "11117:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11117:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11015:125:11"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "11159:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11159:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11158:9:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2523,
            "nodeType": "FunctionDefinition",
            "src": "15258:2232:11",
            "nodes": [],
            "body": {
              "id": 2522,
              "nodeType": "Block",
              "src": "15460:2030:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$4059",
                      "typeString": "enum QuoteType"
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2369,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2360,
                        "src": "15474:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15483:9:11",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10546,
                      "src": "15474:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$4059",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 2371,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "15496:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$4059_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "15506:3:11",
                      "memberName": "Ask",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4058,
                      "src": "15496:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$4059",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "15474:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2378,
                  "nodeType": "IfStatement",
                  "src": "15470:91:11",
                  "trueBody": {
                    "id": 2377,
                    "nodeType": "Block",
                    "src": "15511:50:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2374,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4147,
                            "src": "15532:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15532:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2376,
                        "nodeType": "RevertStatement",
                        "src": "15525:25:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2380,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "15579:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "15571:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2379,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15571:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2383,
                  "initialValue": {
                    "expression": {
                      "id": 2381,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2360,
                      "src": "15588:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15597:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10563,
                    "src": "15588:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15571:32:11"
                },
                {
                  "id": 2424,
                  "nodeType": "Block",
                  "src": "15615:448:11",
                  "statements": [
                    {
                      "assignments": [
                        2385
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2385,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "15666:20:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2424,
                          "src": "15658:28:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 2384,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15658:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2392,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2386,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "15689:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 2388,
                          "indexExpression": {
                            "id": 2387,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2380,
                            "src": "15704:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15689:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 2391,
                        "indexExpression": {
                          "expression": {
                            "id": 2389,
                            "name": "makerAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2360,
                            "src": "15712:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15721:10:11",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10552,
                          "src": "15712:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15689:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15658:74:11"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2393,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "15768:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$9390_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 2395,
                                "indexExpression": {
                                  "id": 2394,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2380,
                                  "src": "15785:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15768:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$9390_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 2396,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15793:8:11",
                              "memberName": "askNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9389,
                              "src": "15768:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2397,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2360,
                                "src": "15805:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15814:11:11",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10548,
                              "src": "15805:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15768:57:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2400,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "15845:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 2402,
                              "indexExpression": {
                                "id": 2401,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2380,
                                "src": "15861:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15845:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 2405,
                            "indexExpression": {
                              "expression": {
                                "id": 2403,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2360,
                                "src": "15869:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15878:11:11",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10550,
                              "src": "15869:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15845:45:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15768:122:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2407,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2385,
                                  "src": "15911:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2410,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15943:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15935:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 2408,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15935:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15935:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "15911:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2413,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2385,
                                  "src": "15949:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2414,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2364,
                                  "src": "15973:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "15949:33:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15911:71:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2417,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15910:73:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15768:215:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2423,
                      "nodeType": "IfStatement",
                      "src": "15747:306:11",
                      "trueBody": {
                        "id": 2422,
                        "nodeType": "Block",
                        "src": "15998:55:11",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2419,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9517,
                                "src": "16023:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16023:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2421,
                            "nodeType": "RevertStatement",
                            "src": "16016:22:11"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    2429,
                    2432,
                    2436,
                    2440,
                    2442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2429,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "16104:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "16087:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2427,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16087:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2428,
                        "nodeType": "ArrayTypeName",
                        "src": "16087:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2432,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "16142:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "16125:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16125:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2431,
                        "nodeType": "ArrayTypeName",
                        "src": "16125:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2436,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "16181:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "16163:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16163:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2435,
                        "length": {
                          "hexValue": "32",
                          "id": 2434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16171:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "16163:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2440,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "16223:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "16205:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16205:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2439,
                        "length": {
                          "hexValue": "33",
                          "id": 2438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16213:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "16205:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2442,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "16252:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2522,
                      "src": "16247:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16247:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2449,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2444,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "16313:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 2445,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2360,
                        "src": "16323:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 2446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16333:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16337:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16333:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2443,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "16283:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10587_calldata_ptr_$_t_struct$_Maker_$10580_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16283:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16073:271:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2451,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2442,
                        "src": "16418:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2452,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "16438:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2453,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "16446:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16455:10:11",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10552,
                        "src": "16446:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2455,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "16467:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2450,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "16396:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16396:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "16396:81:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2459,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "16562:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2460,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "16574:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2461,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "16586:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16595:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10561,
                        "src": "16586:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2463,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "16605:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2458,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "16523:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16523:89:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "16523:89:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2467,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "16685:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16694:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10559,
                        "src": "16685:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2469,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "16718:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16727:14:11",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10557,
                        "src": "16718:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$4054",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "id": 2471,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "16755:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2472,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2357,
                              "src": "16775:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16784:9:11",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10582,
                            "src": "16775:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16805:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16797:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2474,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16797:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16797:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16775:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 2480,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "16819:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16828:9:11",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10582,
                          "src": "16819:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "16775:62:11",
                        "trueExpression": {
                          "id": 2479,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "16810:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2483,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "16851:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2484,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "16872:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$4054",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2466,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "16659:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$4054_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16659:230:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "16659:230:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2489,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "16984:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2490,
                              "name": "makerAsk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "17023:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 2491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17032:10:11",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10552,
                            "src": "17023:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2492,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2442,
                            "src": "17080:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2488,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "16927:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$9428_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "16973:9:11",
                          "17011:10:11",
                          "17060:18:11"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "16927:186:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9428_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "id": 2494,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "17127:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2495,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2357,
                              "src": "17147:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17156:9:11",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10582,
                            "src": "17147:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17177:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17169:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2497,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17169:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17169:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17147:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 2503,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "17191:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17200:9:11",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10582,
                          "src": "17191:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "17147:62:11",
                        "trueExpression": {
                          "id": 2502,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "17182:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2506,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "17223:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17232:10:11",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10554,
                        "src": "17223:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2508,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "17256:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17265:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10561,
                        "src": "17256:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2510,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "17287:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17296:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10559,
                        "src": "17287:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2512,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "17320:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2513,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "17341:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2514,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "17362:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2515,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "17386:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9428_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 2487,
                      "name": "TakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9505,
                      "src": "16905:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$9428_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16905:501:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2517,
                  "nodeType": "EmitStatement",
                  "src": "16900:506:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2518,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "17470:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2520,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17481:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17470:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2368,
                  "id": 2521,
                  "nodeType": "Return",
                  "src": "17463:20:11"
                }
              ]
            },
            "documentation": {
              "id": 2354,
              "nodeType": "StructuredDocumentation",
              "src": "14881:372:11",
              "text": " @notice This function is internal and is used to execute a taker bid (against a maker ask).\n @param takerBid Taker bid order struct\n @param makerAsk Maker ask order struct\n @param sender Sender of the transaction (i.e. msg.sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerBid",
            "nameLocation": "15267:16:11",
            "parameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "15321:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "15293:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10587_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2356,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2355,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "15293:12:11",
                        "15306:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10587,
                      "src": "15293:18:11"
                    },
                    "referencedDeclaration": 10587,
                    "src": "15293:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10587_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "15367:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "15339:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10580_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2359,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2358,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "15339:12:11",
                        "15352:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10580,
                      "src": "15339:18:11"
                    },
                    "referencedDeclaration": 10580,
                    "src": "15339:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10580_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "15393:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "15385:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15385:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "15417:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "15409:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15409:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15283:149:11"
            },
            "returnParameters": {
              "id": 2368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "15451:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15451:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15450:9:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2597,
            "nodeType": "FunctionDefinition",
            "src": "17884:1635:11",
            "nodes": [],
            "body": {
              "id": 2596,
              "nodeType": "Block",
              "src": "18057:1462:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2535,
                      "name": "totalProtocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2532,
                      "src": "18071:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18097:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18071:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2595,
                  "nodeType": "IfStatement",
                  "src": "18067:1446:11",
                  "trueBody": {
                    "id": 2594,
                    "nodeType": "Block",
                    "src": "18100:1413:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2538,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2530,
                            "src": "18118:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18139:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18131:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2539,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18131:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18131:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18118:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2586,
                        "nodeType": "IfStatement",
                        "src": "18114:1209:11",
                        "trueBody": {
                          "id": 2585,
                          "nodeType": "Block",
                          "src": "18143:1180:11",
                          "statements": [
                            {
                              "condition": {
                                "id": 2544,
                                "name": "isAffiliateProgramActive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "18331:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2584,
                              "nodeType": "IfStatement",
                              "src": "18327:982:11",
                              "trueBody": {
                                "id": 2583,
                                "nodeType": "Block",
                                "src": "18357:952:11",
                                "statements": [
                                  {
                                    "assignments": [
                                      2546
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2546,
                                        "mutability": "mutable",
                                        "name": "totalAffiliateFeeAmount",
                                        "nameLocation": "18387:23:11",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2583,
                                        "src": "18379:31:11",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2545,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "18379:7:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2555,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2551,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2547,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2532,
                                              "src": "18414:22:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "baseExpression": {
                                                "id": 2548,
                                                "name": "affiliateRates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 237,
                                                "src": "18439:14:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 2550,
                                              "indexExpression": {
                                                "id": 2549,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2530,
                                                "src": "18454:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "18439:25:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18414:50:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2552,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "18413:52:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2553,
                                        "name": "ONE_HUNDRED_PERCENT_IN_BP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "18492:25:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18413:104:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "18379:138:11"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2558,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2556,
                                        "name": "totalAffiliateFeeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2546,
                                        "src": "18544:23:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2557,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18571:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "18544:28:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2582,
                                    "nodeType": "IfStatement",
                                    "src": "18540:751:11",
                                    "trueBody": {
                                      "id": 2581,
                                      "nodeType": "Block",
                                      "src": "18574:717:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2561,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2559,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2532,
                                              "src": "18600:22:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "-=",
                                            "rightHandSide": {
                                              "id": 2560,
                                              "name": "totalAffiliateFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2546,
                                              "src": "18626:23:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18600:49:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2562,
                                          "nodeType": "ExpressionStatement",
                                          "src": "18600:49:11"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 2565,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2563,
                                              "name": "bidUser",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2528,
                                              "src": "19018:7:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "!=",
                                            "rightExpression": {
                                              "id": 2564,
                                              "name": "affiliate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2530,
                                              "src": "19029:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "19018:20:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2574,
                                          "nodeType": "IfStatement",
                                          "src": "19014:161:11",
                                          "trueBody": {
                                            "id": 2573,
                                            "nodeType": "Block",
                                            "src": "19040:135:11",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 2567,
                                                      "name": "currency",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2526,
                                                      "src": "19094:8:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2568,
                                                      "name": "bidUser",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2528,
                                                      "src": "19104:7:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2569,
                                                      "name": "affiliate",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2530,
                                                      "src": "19113:9:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2570,
                                                      "name": "totalAffiliateFeeAmount",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2546,
                                                      "src": "19124:23:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2566,
                                                    "name": "_transferFungibleTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2633,
                                                    "src": "19070:23:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                      "typeString": "function (address,address,address,uint256)"
                                                    }
                                                  },
                                                  "id": 2571,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "19070:78:11",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 2572,
                                                "nodeType": "ExpressionStatement",
                                                "src": "19070:78:11"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "id": 2576,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2530,
                                                "src": "19223:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2577,
                                                "name": "currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2526,
                                                "src": "19234:8:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2578,
                                                "name": "totalAffiliateFeeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2546,
                                                "src": "19244:23:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 2575,
                                              "name": "AffiliatePayment",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9437,
                                              "src": "19206:16:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                              }
                                            },
                                            "id": 2579,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19206:62:11",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 2580,
                                          "nodeType": "EmitStatement",
                                          "src": "19201:67:11"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2588,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "19438:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2589,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2528,
                              "src": "19448:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2590,
                              "name": "protocolFeeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "19457:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2591,
                              "name": "totalProtocolFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2532,
                              "src": "19479:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2587,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2633,
                            "src": "19414:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19414:88:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2593,
                        "nodeType": "ExpressionStatement",
                        "src": "19414:88:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2524,
              "nodeType": "StructuredDocumentation",
              "src": "17496:383:11",
              "text": " @notice This function is internal and is used to pay the protocol fee and affiliate fee (if any).\n @param currency Currency address to transfer (address(0) is ETH)\n @param bidUser Bid user address\n @param affiliate Affiliate address (address(0) if none)\n @param totalProtocolFeeAmount Total protocol fee amount (denominated in the currency)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payProtocolFeeAndAffiliateFee",
            "nameLocation": "17893:30:11",
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2526,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "17941:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "17933:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17933:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2528,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "17967:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "17959:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17959:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2530,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "17992:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "17984:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17984:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "totalProtocolFeeAmount",
                  "nameLocation": "18019:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "18011:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18011:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17923:124:11"
            },
            "returnParameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18057:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2633,
            "nodeType": "FunctionDefinition",
            "src": "19790:357:11",
            "nodes": [],
            "body": {
              "id": 2632,
              "nodeType": "Block",
              "src": "19901:246:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2609,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2600,
                      "src": "19915:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19935:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19927:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19927:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19927:10:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19915:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2630,
                    "nodeType": "Block",
                    "src": "20054:87:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2624,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2600,
                              "src": "20094:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2625,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2602,
                              "src": "20104:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2626,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "20112:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2627,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2606,
                              "src": "20123:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2623,
                            "name": "_executeERC20TransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47288,
                            "src": "20068:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20068:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2629,
                        "nodeType": "ExpressionStatement",
                        "src": "20068:62:11"
                      }
                    ]
                  },
                  "id": 2631,
                  "nodeType": "IfStatement",
                  "src": "19911:230:11",
                  "trueBody": {
                    "id": 2622,
                    "nodeType": "Block",
                    "src": "19939:109:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2616,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "19991:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2617,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "19997:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2618,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2606,
                              "src": "20008:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2619,
                              "name": "_gasLimitETHTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "20016:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2615,
                            "name": "_transferETHAndWrapIfFailWithGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47463,
                            "src": "19953:37:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19953:84:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2621,
                        "nodeType": "ExpressionStatement",
                        "src": "19953:84:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2598,
              "nodeType": "StructuredDocumentation",
              "src": "19525:260:11",
              "text": " @notice This function is internal and is used to transfer fungible tokens.\n @param currency Currency address\n @param sender Sender address\n @param recipient Recipient address\n @param amount Amount (in fungible tokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFungibleTokens",
            "nameLocation": "19799:23:11",
            "parameters": {
              "id": 2607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2600,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "19831:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "19823:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19823:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2602,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19849:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "19841:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19841:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "19865:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "19857:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19857:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19884:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "19876:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19876:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19822:69:11"
            },
            "returnParameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19901:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2690,
            "nodeType": "FunctionDefinition",
            "src": "20620:1029:11",
            "nodes": [],
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "20809:840:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2650,
                      "mutability": "mutable",
                      "name": "sellerProceed",
                      "nameLocation": "21186:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2689,
                      "src": "21178:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21178:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2654,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2651,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2642,
                      "src": "21202:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2653,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21213:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21202:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21178:37:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2655,
                      "name": "sellerProceed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2650,
                      "src": "21229:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21246:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21229:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2668,
                  "nodeType": "IfStatement",
                  "src": "21225:121:11",
                  "trueBody": {
                    "id": 2667,
                    "nodeType": "Block",
                    "src": "21249:97:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2659,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "21287:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2660,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2646,
                              "src": "21297:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2661,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2638,
                                "src": "21306:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 2663,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 2662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21317:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21306:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2664,
                              "name": "sellerProceed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2650,
                              "src": "21321:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2658,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2633,
                            "src": "21263:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21263:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2666,
                        "nodeType": "ExpressionStatement",
                        "src": "21263:72:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2670,
                      "mutability": "mutable",
                      "name": "creatorFeeAmount",
                      "nameLocation": "21474:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2689,
                      "src": "21466:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21466:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2674,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2671,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2642,
                      "src": "21493:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2673,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21504:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21493:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21466:40:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2675,
                      "name": "creatorFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2670,
                      "src": "21520:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21540:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21520:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2688,
                  "nodeType": "IfStatement",
                  "src": "21516:127:11",
                  "trueBody": {
                    "id": 2687,
                    "nodeType": "Block",
                    "src": "21543:100:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2679,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "21581:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2680,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2646,
                              "src": "21591:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2681,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2638,
                                "src": "21600:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 2683,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 2682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21611:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21600:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2684,
                              "name": "creatorFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2670,
                              "src": "21615:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2678,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2633,
                            "src": "21557:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21557:75:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2686,
                        "nodeType": "ExpressionStatement",
                        "src": "21557:75:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2634,
              "nodeType": "StructuredDocumentation",
              "src": "20153:462:11",
              "text": " @notice This function is private and used to transfer funds to\n         (1) creator recipient (if any)\n         (2) ask recipient.\n @param recipients Recipient addresses\n @param feeAmounts Fees\n @param currency Currency address\n @param bidUser Bid user address\n @dev It does not send to the 0-th element in the array since it is the protocol fee,\n      which is paid later in the execution flow."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToAskRecipientAndCreatorIfAny",
            "nameLocation": "20629:38:11",
            "parameters": {
              "id": 2647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "20695:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "20677:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2635,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20677:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2637,
                    "length": {
                      "hexValue": "32",
                      "id": 2636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20685:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "20677:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "20733:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "20715:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2639,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20715:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2641,
                    "length": {
                      "hexValue": "33",
                      "id": 2640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20723:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "20715:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "20761:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "20753:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20753:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "20787:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "20779:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20779:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20667:133:11"
            },
            "returnParameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20809:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2726,
            "nodeType": "FunctionDefinition",
            "src": "21784:429:11",
            "nodes": [],
            "body": {
              "id": 2725,
              "nodeType": "Block",
              "src": "21826:387:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2694,
                      "name": "domainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "21836:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 2699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21915:84:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 2698,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "21905:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21905:95:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4c6f6f6b735261726550726f746f636f6c",
                                  "id": 2702,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22028:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  },
                                  "value": "LooksRareProtocol"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  }
                                ],
                                "id": 2701,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "22018:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22018:30:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32",
                                      "id": 2707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22082:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      }
                                    ],
                                    "id": 2706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22076:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 2705,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22076:5:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22076:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2704,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "22066:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22066:21:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2710,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22105:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22111:7:11",
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "22105:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2714,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22144:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$2993",
                                    "typeString": "contract OmniXExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$2993",
                                    "typeString": "contract OmniXExchange"
                                  }
                                ],
                                "id": 2713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22136:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2712,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22136:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22136:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2696,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "21877:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21881:6:11",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "21877:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21877:286:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2695,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "21854:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 2717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21854:319:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "21836:337:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2719,
                  "nodeType": "ExpressionStatement",
                  "src": "21836:337:11"
                },
                {
                  "expression": {
                    "id": 2723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2720,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "22183:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2721,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "22193:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22199:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "22193:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22183:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2724,
                  "nodeType": "ExpressionStatement",
                  "src": "22183:23:11"
                }
              ]
            },
            "documentation": {
              "id": 2691,
              "nodeType": "StructuredDocumentation",
              "src": "21655:124:11",
              "text": " @notice This function is private and used to compute the domain separator and store the current chain id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDomainSeparator",
            "nameLocation": "21793:22:11",
            "parameters": {
              "id": 2692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21815:2:11"
            },
            "returnParameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21826:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2751,
            "nodeType": "FunctionDefinition",
            "src": "22890:278:11",
            "nodes": [],
            "body": {
              "id": 2750,
              "nodeType": "Block",
              "src": "23047:121:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2738,
                          "name": "userOrderNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "23057:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bytes32))"
                          }
                        },
                        "id": 2741,
                        "indexExpression": {
                          "id": 2739,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "23072:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23057:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 2742,
                      "indexExpression": {
                        "id": 2740,
                        "name": "orderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "23080:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23057:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "condition": {
                            "id": 2743,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2729,
                            "src": "23095:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2745,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2735,
                            "src": "23151:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "23095:65:11",
                          "trueExpression": {
                            "id": 2744,
                            "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "23116:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2747,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "23094:67:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "23057:104:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2749,
                  "nodeType": "ExpressionStatement",
                  "src": "23057:104:11"
                }
              ]
            },
            "documentation": {
              "id": 2727,
              "nodeType": "StructuredDocumentation",
              "src": "22219:666:11",
              "text": " @notice This function is internal and is called during the execution of a transaction to decide\n         how to map the user's order nonce.\n @param isNonceInvalidated Whether the nonce is being invalidated\n @param signer Signer address\n @param orderNonce Maker user order nonce\n @param orderHash Hash of the order struct\n @dev If isNonceInvalidated is true, this function invalidates the user order nonce for future execution.\n      If it is equal to false, this function maps the order hash for this user order nonce\n      to prevent other order structs sharing the same order nonce to be executed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateUserOrderNonce",
            "nameLocation": "22899:21:11",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2729,
                  "mutability": "mutable",
                  "name": "isNonceInvalidated",
                  "nameLocation": "22935:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "22930:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2728,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22930:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2731,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "22971:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "22963:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22963:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2733,
                  "mutability": "mutable",
                  "name": "orderNonce",
                  "nameLocation": "22995:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "22987:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22987:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "23023:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "23015:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23015:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22920:118:11"
            },
            "returnParameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23047:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2787,
            "nodeType": "FunctionDefinition",
            "src": "23555:485:11",
            "nodes": [],
            "body": {
              "id": 2786,
              "nodeType": "Block",
              "src": "23670:370:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2761,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "23684:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2762,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "23695:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23701:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "23695:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23684:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2784,
                    "nodeType": "Block",
                    "src": "23986:48:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2781,
                            "name": "ChainIdInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9514,
                            "src": "24007:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24007:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2783,
                        "nodeType": "RevertStatement",
                        "src": "24000:23:11"
                      }
                    ]
                  },
                  "id": 2785,
                  "nodeType": "IfStatement",
                  "src": "23680:354:11",
                  "trueBody": {
                    "id": 2780,
                    "nodeType": "Block",
                    "src": "23710:270:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "1901",
                                      "id": 2771,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23856:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      "value": "\u0019\u0001"
                                    },
                                    {
                                      "id": 2772,
                                      "name": "domainSeparator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1695,
                                      "src": "23868:15:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 2773,
                                      "name": "computedHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2754,
                                      "src": "23885:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2769,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "23839:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2770,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "23843:12:11",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "23839:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23839:59:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2768,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "23829:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23829:70:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2776,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2758,
                              "src": "23917:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2777,
                              "name": "makerSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2756,
                              "src": "23941:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 2765,
                              "name": "SignatureCheckerCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46485,
                              "src": "23780:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureCheckerCalldata_$46485_$",
                                "typeString": "type(library SignatureCheckerCalldata)"
                              }
                            },
                            "id": 2767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23805:6:11",
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46384,
                            "src": "23780:31:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,bytes calldata) view"
                            }
                          },
                          "id": 2778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23780:189:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2779,
                        "nodeType": "ExpressionStatement",
                        "src": "23780:189:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2752,
              "nodeType": "StructuredDocumentation",
              "src": "23174:376:11",
              "text": " @notice This function is private and used to verify the chain id, compute the digest, and verify the signature.\n @dev If chainId is not equal to the cached chain id, it would revert.\n @param computedHash Hash of order (maker bid or maker ask) or merkle root\n @param makerSignature Signature of the maker\n @param signer Signer address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeDigestAndVerify",
            "nameLocation": "23564:23:11",
            "parameters": {
              "id": 2759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "computedHash",
                  "nameLocation": "23596:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "23588:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23588:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2756,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "23625:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "23610:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23610:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "23649:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "23641:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23641:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23587:69:11"
            },
            "returnParameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23670:0:11"
            },
            "scope": 2993,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2849,
            "nodeType": "FunctionDefinition",
            "src": "24565:736:11",
            "nodes": [],
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "24761:540:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2801,
                      "mutability": "mutable",
                      "name": "proofLength",
                      "nameLocation": "24779:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2848,
                      "src": "24771:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2800,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24771:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2805,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 2802,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2791,
                        "src": "24793:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      "id": 2803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24804:5:11",
                      "memberName": "proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10611,
                      "src": "24793:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10596_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "24810:6:11",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "24793:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24771:45:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2806,
                      "name": "proofLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2801,
                      "src": "24831:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24846:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24831:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2841,
                  "nodeType": "IfStatement",
                  "src": "24827:404:11",
                  "trueBody": {
                    "id": 2840,
                    "nodeType": "Block",
                    "src": "24849:382:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2809,
                            "name": "proofLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "24867:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2810,
                            "name": "MAX_CALLDATA_PROOF_LENGTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "24881:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24867:39:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2817,
                        "nodeType": "IfStatement",
                        "src": "24863:117:11",
                        "trueBody": {
                          "id": 2816,
                          "nodeType": "Block",
                          "src": "24908:72:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 2813,
                                    "name": "proofLength",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2801,
                                    "src": "24953:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2812,
                                  "name": "MerkleProofTooLarge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4141,
                                  "src": "24933:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 2814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24933:32:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2815,
                              "nodeType": "RevertStatement",
                              "src": "24926:39:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 2826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "24998:90:11",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2820,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2791,
                                  "src": "25043:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "25054:5:11",
                                "memberName": "proof",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10611,
                                "src": "25043:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10596_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2822,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2791,
                                  "src": "25061:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "25072:4:11",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10607,
                                "src": "25061:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2824,
                                "name": "orderHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2793,
                                "src": "25078:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10596_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 2818,
                                "name": "MerkleProofCalldataWithNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10432,
                                "src": "24999:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProofCalldataWithNodes_$10432_$",
                                  "typeString": "type(library MerkleProofCalldataWithNodes)"
                                }
                              },
                              "id": 2819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "25028:14:11",
                              "memberName": "verifyCalldata",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10352,
                              "src": "24999:43:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_MerkleTreeNode_$10596_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (struct OrderStructs.MerkleTreeNode calldata[] calldata,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 2825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24999:89:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2831,
                        "nodeType": "IfStatement",
                        "src": "24994:156:11",
                        "trueBody": {
                          "id": 2830,
                          "nodeType": "Block",
                          "src": "25090:60:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2827,
                                  "name": "MerkleProofInvalid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4136,
                                  "src": "25115:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25115:20:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2829,
                              "nodeType": "RevertStatement",
                              "src": "25108:27:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2832,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "25164:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2834,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2791,
                                  "src": "25191:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "25202:4:11",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10607,
                                "src": "25191:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2836,
                                "name": "proofLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "25208:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2833,
                              "name": "hashBatchOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "25176:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                              }
                            },
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25176:44:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "25164:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2839,
                        "nodeType": "ExpressionStatement",
                        "src": "25164:56:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2843,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "25265:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "25276:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 2845,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2797,
                        "src": "25287:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2842,
                      "name": "_computeDigestAndVerify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "25241:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25241:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "25241:53:11"
                }
              ]
            },
            "documentation": {
              "id": 2788,
              "nodeType": "StructuredDocumentation",
              "src": "24046:514:11",
              "text": " @notice This function is private and called to verify whether the merkle proofs provided for the order hash\n         are correct or verify the order hash if the order is not part of a merkle tree.\n @param merkleTree Merkle tree\n @param orderHash Order hash (can be maker bid hash or maker ask hash)\n @param signature Maker order signature\n @param signer Maker address\n @dev It verifies (1) merkle proof (if necessary) (2) signature is from the expected signer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMerkleProofOrOrderHash",
            "nameLocation": "24574:29:11",
            "parameters": {
              "id": 2798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2791,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "24646:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "24613:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10612_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 2790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2789,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "24613:12:11",
                        "24626:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10612,
                      "src": "24613:23:11"
                    },
                    "referencedDeclaration": 10612,
                    "src": "24613:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10612_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2793,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "24674:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "24666:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24666:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "24708:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "24693:24:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24693:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2797,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "24735:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "24727:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24727:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24603:144:11"
            },
            "returnParameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24761:0:11"
            },
            "scope": 2993,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2992,
            "nodeType": "FunctionDefinition",
            "src": "25308:2500:11",
            "nodes": [],
            "body": {
              "id": 2991,
              "nodeType": "Block",
              "src": "25448:2360:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2862,
                      "mutability": "mutable",
                      "name": "lzMessage",
                      "nameLocation": "25465:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2991,
                      "src": "25459:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2861,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "25459:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2870,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2865,
                        "name": "_payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2857,
                        "src": "25489:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 2867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25500:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 2866,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "25500:5:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 2868,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25499:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 2863,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "25478:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "25482:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "25478:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25478:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25458:49:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 2873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2871,
                      "name": "lzMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2862,
                      "src": "25530:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2872,
                      "name": "LZ_MESSAGE_ORDER_ASK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "25543:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "25530:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 2922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2920,
                        "name": "lzMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "25926:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2921,
                        "name": "LZ_MESSAGE_ORDER_BID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "25939:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "25926:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2989,
                    "nodeType": "IfStatement",
                    "src": "25922:1880:11",
                    "trueBody": {
                      "id": 2988,
                      "nodeType": "Block",
                      "src": "25961:1841:11",
                      "statements": [
                        {
                          "assignments": [
                            null,
                            2924,
                            2927,
                            2930,
                            2933,
                            2935,
                            2938,
                            2941,
                            2943
                          ],
                          "declarations": [
                            null,
                            {
                              "constant": false,
                              "id": 2924,
                              "mutability": "mutable",
                              "name": "collection",
                              "nameLocation": "26005:10:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "25997:18:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "typeName": {
                                "id": 2923,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25997:7:11",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2927,
                              "mutability": "mutable",
                              "name": "_collectionType",
                              "nameLocation": "26048:15:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26033:30:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CollectionType_$4054",
                                "typeString": "enum CollectionType"
                              },
                              "typeName": {
                                "id": 2926,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2925,
                                  "name": "CollectionType",
                                  "nameLocations": [
                                    "26033:14:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4054,
                                  "src": "26033:14:11"
                                },
                                "referencedDeclaration": 4054,
                                "src": "26033:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CollectionType_$4054",
                                  "typeString": "enum CollectionType"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2930,
                              "mutability": "mutable",
                              "name": "itemIds",
                              "nameLocation": "26095:7:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26081:21:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2928,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26081:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2929,
                                "nodeType": "ArrayTypeName",
                                "src": "26081:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2933,
                              "mutability": "mutable",
                              "name": "amounts",
                              "nameLocation": "26134:7:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26120:21:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2931,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26120:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2932,
                                "nodeType": "ArrayTypeName",
                                "src": "26120:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2935,
                              "mutability": "mutable",
                              "name": "price",
                              "nameLocation": "26164:5:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26159:10:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2934,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "26159:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2938,
                              "mutability": "mutable",
                              "name": "takerParty",
                              "nameLocation": "26217:10:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26187:40:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                "typeString": "struct OrderStructs.PartyData"
                              },
                              "typeName": {
                                "id": 2937,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2936,
                                  "name": "OrderStructs.PartyData",
                                  "nameLocations": [
                                    "26187:12:11",
                                    "26200:9:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 10605,
                                  "src": "26187:22:11"
                                },
                                "referencedDeclaration": 10605,
                                "src": "26187:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PartyData_$10605_storage_ptr",
                                  "typeString": "struct OrderStructs.PartyData"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2941,
                              "mutability": "mutable",
                              "name": "makerParty",
                              "nameLocation": "26275:10:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26245:40:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                "typeString": "struct OrderStructs.PartyData"
                              },
                              "typeName": {
                                "id": 2940,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2939,
                                  "name": "OrderStructs.PartyData",
                                  "nameLocations": [
                                    "26245:12:11",
                                    "26258:9:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 10605,
                                  "src": "26245:22:11"
                                },
                                "referencedDeclaration": 10605,
                                "src": "26245:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PartyData_$10605_storage_ptr",
                                  "typeString": "struct OrderStructs.PartyData"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 2943,
                              "mutability": "mutable",
                              "name": "royaltyInfo",
                              "nameLocation": "26316:11:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26303:24:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes"
                              },
                              "typeName": {
                                "id": 2942,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "26303:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2968,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 2946,
                                "name": "_payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2857,
                                "src": "26355:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 2948,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26383:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 2947,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26383:5:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  {
                                    "id": 2950,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26390:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2949,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26390:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  {
                                    "id": 2951,
                                    "name": "CollectionType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4054,
                                    "src": "26399:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_CollectionType_$4054_$",
                                      "typeString": "type(enum CollectionType)"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 2953,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "26415:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2952,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "26415:4:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2954,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26415:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 2956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "26423:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2955,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "26423:4:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26423:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  },
                                  {
                                    "id": 2959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26431:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2958,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26431:4:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2960,
                                      "name": "OrderStructs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10711,
                                      "src": "26437:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_OrderStructs_$10711_$",
                                        "typeString": "type(library OrderStructs)"
                                      }
                                    },
                                    "id": 2961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "26450:9:11",
                                    "memberName": "PartyData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10605,
                                    "src": "26437:22:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_PartyData_$10605_storage_ptr_$",
                                      "typeString": "type(struct OrderStructs.PartyData storage pointer)"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2962,
                                      "name": "OrderStructs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10711,
                                      "src": "26461:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_OrderStructs_$10711_$",
                                        "typeString": "type(library OrderStructs)"
                                      }
                                    },
                                    "id": 2963,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "26474:9:11",
                                    "memberName": "PartyData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10605,
                                    "src": "26461:22:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_PartyData_$10605_storage_ptr_$",
                                      "typeString": "type(struct OrderStructs.PartyData storage pointer)"
                                    }
                                  },
                                  {
                                    "id": 2965,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26485:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 2964,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26485:5:11",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 2966,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "26365:139:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_enum$_CollectionType_$4054_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_struct$_PartyData_$10605_storage_ptr_$_$_t_type$_t_struct$_PartyData_$10605_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                  "typeString": "tuple(type(uint8),type(address),type(enum CollectionType),type(uint256[] memory),type(uint256[] memory),type(uint256),type(struct OrderStructs.PartyData storage pointer),type(struct OrderStructs.PartyData storage pointer),type(bytes storage pointer))"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_enum$_CollectionType_$4054_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_struct$_PartyData_$10605_storage_ptr_$_$_t_type$_t_struct$_PartyData_$10605_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                  "typeString": "tuple(type(uint8),type(address),type(enum CollectionType),type(uint256[] memory),type(uint256[] memory),type(uint256),type(struct OrderStructs.PartyData storage pointer),type(struct OrderStructs.PartyData storage pointer),type(bytes storage pointer))"
                                }
                              ],
                              "expression": {
                                "id": 2944,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "26344:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "26348:6:11",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "26344:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26344:161:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_enum$_CollectionType_$4054_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_PartyData_$10605_memory_ptr_$_t_struct$_PartyData_$10605_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(uint8,address payable,enum CollectionType,uint256[] memory,uint256[] memory,uint256,struct OrderStructs.PartyData memory,struct OrderStructs.PartyData memory,bytes memory)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "25975:530:11"
                        },
                        {
                          "assignments": [
                            2970
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2970,
                              "mutability": "mutable",
                              "name": "sgPayload",
                              "nameLocation": "26533:9:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2988,
                              "src": "26520:22:11",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes"
                              },
                              "typeName": {
                                "id": 2969,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "26520:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2987,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 2973,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2924,
                                "src": "26573:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2974,
                                "name": "_collectionType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "26601:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CollectionType_$4054",
                                  "typeString": "enum CollectionType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2975,
                                  "name": "takerParty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2938,
                                  "src": "26655:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                    "typeString": "struct OrderStructs.PartyData memory"
                                  }
                                },
                                "id": 2976,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26666:5:11",
                                "memberName": "party",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10602,
                                "src": "26655:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2977,
                                  "name": "makerParty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2941,
                                  "src": "26705:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                    "typeString": "struct OrderStructs.PartyData memory"
                                  }
                                },
                                "id": 2978,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26716:5:11",
                                "memberName": "party",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10602,
                                "src": "26705:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2979,
                                "name": "itemIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2930,
                                "src": "26754:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 2980,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2933,
                                "src": "26805:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2981,
                                  "name": "takerParty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2938,
                                  "src": "26865:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                    "typeString": "struct OrderStructs.PartyData memory"
                                  }
                                },
                                "id": 2982,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26876:8:11",
                                "memberName": "currency",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10598,
                                "src": "26865:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2983,
                                  "name": "takerParty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2938,
                                  "src": "26917:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PartyData_$10605_memory_ptr",
                                    "typeString": "struct OrderStructs.PartyData memory"
                                  }
                                },
                                "id": 2984,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "26928:8:11",
                                "memberName": "strategy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10600,
                                "src": "26917:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2985,
                                "name": "royaltyInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2943,
                                "src": "26969:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_CollectionType_$4054",
                                  "typeString": "enum CollectionType"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2971,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "26545:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "26549:6:11",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "26545:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26545:477:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26520:502:11"
                        }
                      ]
                    }
                  },
                  "id": 2990,
                  "nodeType": "IfStatement",
                  "src": "25526:2276:11",
                  "trueBody": {
                    "id": 2919,
                    "nodeType": "Block",
                    "src": "25564:343:11",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          2875,
                          2878,
                          2880,
                          2882,
                          2885,
                          2888
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 2875,
                            "mutability": "mutable",
                            "name": "collection",
                            "nameLocation": "25589:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25581:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2874,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25581:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2878,
                            "mutability": "mutable",
                            "name": "_collectionType",
                            "nameLocation": "25616:15:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25601:30:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CollectionType_$4054",
                              "typeString": "enum CollectionType"
                            },
                            "typeName": {
                              "id": 2877,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2876,
                                "name": "CollectionType",
                                "nameLocations": [
                                  "25601:14:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4054,
                                "src": "25601:14:11"
                              },
                              "referencedDeclaration": 4054,
                              "src": "25601:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CollectionType_$4054",
                                "typeString": "enum CollectionType"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2880,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "25641:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25633:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25633:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2882,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "25655:2:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25647:10:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2881,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25647:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2885,
                            "mutability": "mutable",
                            "name": "itemIds",
                            "nameLocation": "25673:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25659:21:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2883,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25659:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2884,
                              "nodeType": "ArrayTypeName",
                              "src": "25659:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2888,
                            "mutability": "mutable",
                            "name": "amounts",
                            "nameLocation": "25696:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "25682:21:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2886,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25682:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2887,
                              "nodeType": "ArrayTypeName",
                              "src": "25682:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2909,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2891,
                              "name": "_payload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2857,
                              "src": "25735:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "25746:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 2892,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25746:5:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "25753:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2894,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25753:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2896,
                                  "name": "CollectionType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4054,
                                  "src": "25762:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CollectionType_$4054_$",
                                    "typeString": "type(enum CollectionType)"
                                  }
                                },
                                {
                                  "id": 2898,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "25778:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2897,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25778:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "25787:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2899,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25787:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2902,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "25796:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2901,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "25796:4:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "25796:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "type(uint256[] memory)"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "25804:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2904,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "25804:4:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "25804:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "type(uint256[] memory)"
                                  }
                                }
                              ],
                              "id": 2907,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "25745:66:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_enum$_CollectionType_$4054_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(uint8),type(address),type(enum CollectionType),type(address),type(address),type(uint256[] memory),type(uint256[] memory))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_enum$_CollectionType_$4054_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(uint8),type(address),type(enum CollectionType),type(address),type(address),type(uint256[] memory),type(uint256[] memory))"
                              }
                            ],
                            "expression": {
                              "id": 2889,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "25724:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "25728:6:11",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "25724:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25724:88:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_enum$_CollectionType_$4054_$_t_address_payable_$_t_address_payable_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(uint8,address payable,enum CollectionType,address payable,address payable,uint256[] memory,uint256[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25578:234:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2911,
                              "name": "collection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2875,
                              "src": "25840:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2912,
                              "name": "_collectionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "25852:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CollectionType_$4054",
                                "typeString": "enum CollectionType"
                              }
                            },
                            {
                              "id": 2913,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2880,
                              "src": "25869:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2914,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "25875:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2915,
                              "name": "itemIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2885,
                              "src": "25879:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2916,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2888,
                              "src": "25888:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_CollectionType_$4054",
                                "typeString": "enum CollectionType"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 2910,
                            "name": "_transferNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4048,
                            "src": "25827:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$4054_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                            }
                          },
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25827:69:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2918,
                        "nodeType": "ExpressionStatement",
                        "src": "25827:69:11"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              11370
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nonblockingLzReceive",
            "nameLocation": "25317:21:11",
            "overrides": {
              "id": 2859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25440:8:11"
            },
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_srcChainId",
                  "nameLocation": "25346:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "25339:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "25339:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_srcAddress",
                  "nameLocation": "25372:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "25359:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25359:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "25392:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "25385:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "25385:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "_payload",
                  "nameLocation": "25413:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "25400:21:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25400:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25338:84:11"
            },
            "returnParameters": {
              "id": 2860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25448:0:11"
            },
            "scope": 2993,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1650,
              "name": "IOmniXExchange",
              "nameLocations": [
                "1566:14:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9575,
              "src": "1566:14:11"
            },
            "id": 1651,
            "nodeType": "InheritanceSpecifier",
            "src": "1566:14:11"
          },
          {
            "baseName": {
              "id": 1652,
              "name": "TransferSelectorNFT",
              "nameLocations": [
                "1586:19:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4049,
              "src": "1586:19:11"
            },
            "id": 1653,
            "nodeType": "InheritanceSpecifier",
            "src": "1586:19:11"
          },
          {
            "baseName": {
              "id": 1654,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nameLocations": [
                "1611:37:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47421,
              "src": "1611:37:11"
            },
            "id": 1655,
            "nodeType": "InheritanceSpecifier",
            "src": "1611:37:11"
          },
          {
            "baseName": {
              "id": 1656,
              "name": "LowLevelWETH",
              "nameLocations": [
                "1654:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47464,
              "src": "1654:12:11"
            },
            "id": 1657,
            "nodeType": "InheritanceSpecifier",
            "src": "1654:12:11"
          },
          {
            "baseName": {
              "id": 1658,
              "name": "LowLevelERC20Transfer",
              "nameLocations": [
                "1672:21:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47352,
              "src": "1672:21:11"
            },
            "id": 1659,
            "nodeType": "InheritanceSpecifier",
            "src": "1672:21:11"
          },
          {
            "baseName": {
              "id": 1660,
              "name": "BatchOrderTypehashRegistry",
              "nameLocations": [
                "1699:26:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 455,
              "src": "1699:26:11"
            },
            "id": 1661,
            "nodeType": "InheritanceSpecifier",
            "src": "1699:26:11"
          }
        ],
        "canonicalName": "OmniXExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2993,
          455,
          47352,
          47464,
          47421,
          4049,
          46326,
          46764,
          1376,
          9192,
          3344,
          825,
          322,
          11434,
          11206,
          9382,
          9351,
          11651,
          49055,
          11250,
          9112,
          9156,
          9675,
          1613,
          9416,
          1401,
          9575
        ],
        "name": "OmniXExchange",
        "nameLocation": "1545:13:11",
        "scope": 2994,
        "usedErrors": [
          4124,
          4127,
          4133,
          4136,
          4141,
          4147,
          9108,
          9111,
          9177,
          9180,
          9183,
          9186,
          9191,
          9508,
          9511,
          9514,
          9517,
          9665,
          9668,
          9671,
          9674,
          11216,
          11219,
          11222,
          11225,
          11228,
          11231,
          46666,
          46680,
          46694,
          46697,
          46700,
          46705,
          46708,
          46713,
          46763
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 11
}