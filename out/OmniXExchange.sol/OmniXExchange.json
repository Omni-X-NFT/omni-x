{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChainIdInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreatorFeeBpTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20TransferFromFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthsInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "MerkleProofTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewGasLimitETHTransferTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewProtocolFeeRecipientCannotBeNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorForStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoncesInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotV2Strategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullSignerAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutsideOfTimeRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuoteTypeInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameDomainSeparator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureEOAInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureERC1271Invalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SignatureLengthInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignatureParameterSInvalid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "SignatureParameterVInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyHasNoSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "StrategyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyNotUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyProtocolFeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "AffiliatePayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "MessageFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "name": "NewBidAskNonces",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creatorFeeManager",
          "type": "address"
        }
      ],
      "name": "NewCreatorFeeManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewDomainSeparator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "NewGasLimitETHTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCreatorFeeBp",
          "type": "uint256"
        }
      ],
      "name": "NewMaxCreatorFeeBp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "NewProtocolFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "OrderNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_type",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_minDstGas",
          "type": "uint256"
        }
      ],
      "name": "SetMinDstGas",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "precrime",
          "type": "address"
        }
      ],
      "name": "SetPrecrime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_remoteAddress",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemoteAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "SubsetNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "askUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerAsk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerBid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelOrderNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelSubsetNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorFeeManager",
      "outputs": [
        {
          "internalType": "contract ICreatorFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker[]",
          "name": "takerBids",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker[]",
          "name": "makerAsks",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "makerSignatures",
          "type": "bytes[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree[]",
          "name": "merkleTrees",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAtomic",
          "type": "bool"
        }
      ],
      "name": "executeMultipleTakerBids",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerBid",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        }
      ],
      "name": "getTrustedRemoteAddress",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "proofLength",
          "type": "uint256"
        }
      ],
      "name": "hashBatchOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "batchOrderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "bid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ask",
          "type": "bool"
        }
      ],
      "name": "incrementBidAskNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "isTrustedRemote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lzEndpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCreatorFeeBp",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "minDstGasLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "nonblockingLzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precrime",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "restrictedExecuteTakerBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "protocolFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "retryMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_packetType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_minGas",
          "type": "uint256"
        }
      ],
      "name": "setMinDstGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_precrime",
          "type": "address"
        }
      ],
      "name": "setPrecrime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_remoteAddress",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemoteAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferManager",
      "outputs": [
        {
          "internalType": "contract TransferManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "trustedRemoteLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCreatorFeeManager",
          "type": "address"
        }
      ],
      "name": "updateCreatorFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDomainSeparator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "updateETHGasLimitForTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxCreatorFeeBp",
          "type": "uint16"
        }
      ],
      "name": "updateMaxCreatorFeeBp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "updateProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "newStandardProtocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMinTotalFee",
          "type": "uint16"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBidAskNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userSubsetNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1475:23559:11:-:0;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;811:20:59;1475:23559:11;;-1:-1:-1;;;;;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;-1:-1:-1;846:46:59;-1:-1:-1;;846:46:59;1475:23559:11;1049:42:52;;1475:23559:11;722:1:13;1475:23559:11;;;;;;;;;;;;;;;;;;1061:257:13;;;1135:2;1475:23559:11;;1061:257:13;;;1475:23559:11;1135:2:13;1475:23559:11;;;1061:257:13;;1200:3;1475:23559:11;;1061:257:13;;;1475:23559:11;;;1061:257:13;;;1475:23559:11;;;;1061:257:13;;;1475:23559:11;;;;;;;1043:12:13;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:2:13;1475:23559:11;;;;;1135:2:13;1475:23559:11;;;;;1200:3:13;1475:23559:11;;;;;;;;;;;;;1061:257:13;1475:23559:11;;;;1334:57:13;;;1475:23559:11;1568:5:8;1475:23559:11;;;8012:37:8;;;8008:119;;-1:-1:-1;;;;;;1475:23559:11;;;-1:-1:-1;;;1475:23559:11;1568:5:8;1475:23559:11;;;;;;8198:48:8;;1475:23559:11;;8198:48:8;915:11:93;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;;1263:51:15;;2256:5:11;;1475:23559;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;21481:95;21453:286;;;1475:23559;;;21594:30;1475:23559;;;;21642:21;1475:23559;;;;21681:13;1475:23559;;;;21720:4;1475:23559;;;;21453:286;;;1061:257:13;1475:23559:11;;;21453:286;;1475:23559;;;;;;;;;;;;;;;21430:319;;21412:337;1475:23559;21681:13;21759:23;1475:23559;1061:257:13;2799:12:11;1475:23559;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:257:13;1475:23559:11;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;8008:119:8;1475:23559:11;;-1:-1:-1;;;8072:44:8;;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1475:23559:11:-:0;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1342:10:52;-1:-1:-1;;;;;1475:23559:11;719:10:124;1318:35:52;1475:23559:11;;;;1428:32:52;1788:62;1428:32;1602:175;1475:23559:11;1428:32:52;;1475:23559:11;;;;1428:19:52;1475:23559:11;;;;;;;1428:32:52;1475:23559:11;:::i;:::-;;;1610:42:52;;;;:70;;;;1475:23559:11;1610:124:52;;;;1475:23559:11;1602:175:52;;:::i;:::-;1475:23559:11;;;:::i;:::-;;;;;:::i;:::-;1788:62:52;;:::i;:::-;1475:23559:11;1610:124:52;1475:23559:11;;;;;;;:::i;:::-;;;;;;1684:22:52;1475:23559:11;;;;;;1710:24:52;1684:50;1610:124;;;:70;1656:24;;;-1:-1:-1;1610:70:52;;;1475:23559:11;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;648:10:59;:19;644:71;;3982:10:52;;;1475:23559:11;3982:35:52;;;;;;1475:23559:11;;;;;;;;;;;;;;3982:35:52;;1475:23559:11;;3982:35:52;;1475:23559:11;3982:35:52;;;;;;1475:23559:11;3982:35:52;;1475:23559:11;;;3982:35:52;;;;:::i;:::-;1475:23559:11;;3982:35:52;;;:::i;:::-;;;;1475:23559:11;;;644:71:59;1475:23559:11;;-1:-1:-1;;;690:14:59;;1475:23559:11;;690:14:59;1475:23559:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1475:23559:11;;-1:-1:-1;;1475:23559:11;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4861:3405;1475:23559;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;4861:3405;;:::i;1475:23559::-;;;;;-1:-1:-1;1475:23559:11;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;648:10:59;:19;644:71;;4112:10:52;;;1475:23559:11;4112:38:52;;;;;;1475:23559:11;;;;;;;;;;;;;;4112:38:52;;1475:23559:11;;4112:38:52;;1475:23559:11;4112:38:52;;;;;;;;1475:23559:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;774:1:93;1475:23559:11;763:7:93;1475:23559:11;;;;763:12:93;759:66;;763:7;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;3117:17;;;1475:23559;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;-1:-1:-1;1475:23559:11;;;3228:17;1475:23559;;;;;;;;3227:28;:54;;;;;1475:23559;3223:109;;;3787:22;3359:15;3498:6;3614:47;3359:15;;;;;;:::i;:::-;1475:23559;;;3404:15;1475:23559;;;;:::i;:::-;3404:15;:::i;:::-;3498:6;;;:::i;:::-;3614:47;:::i;:::-;3787:22;;:::i;:::-;763:7:93;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;;3223:109;1475:23559;;-1:-1:-1;;;3304:17:11;;1475:23559;;3304:17;3227:54;3259:22;;;3227:54;;;759:66:93;1475:23559:11;;-1:-1:-1;;;798:16:93;;1475:23559:11;;798:16:93;1475:23559:11;;-1:-1:-1;;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;2686:11:10;;2682:65;;2696:1;2773:10;;;;;;1475:23559:11;2937:47:10;1475:23559:11;2937:47:10;1475:23559:11;;2817:10:10;;;;2937:47;;:::i;:::-;;;;1475:23559:11;2762:9:10;2848:4;2817:10;;2696:1;1475:23559:11;2801:51:10;1475:23559:11;2801:15:10;1475:23559:11;;;;;2696:1:10;1475:23559:11;2829:15:10;;;;;;:::i;:::-;1475:23559:11;2696:1:10;1475:23559:11;;2696:1:10;1475:23559:11;2848:4:10;1475:23559:11;;;;;;;;;2801:51:10;1475:23559:11;2762:9:10;;2682:65;1475:23559:11;;-1:-1:-1;;;2720:16:10;;1475:23559:11;;2720:16:10;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;1181:42:7;1475:23559:11;;;;;;-1:-1:-1;1475:23559:11;1127:17:7;1475:23559:11;;1127:39:7;1475:23559:11;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;1127:39:7;1475:23559:11;;;;;;;;;;;1181:42:7;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;1475:23559:11;8012:37:8;;8008:119;;1475:23559:11;;8198:48:8;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;8137:46:8;1475:23559:11;;;8137:46:8;1475:23559:11;;;;;;8198:48:8;1475:23559:11;8008:119:8;1475:23559:11;;-1:-1:-1;;;8072:44:8;;1475:23559:11;;8072:44:8;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1475:23559:11;;;;;-1:-1:-1;1475:23559:11;;;-1:-1:-1;1475:23559:11;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;9015:4;8993:10;:27;8989:80;;1475:23559;;9099:55;1475:23559;;;9099:55;;:::i;:::-;1475:23559;;;;;;;;;;;;;;;;;8989:80;1475:23559;;-1:-1:-1;;;9043:15:11;;1475:23559;;9043:15;1475:23559;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1475:23559:11;5954:19:52;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;:::i;:::-;;;;;;6003:24:52;1475:23559:11;;;;:::i;:::-;;;;;;6031:22:52;6003:50;1475:23559:11;;;;;;;;;;;:::i;:::-;;;;;774:1:93;1475:23559:11;763:7:93;1475:23559:11;;;;763:12:93;759:66;;763:7;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;4124:17;;;1475:23559;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;-1:-1:-1;1475:23559:11;;;4220:17;1475:23559;;;;;;;;4219:28;4215:83;;4422:15;4552:59;1475:23559;4748:22;1475:23559;4328:15;1475:23559;;;;:::i;4328:15::-;4422;;;;;1475:23559;;;;;:::i;:::-;4422:15;:::i;:::-;4589:10;4552:59;;:::i;:::-;4589:10;;4748:22;;:::i;:::-;;;:::i;1475:23559::-;;;;;;;;:::i;:::-;662:5:59;1475:23559:11;-1:-1:-1;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;4277:10:52;;;1475:23559:11;4277:55:52;;;;;;1475:23559:11;4277:55:52;1475:23559:11;;;;;;;;;;;;;4277:55:52;;1475:23559:11;4277:55:52;;;:::i;:::-;;;;;;;;;;;1475:23559:11;;;4277:55:52;1475:23559:11;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;1028:33:10;1475:23559:11;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;1475:23559:11;;;2815:26:8;2836:5;2815:26;;2811:85;;2906:36;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;2958:38:8;;1475:23559:11;;2958:38:8;1475:23559:11;2811:85:8;1475:23559:11;;-1:-1:-1;;;2864:21:8;;1475:23559:11;;2864:21:8;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;769:48:15;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;900:34:3;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;1130:10:59;:27;;;1126:79;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;1286:42:59;;;;;1475:23559:11;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;1475:23559:11;2773:35:3;1475:23559:11;;;;;2723:35:3;1475:23559:11;;;;;;2723:35:3;1475:23559:11;;;;;;2773:35:3;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1475:23559:11;537:49:7;1475:23559:11;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;1425:35:8;1475:23559:11;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;10965:19;1475:23559;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;-1:-1:-1;;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;1559:4:53;719:10:124;1535:29:53;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;789:36:3;1475:23559:11;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;1536:37:8;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1475:23559:11;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;:::i;:::-;;-1:-1:-1;1475:23559:11;550:51:52;1475:23559:11;;;;;-1:-1:-1;1475:23559:11;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;2006:11:10;;2002:65;;2016:1;2093:10;;;;;;1475:23559:11;2283:45:10;1475:23559:11;2283:45:10;1475:23559:11;;2136:10:10;;;;2283:45;;:::i;2082:9::-;2136:10;2016:1;1475:23559:11;2121:14:10;1475:23559:11;2121:77:10;1475:23559:11;;;;;;;2016:1:10;1475:23559:11;2148:14:10;;;;;;:::i;:::-;1475:23559:11;2016:1:10;1475:23559:11;;2016:1:10;1475:23559:11;1028:33:10;162:6:1;;;2121:77:10;1475:23559:11;2082:9:10;;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1475:23559:11;1153:49:3;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;1632:43:8;1475:23559:11;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;9532:7:11;1475:23559;9515:13;:24;9532:7;;-1:-1:-1;;;1475:23559:11;;;;;;:::i;:::-;;;;;;21412:337;1475:23559;;;21453:286;;1475:23559;21481:95;1475:23559;;21594:30;1475:23559;;;;21642:21;1475:23559;;;;9515:13;1475:23559;;;;21720:4;1475:23559;;;;;21453:286;;;;;:::i;:::-;1475:23559;21430:319;;21412:337;162:6:1;;21412:337:11;21759:23;9515:13;9532:7;162:6:1;;21759:23:11;9598:20;;;;1475:23559;;9511:177;1475:23559;;-1:-1:-1;;;9656:21:11;;1475:23559;;9656:21;1475:23559;;;;;;;-1:-1:-1;;1475:23559:11;;;;;607:65:52;1475:23559:11;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;1475:23559:11;607:65:52;1475:23559:11;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;607:65:52;1475:23559:11;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;587:83:53;1475:23559:11;;;;;;:::i;:::-;;;-1:-1:-1;1475:23559:11;587:83:53;1475:23559:11;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;587:83:53;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1475:23559:11;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;648:10:59;:19;644:71;;1475:23559:11;;;;;;;2238:32:13;;;:73;;;;;1475:23559:11;2238:99:13;;;;;;1475:23559:11;2234:165:13;;;-1:-1:-1;;;;;;1475:23559:11;;2413:21:13;2409:82;;1475:23559:11;;;;;;;;;;;;2506:49:13;;1475:23559:11;;2506:49:13;;;;;;;1475:23559:11;-1:-1:-1;2506:49:13;;;1475:23559:11;2505:50:13;;2501:103;;2971:219;1475:23559:11;2971:219:13;1475:23559:11;;;;:::i;:::-;2680:4:13;1475:23559:11;;;;;;2647:308:13;;1475:23559:11;;;;;2647:308:13;;1475:23559:11;;;;;2647:308:13;;1475:23559:11;-1:-1:-1;;;;;;1475:23559:11;;;2647:308:13;;1475:23559:11;;;;;2647:308:13;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;;2647:308:13;;1475:23559:11;2614:30:13;2627:16;1475:23559:11;;;2614:12:13;1475:23559:11;;;;;;;2614:30:13;1475:23559:11;:::i;:::-;2627:16:13;1475:23559:11;2996:18:13;;;;;:::i;:::-;2627:16;162:6:1;;2996:18:13;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1475:23559:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;2501:103:13;1475:23559:11;;-1:-1:-1;;;2578:15:13;;1475:23559:11;;2578:15:13;2506:49;;;;1475:23559:11;2506:49:13;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;2409:82;1475:23559:11;;-1:-1:-1;;;2457:23:13;;1475:23559:11;;2457:23:13;2234:165;1475:23559:11;;-1:-1:-1;;;2360:28:13;;1475:23559:11;;2360:28:13;2238:99;2334:3;2315:22;;;2238:99;;;:73;1475:23559:11;;2274:37:13;;-1:-1:-1;2238:73:13;;;;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;678:23:52;1475:23559:11;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;10055:5:11;10030:30;;10026:98;;1475:23559;162:6:1;10195:46:11;162:6:1;10134:45:11;162:6:1;1475:23559:11;;;;;10195:46;1475:23559;10026:98;1475:23559;;-1:-1:-1;;;10083:30:11;;1475:23559;;10083:30;1475:23559;;;;;;;-1:-1:-1;;1475:23559:11;;;;;1847:22;1475:23559;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;:::i;:::-;;-1:-1:-1;1475:23559:11;5090:19:52;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;:::i;:::-;;;5143:16:52;1475:23559:11;;5210:31:52;1475:23559:11;;;;;;;;;;;;;;5210:31:52;:::i;:::-;1475:23559:11;;;;;;;:::i;:::-;;;:::i;:::-;5210:31:52;:::i;1475:23559:11:-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;648:10:59;:19;644:71;;2322:44:3;1475:23559:11;;-1:-1:-1;;;;;;1475:23559:11;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;2381:46:3;;1475:23559:11;;2381:46:3;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1475:23559:11;-1:-1:-1;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;;;1154:60:10;;1475:23559:11;;;;;;;;;;;;;;;;;;;:::i;:::-;662:5:59;1475:23559:11;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;1475:23559:11;;4837:47:52;;;;;;;1475:23559:11;4837:47:52;;1475:23559:11;;;;4878:4:52;1475:23559:11;;;;;;4837:47:52;1475:23559:11;4837:47:52;;;;;;;:::i;:::-;-1:-1:-1;1475:23559:11;;;;;;4799:19:52;1475:23559:11;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4899:55:52;1475:23559:11;;;;;4899:55:52;1475:23559:11;;;;;;;;;;;;;;662:5:59;1475:23559:11;;;;;;;;;;4899:55:52;;;;;:::i;:::-;;;;1475:23559:11;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:55:52;1475:23559:11;;;4899:55:52;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;662:5:59;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;1763:29;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;1741:19:3;1475:23559:11;;;;;;-1:-1:-1;;;;;1475:23559:11;1727:10:3;:33;1723:95;;162:6:1;1832:30:3;;1828:87;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;1925:14:3;1475:23559:11;;;;;;;;;162:6:1;;;1475:23559:11;;;;;162:6:1;;1475:23559:11;;;;1970:31:3;;1475:23559:11;;162:6:1;;1970:31:3;162:6:1;1828:87:3;1475:23559:11;;-1:-1:-1;;;1885:19:3;;1475:23559:11;;1885:19:3;1723:95;1475:23559:11;;-1:-1:-1;;;1783:24:3;;1475:23559:11;;1783:24:3;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;498:46:52;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;2391:42:8;1475:23559:11;;;;;-1:-1:-1;;;;;1475:23559:11;;2316:60:8;1475:23559:11;;;2316:60:8;1475:23559:11;;;;;;2391:42:8;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;5403:22:52;1475:23559:11;;;;;-1:-1:-1;;;;;1475:23559:11;;5368:20:52;1475:23559:11;;;5368:20:52;1475:23559:11;;;;;;5403:22:52;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;-1:-1:-1;1475:23559:11;818:48:13;1475:23559:11;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;648:10:59;:19;644:71;;3828:10:52;1475:23559:11;3828:62:52;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;3828:62:52;;1475:23559:11;;;;;3828:62:52;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3828:62:52;;;;;;;;1475:23559:11;3828:62:52;;1475:23559:11;3828:62:52;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;1475:23559:11;-1:-1:-1;1475:23559:11;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2073:27:53;;;2208:74;2073:48;:27;1475:23559:11;2073:27:53;;1475:23559:11;;;;2073:14:53;1475:23559:11;;;;;;;2073:27:53;1475:23559:11;;:::i;:::-;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;2073:48:53;1475:23559:11;2131:67:53;2139:25;;;2131:67;:::i;:::-;1475:23559:11;;;;;:::i;:::-;;;;;;2216:19:53;:34;2208:74;:::i;:::-;2162:1;2328:27;;;;:48;:27;1475:23559:11;2328:27:53;;1475:23559:11;;;;2073:14:53;1475:23559:11;;;;;;;2328:27:53;1475:23559:11;;:::i;2328:48:53:-;162:6:1;2456:4:53;:69;;;;;1475:23559:11;;;;;;;;;;;2456:69:53;;1475:23559:11;2456:69:53;;;:::i;:::-;;:4;;;:69;;;;;;1475:23559:11;2456:69:53;;1475:23559:11;;;2456:69:53;;;;;;:::i;:::-;;;:::i;:::-;;;;1475:23559:11;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;3800:16:13;1475:23559:11;3786:30:13;;;3782:85;;3881:58;3898:41;:24;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;3898:24:13;1475:23559:11;;;;;;;3898:41:13;1475:23559:11;;;;3881:58:13;1475:23559:11;;;;;3881:58:13;;;:101;;;;;1475:23559:11;3877:167:13;;;;4260:77;4054:24;4260:77;4054:24;:44;:24;;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;4054:24:13;1475:23559:11;;;;;;;;;;;;;;;4054:44:13;4108:71;:24;;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;4108:24:13;1475:23559:11;;;;;;;;;;;;;;;;4108:71:13;4189:55;:24;;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;4189:24:13;1475:23559:11;;;;;;;;;;;;;;;;4189:55:13;1475:23559:11;;4260:77:13;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3881:101:13;1475:23559:11;;3943:39:13;;-1:-1:-1;3881:101:13;;;;3782:85;1475:23559:11;;-1:-1:-1;;;3839:17:13;;1475:23559:11;;3839:17:13;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;4529:53:10;1475:23559:11;;;;;:::i;:::-;;;;;;:::i;:::-;;;4068:12:10;1475:23559:11;4068:12:10;1475:23559:11;;;;;4142:10:10;1475:23559:11;;;;;;;;;;;;;;4058:27:10;;4089:3;1475:23559:11;;4142:10:10;4083:1;4194:37;1475:23559:11;4242:131:10;;;1475:23559:11;4383:131:10;;1475:23559:11;-1:-1:-1;1475:23559:11;;;4142:10:10;1475:23559:11;;;;;;;;;;;;;;;;;;;4529:53:10;1475:23559:11;4383:131:10;4406:32;;;;:::i;:::-;4142:10;;4083:1;4452:28;4142:10;1475:23559:11;;;;;;4125:16:10;1475:23559:11;4125:16:10;1475:23559:11;;;4125:16:10;1475:23559:11;;;4452:28:10;:37;162:6:1;4383:131:10;;;4242;4265:32;;;;;:::i;:::-;4142:10;4125:16;1475:23559:11;;;;;;;;;;162:6:1;;;4142:10:10;4242:131;;1475:23559:11;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;5551:11:52;;1475:23559:11;;5664:47:52;;1475:23559:11;;;;-1:-1:-1;1475:23559:11;5598:15:52;1475:23559:11;;;5598:41:52;1475:23559:11;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;5598:41:52;162:6:1;1475:23559:11;;5664:47:52;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1475:23559:11;1496:67:10;1475:23559:11;;;-1:-1:-1;1475:23559:11;;;-1:-1:-1;1475:23559:11;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;:::i;:::-;662:5:59;1475:23559:11;;;;;-1:-1:-1;;;;;1475:23559:11;648:10:59;:19;644:71;;-1:-1:-1;1475:23559:11;;;;;;;4579:19:52;1475:23559:11;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4634:36:52;1475:23559:11;;;;4634:36:52;1475:23559:11;;;;;;;;;;;;;662:5:59;1475:23559:11;;;;;;;;;4634:36:52;;;;;:::i;1475:23559:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4634:36:52;1475:23559:11;;;4634:36:52;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;662:5:59;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;648:10:59;:19;644:71;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;3561:68:52;;1475:23559:11;;;;;3561:68:52;;1475:23559:11;;;;;;;3610:4:52;1475:23559:11;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;3561:10:52;-1:-1:-1;;;;;1475:23559:11;3561:68:52;;;;;;;1475:23559:11;-1:-1:-1;3561:68:52;;;1475:23559:11;;;;;;;;;:::i;3561:68:52:-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1475:23559:11;;;;;;;-1:-1:-1;;1475:23559:11;;;;;1933:30;1475:23559;;;;;;;645:202:4;;2040:1;2030:11;;2040:1;;2057:80;786:53;;1475:23559:11;2026:1340:4;;1475:23559:11;;;786:53:4;;;1475:23559:11;;;;;;;;;;;;;;;;;;786:53:4;;1475:23559:11;;786:53:4;;;;;;:::i;:::-;1475:23559:11;776:64:4;;645:202;:::o;2026:1340::-;2168:1;2158:11;;2168:1;;2185:80;786:53;;1475:23559:11;2154:1212:4;2026:1340;;2154:1212;2296:1;2286:11;;2296:1;;2313:80;786:53;;1475:23559:11;2282:1084:4;2026:1340;;2282:1084;2424:1;2414:11;;2424:1;;2441:80;786:53;;1475:23559:11;2410:956:4;2026:1340;;2410:956;2552:1;2542:11;;2552:1;;2569:80;786:53;;1475:23559:11;2538:828:4;2026:1340;;2538:828;2680:1;2670:11;;2680:1;;2697:80;786:53;;1475:23559:11;2666:700:4;2026:1340;;2666:700;2808:1;2798:11;;2808:1;;2825:80;786:53;;1475:23559:11;2794:572:4;2026:1340;;2794:572;2936:1;2926:11;;2936:1;;2953:80;786:53;;1475:23559:11;2922:444:4;2026:1340;;2922:444;3064:1;3054:11;;3064:1;;3081:80;786:53;;1475:23559:11;3050:316:4;2026:1340;;3050:316;3192:2;3182:12;;3192:2;;3210:80;786:53;;1475:23559:11;3178:188:4;2026:1340;;3178:188;1475:23559:11;;-1:-1:-1;;;3328:27:4;;2424:1;3328:27;;1475:23559:11;;;;;;3328:27:4;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;9045:2:46;1475:23559:11;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;-1:-1:-1;1475:23559:11;;;:::o;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;725:160:93:-;;;;;;;;;;774:1;1475:23559:11;763:7:93;1475:23559:11;;;;763:12:93;759:66;;763:7;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;5247:11;;:127;;;;725:160:93;5230:203:11;;5573:27;;5537:21;;5572:28;5573:27;5537:21;;:12;:21;;:12;:::i;:::-;:21;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;5573:17;1475:23559;;;;;5573:27;;1475:23559;5573:27;1475:23559;;;;;5573:27;5572:28;;1475:23559;5572:28;5568:83;;-1:-1:-1;;5915:2103:11;;;5952:9;;;;;;;;-1:-1:-1;5947:950:11;5963:10;;;;;;5915:2103;;;;;;;;;;8155:22;5915:2103;;;8132:10;8155:22;;:::i;:::-;;;:::i;:::-;763:7:93;1475:23559:11;;-1:-1:-1;;;;1475:23559:11;-1:-1:-1;;;1475:23559:11;;;:::o;5952:9::-;6038:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6132:6;;6128:176;;5952:9;6365:12;;6540:18;6365:12;6701:59;6365:12;;6513:14;6365:12;;1475:23559;6365:12;;;6560:15;6365:12;6675:85;6365:12;;;:::i;:::-;1475:23559;6419:15;1475:23559;;;;:::i;6419:15::-;6513:14;;:::i;:::-;6540:18;;:::i;:::-;6560:15;;;;;;;:::i;:::-;;;:::i;6701:59::-;6675:85;;:::i;:::-;1475:23559;;5952:9;;;;;;;;;;;6128:176;6170:17;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;6170:29;6166:116;;6128:176;;;;;;;;;;;;;5915:2103;6940:9;;;;;;;;6951:10;;;;;;5915:2103;;;;;;;;;8155:22;5915:2103;;;;;6940:9;7026:12;;;;;;;:::i;:::-;7120:6;;7116:176;;6940:9;7595:73;7353:12;;;;;;:::i;:::-;1475:23559;;7548:15;7501:14;1475:23559;7407:15;1475:23559;;;;:::i;7407:15::-;7501:14;;;:::i;:::-;7528:18;;;;;:::i;:::-;7548:15;;;;;;;:::i;:::-;1475:23559;;;;;;;;;7595:73;;;7646:10;;;;7595:73;;;;;:::i;:::-;;:4;-1:-1:-1;7595:4:11;:73;;;;;-1:-1:-1;7595:73:11;;;6940:9;7591:277;;;;6940:9;1475:23559;;;6940:9;;7591:277;7789:43;;1475:23559;7789:43;;;:::i;:::-;7591:277;;;;7595:73;;;;;;;-1:-1:-1;7595:73:11;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;7116:176;7158:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;7158:29;7154:116;;7116:176;;;;5247:127;5341:27;;;;5305:31;;;5275:25;;;5274:63;:95;:100;;5247:127;;1475:23559;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;1475:23559:11;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;10566:2019::-;;;10758:18;;;:::i;:::-;1475:23559;;;:::i;:::-;10754:91;;10872:15;;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;10942:22;;;10965:19;10942:43;10965:19;;;1475:23559;10942:43;;1475:23559;;;;;;;;;;10942:43;1475:23559;-1:-1:-1;;;;;1475:23559:11;;10758:18;1475:23559;;;;;;;;;;;11086:20;;;1475:23559;11049:57;;;;:122;;;10566:2019;11049:215;;;;10566:2019;11028:306;;;11614:10;;11564:61;;;;:::i;:::-;11748:9;;;;;;;;;;;;;;:::i;:::-;11817:19;;;;;;;:::i;:::-;11614:10;;;;11838:23;;;;;:::i;:::-;11892:7;;;:::i;:::-;12010:17;;;;;;;;:::i;:::-;12029:6;;;;;;:::i;:::-;1475:23559;;:::i;:::-;;;;11086:20;12074:186;;1475:23559;;;12074:186;;;1475:23559;12351:17;;;:::i;:::-;12382:19;;;;:::i;:::-;1475:23559;12074:186;1475:23559;12318:19;;;;;1475:23559;11614:10;;12052:449;;;;:::i;:::-;;;;;12074:186;1475:23559;;10566:2019;:::o;11028:306::-;1475:23559;;-1:-1:-1;;;11304:15:11;;;;;11049:215;11192:34;;;;;;:71;;;;11049:215;;;;;;11192:71;11230:33;;;-1:-1:-1;11192:71:11;;;;11049:122;11126:23;;:45;;:23;;1475:23559;;;;;;;;11126:15;1475:23559;;;;;;;11126:23;11150:20;;;1475:23559;;;;;;;;;;11126:45;11049:122;;;10754:91;1475:23559;;-1:-1:-1;;;10816:18:11;;;;;1475:23559;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1475:23559:11;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;:::o;4060:3692:8:-;;;;1475:23559:11;;:::i;:::-;;;;:::i;:::-;4432:23:8;1475:23559:11;4608:18:8;;;;1475:23559:11;4586:20:8;;;1475:23559:11;4608:18:8;:::i;:::-;4642:21;;;1475:23559:11;;4642:26:8;;;4736:18;;;;;1475:23559:11;4736:18:8;4856;4736;;;;1475:23559:11;4836:18:8;4736;4756;4736;;;;:::i;:::-;4756;;;;;;;:::i;:::-;;;;;:::i;:::-;4836;;:::i;:::-;4856;;;;;:::i;:::-;1475:23559:11;;;:::i;:::-;;;;;:::i;:::-;4818:16:8;4910:4;;4818:16;;;1475:23559:11;;7023:159:8;7056:126;4818:16;4638:2321;7111:21;;;;;;:::i;:::-;7056:126;:::i;:::-;1475:23559:11;;;;;;;;;;;;;;;;;7023:159:8;7196:20;;;:::i;:::-;1475:23559:11;;;:::i;:::-;7196:37:8;;7477:10;;-1:-1:-1;;;;;;7365:20:8;;;:::i;:::-;1475:23559:11;7365:34:8;:66;;-1:-1:-1;7365:66:8;;;;7477:10;:::i;7365:66::-;7411:20;;;;:::i;:::-;7365:66;7477:10;:::i;7192:554::-;7648:17;;;;;7711:10;7648:17;;;:::i;4638:2321::-;4949:44;:35;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;4949:44:8;4962:21;;;5849:20;;;:::i;:::-;5905:46;:35;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;5905:35:8;1475:23559:11;;;;;;;5905:46:8;5969:266;;;6288:35;;:50;:35;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;6288:35:8;1475:23559:11;;;;;6288:50:8;6388:44;:35;;1475:23559:11;;2614:12:13;1475:23559:11;;;;;;;6388:35:8;1475:23559:11;;;-1:-1:-1;;;;;;1475:23559:11;;;6388:44:8;1475:23559:11;;6365:92:8;1475:23559:11;6365:92:8;1475:23559:11;;6365:92:8;;;;;;;;;;;;;:::i;:::-;6288:187;;;;;;;:::i;:::-;6498:7;;6494:230;;7023:159;1475:23559:11;;;;;;;6790:55:8;1475:23559:11;6365:92:8;1475:23559:11;7056:126:8;1475:23559:11;;6790:55:8;;;;;;:::i;:::-;6742:103;;;;;;;;;;4638:2321;;6494:230;6615:91;;6365:92;6615:91;;;5969:266;;;;;;;4945:2004;1475:23559:11;;-1:-1:-1;;;6891:43:8;;;;;1475:23559:11;;;;;3328:27:4;1475:23559:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;162:6:1;1475:23559:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;9496:780:8:-;9725:17;1475:23559:11;;;;;9496:780:8;;;9717:26;;-1:-1:-1;;;;;1475:23559:11;;-1:-1:-1;;;;;1475:23559:11;;;9717:26:8;-1:-1:-1;;;;;1475:23559:11;;;;9713:557:8;;9496:780;;;;;;:::o;9713:557::-;9803:64;1475:23559:11;;;;;;;;;;;;;;;;;;;;;9803:64:8;;;;;;:::i;:::-;;;;;;;;;9713:557;1475:23559:11;;;9803:64:8;;;9713:557;9773:94;;;;1475:23559:11;9886:21:8;9882:378;1475:23559:11;;;-1:-1:-1;1475:23559:11;;-1:-1:-1;;9882:378:8;9713:557;;;;;;;9882:378;10045:44;10093:32;10045:44;;:::i;:::-;1475:23559:11;10101:24:8;1475:23559:11;10109:15:8;1475:23559:11;;;;;;;;10101:24:8;10093:32;;:::i;:::-;-1:-1:-1;10041:219:8;9882:378;10041:219;1475:23559:11;;-1:-1:-1;;;10224:21:8;;9803:64;;10224:21;9803:64;;;;;;;1475:23559:11;9803:64:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;10418:1032;;11415:28;10418:1032;;;;1475:23559:11;-1:-1:-1;1475:23559:11;10731:12:8;1475:23559:11;;162:6:1;1475:23559:11;;;;10723:46:8;1475:23559:11;;-1:-1:-1;1475:23559:11;;;;;10723:46:8;;:::i;:::-;1475:23559:11;;;;;;;;10813:18:8;;;10809:596;1475:23559:11;;;;;;;;11042:21:8;1475:23559:11;;;;;;11042:21:8;:::i;:::-;1475:23559:11;;-1:-1:-1;;;;;1475:23559:11;;;;;;10809:596:8;11357:37;11206:80;;;;;;1475:23559:11;8880:54:8;11206:80;-1:-1:-1;1475:23559:11;;;10731:12:8;1475:23559:11;;;;;;;8880:54:8;;:::i;:::-;1475:23559:11;;;;;;;;;;;10809:596:8;8978:56;8974:143;;10809:596;1475:23559:11;;11357:21:8;1475:23559:11;;;;;;;;;11357:21:8;;:::i;:::-;1475:23559:11;;11357:37:8;;:::i;8974:143::-;11357:21;1475:23559:11;;;;;;;;;8974:143:8;;;;;1475:23559:11;;;:::i;:::-;;;;;;:::i;:::-;;;11699:457:8;;11899:251;-1:-1:-1;11899:251:8;;-1:-1:-1;11899:251:8;;;11699:457::o;11899:251::-;;;;;;;1201:1977:9;;-1:-1:-1;1364:1808:9;;;;;;;;;;;;;;;1201:1977;;;:::o;1364:1808::-;-1:-1:-1;;1364:1808:9;;;;;;;;;;;;;;;;;;;;;14834:2232:11;;;;;15072:13;15050:18;;;:::i;:::-;1475:23559;;;:::i;:::-;15050:35;15046:91;;15164:15;;;;;:::i;:::-;15265:22;:43;:22;;1475:23559;;;;;;;;;;;;;;;;15265:22;15288:19;;;1475:23559;;;;;;;;;;15265:43;1475:23559;-1:-1:-1;;;;;1475:23559:11;;10758:18;1475:23559;;;;;;;;;;15072:13;15344:33;1475:23559;15381:20;;;1475:23559;15344:57;;;;:122;;;14834:2232;15344:215;;;;14834:2232;15323:306;;;15859:61;15909:10;15859:61;;;:::i;:::-;15288:19;;;;;;;;;;;;;;;1475:23559;16043:9;;;;;;:::i;:::-;16162:17;;;;;;:::i;:::-;16181:6;;;;;;:::i;:::-;16261:19;;;;;:::i;:::-;16294:23;;;;;;:::i;:::-;1475:23559;-1:-1:-1;;;;;16351:18:11;;;:::i;:::-;1475:23559;16351:32;:62;;16503:186;16351:62;16481:501;16351:62;16799:19;16351:62;16481:501;16351:62;16503:186;16351:62;16448:7;16351:62;;;;;16448:7;:::i;:::-;1475:23559;;:::i;:::-;;;;15288:19;;;1475:23559;15381:20;16503:186;;1475:23559;;;16503:186;;;1475:23559;;16503:186;16723:32;:18;;;:::i;:32::-;:62;;;;;;16832:17;16162;;;16832;:::i;:::-;16261:19;16863;16261;;;16863;:::i;:::-;1475:23559;;;16799:19;;;;1475:23559;16481:501;;;:::i;:::-;;;;1475:23559;;14834:2232;:::o;16723:62::-;16767:18;;;:::i;:::-;16723:62;;;16351;16395:18;;;:::i;:::-;16351:62;16448:7;:::i;15344:215::-;15487:34;;;;;;:71;;;;15344:215;;;;;;15487:71;15525:33;;;-1:-1:-1;15487:71:11;;;;15344:122;15421:23;;:45;;:23;;1475:23559;;;;;;;;11126:15;1475:23559;;;;;;;15421:23;15445:20;;;1475:23559;;;;;;;;;;15421:45;15344:122;;;17460:1635;;;;;17647:27;17643:1446;;17460:1635;;;;;:::o;17643:1446::-;19055:22;;-1:-1:-1;;;;;1475:23559:11;;;;;17690:1209;;17643:1446;-1:-1:-1;;19033:20:11;1475:23559;-1:-1:-1;;;;;1475:23559:11;;-1:-1:-1;19055:22:11;;:::i;:::-;17643:1446;;;;;;17690:1209;1475:23559;17907:24;1475:23559;;17903:982;17690:1209;17903:982;-1:-1:-1;;;;;1475:23559:11;;;;;;1925:14:3;1475:23559:11;;;;;162:6:1;;17990:50:11;;1475:23559;17990:50;;:::i;:::-;1475:23559;18120:28;;18116:751;;17903:982;;17690:1209;;18116:751;1475:23559;18782:62;1475:23559;;;;;18782:62;1475:23559;;;;;;;;18116:751;1475:23559;;;18594:20;18590:161;;18116:751;1475:23559;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;18782:62;;;;18116:751;;;;;;18590:161;18700:23;;;;;;:::i;:::-;18590:161;;1475:23559;;;:::i;:::-;;;19366:357;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;19592:20;1475:23559;19592:20;1475:23559;19567:4;;19592:20;:::i;19487:230::-;811:20:111;;:25;807:77;;1475:23559:11;;-1:-1:-1;;;943:55:111;;;;;;-1:-1:-1;;;;;1475:23559:11;;;943:55:111;;;1475:23559:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;943:55:111;1475:23559:11;;;;943:55:111;1475:23559:11;943:55:111;929:70;;;;;;:::i;:::-;1014:7;;1010:68;;1475:23559:11;;1092:15:111;1088:139;;19487:230:11;;19366:357::o;1088:139:111:-;1128:24;943:55;1128:24;;;1127:25;1128:24;;;;;;:::i;1127:25::-;1123:94;;19366:357:11:o;1123:94:111:-;1475:23559:11;;-1:-1:-1;;;1179:23:111;;943:55;;1179:23;807:77;1475:23559:11;;-1:-1:-1;;;859:14:111;;;;;20196:1029:11;;;;1475:23559;20196:1029;1475:23559;;20805:18;20801:121;;20196:1029;1475:23559;;;21096:21;;21092:127;;20196:1029;;;;:::o;21092:127::-;21191:16;1475:23559;;;;;;;;;;;21191:16;;:::i;20801:121::-;1475:23559;;20897:13;;1475:23559;-1:-1:-1;;;;;1475:23559:11;20897:13;;;:::i;:::-;20801:121;;;22466:278;;;;22671:65;;;;1028:33:10;22671:65:11;;1475:23559;;;;;;-1:-1:-1;1475:23559:11;;;;;-1:-1:-1;1475:23559:11;;-1:-1:-1;1475:23559:11;;;;-1:-1:-1;1475:23559:11;162:6:1;22466:278:11:o;22671:65::-;;;;1475:23559;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;:::o;24141:736::-;;;;;24369:16;;;;;;;;;;:::i;:::-;24407;;;;24403:404;;24141:736;24863:6;;;;;;;:::i;24403:404::-;384:2:1;24443:39:11;;24439:117;;24619:16;;;;;;:::i;:::-;384:2:1;;1465:27:49;;;1547:13;24422:1:11;1542:374:49;1562:10;;;;;;933:41;;;;;24570:156:11;;24863:6;24752:44;;;;:::i;:::-;24403:404;;;;;24570:156;1475:23559;;-1:-1:-1;;;24691:20:11;;;;;1547:13:49;1594:8;;;;;;;;;;;;:::i;:::-;:17;1475:23559:11;;;;:::i;:::-;;;;:::i;:::-;1594:61:49;;1705:8;;;;;:::i;:::-;1475:23559:11;24422:1;2093:119:49;;;1475:23559:11;2093:119:49;24422:1:11;2093:119:49;1590:257;;1475:23559:11;1547:13:49;;;;;;;;;1590:257;1817:8;;;;;:::i;:::-;1475:23559:11;2093:119:49;24422:1:11;2093:119:49;;;1475:23559:11;2093:119:49;24422:1:11;2093:119:49;1590:257;;;24439:117:11;1475:23559;;-1:-1:-1;;;24509:32:11;;;;;1475:23559;;;;;24509:32;23131:485;;23260:7;1475:23559;23271:13;23260:24;23256:354;23271:13;;;23517:14;1475:23559;23444:15;1475:23559;;;;23415:59;;;;1475:23559;;;;;;;;;;;;;;;23415:59;;1475:23559;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;23256:354;1475:23559;;;23405:70;;23517:14;:::i;1475:23559::-;;;:::i;:::-;;;23256:354;1475:23559;;-1:-1:-1;;;23583:16:11;;;;;1475:23559;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1475:23559:11;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;-1:-1:-1;;1475:23559:11;;;;;;;;-1:-1:-1;;1475:23559:11;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;1702:555:15:-;;;;;1475:23559:11;;;:::i;:::-;1939:39:15;;;-1:-1:-1;1994:15:15;-1:-1:-1;;;;;1475:23559:11;;1994:84:15;;;;;1957:21;1475:23559:11;1994:84:15;1475:23559:11;;;;;;;;;;;;;;1994:84:15;;;;;;:::i;:::-;;;;;;;;;1935:316;1994:84;;1935:316;1702:555::o;1994:84::-;;;;;;:::i;:::-;;;:::i;:::-;;;1935:316;1475:23559:11;;2117:22:15;1475:23559:11;;:::i;:::-;2099:40:15;2095:156;;1935:316;;;;;1702:555::o;2095:156::-;2155:15;-1:-1:-1;;;;;1475:23559:11;;2155:85:15;;;;;1957:21;1475:23559:11;2155:85:15;1475:23559:11;;;;;;;;;;;;;;2155:85:15;;;;;;:::i;:::-;;;;;;;;;2095:156;2155:85;;2095:156;;;;;;;2155:85;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1475:23559:11;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;3417:654:51;;;;;;;;;;;;;;;;1475:23559:11;3417:654:51;1475:23559:11;;;;;:::i;:::-;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;;;;:::i;:::-;3417:654:51;;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;;;3417:654:51;;;1475:23559:11;;3417:654:51;;1475:23559:11;3417:654:51:o;:::-;1475:23559:11;;;;;;3417:654:51;;;;;;;;;;;;;:::o;:::-;;;1475:23559:11;;;;;;;;;;3417:654:51;;;;;;;;;;;1475:23559:11;;;;;;;;3417:654:51;;;;;;1475:23559:11;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;3417:654:51;;;;;;;:::i;4557:1130::-;4753:913;3417:654;;1475:23559:11;;;;:::i;:::-;4905:17:51;;5221:427;4905:17;4787:412;4905:17;;;1475:23559:11;4948:17:51;;;1475:23559:11;4991:16:51;;;1475:23559:11;5033:16:51;;;1475:23559:11;5075:20:51;;;3417:654;1475:23559:11;;;;:::i;:::-;5121:16:51;;;1475:23559:11;-1:-1:-1;;;;;1475:23559:11;5163:14:51;;;1475:23559:11;5163:14:51;;;-1:-1:-1;;;;;1475:23559:11;;4948:17:51;1475:23559:11;4787:412:51;;;;;;:::i;:::-;;;1475:23559:11;;4787:412:51;;;;;;;;:::i;:::-;5257:12;;;1475:23559:11;5257:12:51;;5221:427;;-1:-1:-1;;;;;1475:23559:11;5295:15:51;;;;1475:23559:11;5336:13:51;;;;1475:23559:11;5375:11:51;;;1475:23559:11;5439:13:51;;;;4948:17;1475:23559:11;5422:31:51;;3417:654;5422:31;;;3417:654;;;:::i;:::-;5422:31;;;;;;;;:::i;:::-;1475:23559:11;5412:42:51;;5507:13;;;;;4948:17;1475:23559:11;5490:31:51;;3417:654;5490:31;;;3417:654;;;:::i;:::-;5490:31;;;;;;;;:::i;:::-;1475:23559:11;5480:42:51;;5548:15;5599:26;1475:23559:11;5548:15:51;;;1475:23559:11;;;;;;5599:26:51;;;1475:23559:11;;;;;5589:37:51;4948:17;1475:23559:11;;-1:-1:-1;;;;;1475:23559:11;;;5221:427:51;;;1475:23559:11;;;3417:654:51;;;1475:23559:11;;;;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;;3417:654:51;;1475:23559:11;;;3417:654:51;;;1475:23559:11;3417:654:51;;;1475:23559:11;;;3417:654:51;;;;5221:427;;;;;;;;;:::i;:::-;4753:913;:::i;:::-;1475:23559:11;;;;4726:954:51;;4557:1130::o;1475:23559:11:-;;;;:::o;:::-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1475:23559:11;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;-1:-1:-1;;;1475:23559:11;;;;;;;8865:2712:46;9027:50;9035:12;;;;:::i;:::-;:23;;9027:50;:::i;:::-;9087:63;1475:23559:11;;;9095:33:46;;9087:63;:::i;:::-;9194:2350;;;;;;;-1:-1:-1;9194:2350:46;;;;;;;8865:2712;:::o;9194:2350::-;;;;9045:2;9194:2350;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9194:2350:46;;9045:2;9194:2350;-1:-1:-1;;9194:2350:46;;;;8865:2712::o;9194:2350::-;;;;;;;;;;;;;;;;1475:23559:11;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;826:519:53:-;;;1021:4;:69;;;;1475:23559:11;;-1:-1:-1;;;1021:69:53;;;1475:23559:11;;1021:69:53;;;;;;;;;:::i;:::-;;:4;;;:69;;;;;;826:519;-1:-1:-1;1017:322:53;;1475:23559:11;1271:57:53;1475:23559:11;1271:57:53;1475:23559:11;;;;;1233:19:53;1182:48;:27;1475:23559:11;1182:27:53;;1475:23559:11;;;;2073:14:53;1475:23559:11;;;;;;;1182:27:53;1475:23559:11;;:::i;1182:48:53:-;162:6:1;1475:23559:11;;1271:57:53;;;;;:::i;:::-;;;;826:519::o;1021:69::-;;;;:::i;:::-;;;;1475:23559:11;;;;:::o;:::-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1475:23559:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:23559:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1078:416:94:-;;;;1178:18;;;;1221:34;;;;:::i;:::-;-1:-1:-1;;;;;1475:23559:11;;;;;1221:44:94;1217:57;;1475:23559:11;;-1:-1:-1;;;1294:21:94;;;;;1174:314;1475:23559:11;1350:50:94;1475:23559:11;1350:50:94;1475:23559:11;;;;;;;;;;;;1350:50:94;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1475:23559:11;1350:50:94;;;;;;;1174:314;1200:1;1350:50;;;1174:314;-1:-1:-1;;;;;;;1475:23559:11;1350:73:94;1346:86;;1475:23559:11;;-1:-1:-1;;;1452:25:94;;1350:50;;1452:25;1350:50;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;3167:398;;;1977:2;1967:12;;1977:2;;-1:-1:-1;1995:211:94;;;;-1:-1:-1;1995:211:94;;;;;;;;1963:653;2643:66;2630:79;;2626:145;;1475:23559:11;;;2790:2:94;2785:7;;;:18;;;;1963:653;2781:85;;;1475:23559:11;;;;;;;;;;;3447:24:94;1475:23559:11;;;;;;;;;;;;;;;-1:-1:-1;3447:24:94;;;-1:-1:-1;1475:23559:11;;3447:24:94;;;;;;1963:653;-1:-1:-1;3447:24:94;;-1:-1:-1;;;;;1475:23559:11;;3486:20:94;3482:77;;3167:398::o;3482:77::-;1475:23559:11;;-1:-1:-1;;;3529:19:94;;;;;3447:24;;;:::i;:::-;;;2781:85;1475:23559:11;;-1:-1:-1;;;2826:29:94;;1475:23559:11;;;2826:29:94;;;1475:23559:11;;;3328:27:4;2785:18:94;2801:2;2796:7;;;;2785:18;;;2626:145;1475:23559:11;;-1:-1:-1;;;2732:28:94;;;;;1963:653;2236:2;2226:12;;2236:2;;-1:-1:-1;2254:284:94;;;;;;;;;;;-1:-1:-1;;;;;2254:284:94;;;;;1963:653;;2222:394;2236:2;1475:23559:11;-1:-1:-1;;;2575:30:94;;;;;1475:23559:11;;;;;;3328:27:4;687:465:113;747:399;;;;;;687:465;:::o;747:399::-;;1475:23559:11;;;;;;747:399:113;;;;;;;687:465::o;747:399::-;;;;;;;808:415:114;1096:7;808:415;;;-1:-1:-1;998:84:114;;;;;;;;1096:7;;1475:23559:11;1096:7:114;1092:125;;808:415;;;;:::o;1092:125::-;-1:-1:-1;;;;;1475:23559:11;;1119:38:114;;;;;1475:23559:11;1171:35:114;1475:23559:11;;1171:35:114;1475:23559:11;;;;;;1119:38:114;;;;;;;;;;;;;;1092:125;1119:38;;1092:125;-1:-1:-1;1475:23559:11;;-1:-1:-1;;;1171:35:114;;-1:-1:-1;;;;;1475:23559:11;;;1119:38:114;1171:35;;1475:23559:11;162:6:1;;;1475:23559:11;;;;;;;;;;;162:6:1;;;;;1171:35:114;;;;;;;;;1092:125;1171:35;;1092:125;;;;;;1171:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1119:38;;;;;;:::i;:::-;;;;;;;:::i;:::-;;",
    "linkReferences": {},
    "immutableReferences": {
      "10886": [
        {
          "start": 1435,
          "length": 32
        },
        {
          "start": 1742,
          "length": 32
        },
        {
          "start": 2197,
          "length": 32
        },
        {
          "start": 3762,
          "length": 32
        },
        {
          "start": 8316,
          "length": 32
        },
        {
          "start": 8815,
          "length": 32
        },
        {
          "start": 10856,
          "length": 32
        }
      ],
      "1666": [
        {
          "start": 8059,
          "length": 32
        },
        {
          "start": 17285,
          "length": 32
        }
      ],
      "3819": [
        {
          "start": 4106,
          "length": 32
        },
        {
          "start": 18500,
          "length": 32
        },
        {
          "start": 18655,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": "463357ec",
    "WETH()": "ad5c4648",
    "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": "91be1360",
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOrderNonces(uint256[])": "79ed31d4",
    "cancelSubsetNonces(uint256[])": "134849a6",
    "chainId()": "9a8a0592",
    "claimOwnership()": "4e71e0c8",
    "creatorFeeManager()": "838b8f5c",
    "domainSeparator()": "f698da25",
    "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": "0db2bd1e",
    "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "10e89db4",
    "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "41fb13d0",
    "failedMessages(uint16,bytes,uint256)": "8ee74912",
    "forceResumeReceive(uint16,bytes)": "42d65a8d",
    "getConfig(uint16,uint16,address,uint256)": "f5ecbdbc",
    "getTrustedRemoteAddress(uint16)": "9f38369a",
    "hashBatchOrder(bytes32,uint256)": "86c07642",
    "incrementBidAskNonces(bool,bool)": "d5b010f5",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "isTrustedRemote(uint16,bytes)": "3d8b38f6",
    "lzEndpoint()": "b353aaa7",
    "lzReceive(uint16,bytes,uint64,bytes)": "001d3567",
    "maxCreatorFeeBp()": "6e90c014",
    "minDstGasLookup(uint16,uint16)": "8cfd8f5c",
    "nonblockingLzReceive(uint16,bytes,uint64,bytes)": "66ad5c8a",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "precrime()": "950c8a74",
    "protocolFeeRecipient()": "64df049e",
    "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": "37e8cc71",
    "retryMessage(uint16,bytes,uint64,bytes)": "d1deba1f",
    "setConfig(uint16,uint16,uint256,bytes)": "cbed8b9c",
    "setMinDstGas(uint16,uint16,uint256)": "df2a5b3b",
    "setPrecrime(address)": "baf3292d",
    "setReceiveVersion(uint16)": "10ddb137",
    "setSendVersion(uint16)": "07e0db17",
    "setTrustedRemote(uint16,bytes)": "eb8d72b7",
    "setTrustedRemoteAddress(uint16,bytes)": "a6c3d165",
    "strategyInfo(uint256)": "bb91c339",
    "transferManager()": "46ea2552",
    "transferOwnership(address)": "f2fde38b",
    "trustedRemoteLookup(uint16)": "7533d788",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCreatorFeeManager(address)": "b647a404",
    "updateCurrencyStatus(address,bool)": "1d3c4268",
    "updateDomainSeparator()": "89ccfe89",
    "updateETHGasLimitForTransfer(uint256)": "974e7c9f",
    "updateMaxCreatorFeeBp(uint16)": "46b625bc",
    "updateProtocolFeeRecipient(address)": "1df47f80",
    "updateStrategy(uint256,bool,uint16,uint16)": "d5a06adf",
    "userBidAskNonces(address)": "a39bf29f",
    "userOrderNonce(address,uint256)": "20cd05c7",
    "userSubsetNonce(address,uint256)": "ea179b76"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChainIdInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatorFeeBpTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20TransferFromFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthsInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"MerkleProofTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewGasLimitETHTransferTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewProtocolFeeRecipientCannotBeNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorForStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoncesInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotV2Strategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullSignerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutsideOfTimeRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteTypeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameDomainSeparator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureEOAInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureERC1271Invalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SignatureLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureParameterSInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"SignatureParameterVInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasNoSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"StrategyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"affiliateFee\",\"type\":\"uint256\"}],\"name\":\"AffiliatePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"name\":\"NewBidAskNonces\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creatorFeeManager\",\"type\":\"address\"}],\"name\":\"NewCreatorFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewDomainSeparator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"NewGasLimitETHTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCreatorFeeBp\",\"type\":\"uint256\"}],\"name\":\"NewMaxCreatorFeeBp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"OrderNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"SubsetNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"askUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAGIC_VALUE_ORDER_NONCE_EXECUTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelOrderNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelSubsetNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFeeManager\",\"outputs\":[{\"internalType\":\"contract ICreatorFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker[]\",\"name\":\"takerBids\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker[]\",\"name\":\"makerAsks\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"makerSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree[]\",\"name\":\"merkleTrees\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAtomic\",\"type\":\"bool\"}],\"name\":\"executeMultipleTakerBids\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proofLength\",\"type\":\"uint256\"}],\"name\":\"hashBatchOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchOrderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"bid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ask\",\"type\":\"bool\"}],\"name\":\"incrementBidAskNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCreatorFeeBp\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"restrictedExecuteTakerBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferManager\",\"outputs\":[{\"internalType\":\"contract TransferManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCreatorFeeManager\",\"type\":\"address\"}],\"name\":\"updateCreatorFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"updateETHGasLimitForTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxCreatorFeeBp\",\"type\":\"uint16\"}],\"name\":\"updateMaxCreatorFeeBp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"newStandardProtocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMinTotalFee\",\"type\":\"uint16\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBidAskNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSubsetNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"MerkleProofTooLarge(uint256)\":[{\"params\":{\"length\":\"Proof length\"}}],\"NotV2Strategy()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyHasNoSelector()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyNotAvailable(uint256)\":[{\"details\":\"It is returned if there is no implementation address and the strategyId is strictly greater than 0.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"details\":\"It can only be returned for owner operations.\"}]},\"kind\":\"dev\",\"methods\":{\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"details\":\"Strategies have an id that is incremental.      Only callable by owner.\",\"params\":{\"implementation\":\"Implementation address\",\"isMakerBid\":\"Whether the function selector is for maker bid\",\"maxProtocolFeeBp\":\"Maximum protocol fee (in basis point)\",\"minTotalFeeBp\":\"Minimum total fee (in basis point)\",\"selector\":\"Function selector for the strategy\",\"standardProtocolFeeBp\":\"Standard protocol fee (in basis point)\"}},\"cancelOrderNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.\",\"params\":{\"orderNonces\":\"Array of order nonces\"}},\"cancelSubsetNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas.\",\"params\":{\"subsetNonces\":\"Array of subset nonces\"}},\"constructor\":{\"params\":{\"_owner\":\"Owner address\",\"_protocolFeeRecipient\":\"Protocol fee recipient address\",\"_transferManager\":\"Transfer manager address\",\"_weth\":\"Wrapped ETH address\"}},\"executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"isAtomic\":\"Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail\",\"makerAsks\":\"Array of maker ask structs\",\"makerSignatures\":\"Array of maker signatures\",\"merkleTrees\":\"Array of merkle tree structs if the signature contains multiple maker orders\",\"takerBids\":\"Array of taker bid structs\"}},\"executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerBid\":\"Maker bid struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerAsk\":\"Taker ask struct\"}},\"executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerAsk\":\"Maker ask struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerBid\":\"Taker bid struct\"}},\"hashBatchOrder(bytes32,uint256)\":{\"params\":{\"proofLength\":\"Merkle proof length\",\"root\":\"Merkle root\"},\"returns\":{\"batchOrderHash\":\"The batch order hash\"}},\"incrementBidAskNonces(bool,bool)\":{\"details\":\"The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.\",\"params\":{\"ask\":\"Whether to increment the user ask nonce\",\"bid\":\"Whether to increment the user bid nonce\"}},\"restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)\":{\"details\":\"This function is only callable by this contract. It is used for non-atomic batch order matching.\",\"params\":{\"makerAsk\":\"Maker ask struct\",\"orderHash\":\"Hash of the maker ask order\",\"sender\":\"Sender address (i.e. the initial msg sender)\",\"takerBid\":\"Taker bid struct\"},\"returns\":{\"protocolFeeAmount\":\"Protocol fee amount\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCreatorFeeManager(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newCreatorFeeManager\":\"Address of the creator fee manager\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}},\"updateDomainSeparator()\":{\"details\":\"Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id.\"},\"updateETHGasLimitForTransfer(uint256)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newGasLimitETHTransfer\":\"New gas limit for ETH transfer\"}},\"updateMaxCreatorFeeBp(uint16)\":{\"details\":\"The maximum value that can be set is 25%.      Only callable by owner.\",\"params\":{\"newMaxCreatorFeeBp\":\"New maximum creator fee (in basis point)\"}},\"updateProtocolFeeRecipient(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newProtocolFeeRecipient\":\"New protocol fee recipient address\"}},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the strategy must be active\",\"newMinTotalFee\":\"New minimum total fee (in basis point)\",\"newStandardProtocolFee\":\"New standard protocol fee (in basis point)\",\"strategyId\":\"Strategy id\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerInvalid()\":[{\"notice\":\"It is returned if the function cannot be called by the sender.\"}],\"ChainIdInvalid()\":[{\"notice\":\"It is returned if the domain separator should change.\"}],\"CreatorFeeBpTooHigh()\":[{\"notice\":\"It is returned if the creator fee (in basis point) is too high.\"}],\"CurrencyInvalid()\":[{\"notice\":\"It is returned if the currency is invalid.\"}],\"ERC20TransferFromFail()\":[{\"notice\":\"It is emitted if the ERC20 transferFrom fails.\"}],\"LengthsInvalid()\":[{\"notice\":\"It is returned if there is either a mismatch or an error in the length of the array(s).\"}],\"MerkleProofInvalid()\":[{\"notice\":\"It is returned if the merkle proof provided is invalid.\"}],\"MerkleProofTooLarge(uint256)\":[{\"notice\":\"It is returned if the length of the merkle proof provided is greater than tolerated.\"}],\"NewGasLimitETHTransferTooLow()\":[{\"notice\":\"It is returned if the gas limit for a standard ETH transfer is too low.\"}],\"NewProtocolFeeRecipientCannotBeNullAddress()\":[{\"notice\":\"It is returned if the new protocol fee recipient is set to address(0).\"}],\"NoSelectorForStrategy()\":[{\"notice\":\"It is returned if there is no selector for maker ask/bid for a given strategyId,         depending on the quote type.\"}],\"NoncesInvalid()\":[{\"notice\":\"It is returned if the nonces are invalid.\"}],\"NotAContract()\":[{\"notice\":\"It is emitted if the call recipient is not a contract.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotV2Strategy()\":[{\"notice\":\"If the strategy has not set properly its implementation contract.\"}],\"NullSignerAddress()\":[{\"notice\":\"It is emitted if the signer is null.\"}],\"OutsideOfTimeRange()\":[{\"notice\":\"It is returned if the current block timestamp is not between start and end times in the maker order.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"QuoteTypeInvalid()\":[{\"notice\":\"It is returned if the maker quote type is invalid.\"}],\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}],\"SameDomainSeparator()\":[{\"notice\":\"It is returned if the domain separator cannot be updated (i.e. the chainId is the same).\"}],\"SignatureEOAInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid for an EOA (the address recovered is not the expected one).\"}],\"SignatureERC1271Invalid()\":[{\"notice\":\"It is emitted if the signature is invalid for a ERC1271 contract signer.\"}],\"SignatureLengthInvalid(uint256)\":[{\"notice\":\"It is emitted if the signature's length is neither 64 nor 65 bytes.\"}],\"SignatureParameterSInvalid()\":[{\"notice\":\"It is emitted if the signature is invalid due to S parameter.\"}],\"SignatureParameterVInvalid(uint8)\":[{\"notice\":\"It is emitted if the signature is invalid due to V parameter.\"}],\"StrategyHasNoSelector()\":[{\"notice\":\"It is returned if the strategy has no selector.\"}],\"StrategyNotAvailable(uint256)\":[{\"notice\":\"It is returned if the strategy id has no implementation.\"}],\"StrategyNotUsed()\":[{\"notice\":\"It is returned if the strategyId is invalid.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"notice\":\"It is returned if the strategy's protocol fee is too high.\"}]},\"events\":{\"AffiliatePayment(address,address,uint256)\":{\"notice\":\"It is emitted when there is an affiliate fee paid.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewBidAskNonces(address,uint256,uint256)\":{\"notice\":\"It is emitted when there is an update of the global bid/ask nonces for a user.\"},\"NewCreatorFeeManager(address)\":{\"notice\":\"It is issued when there is a new creator fee manager.\"},\"NewDomainSeparator()\":{\"notice\":\"It is emitted if there is a change in the domain separator.\"},\"NewGasLimitETHTransfer(uint256)\":{\"notice\":\"It is emitted when there is a new gas limit for a ETH transfer (before it is wrapped to WETH).\"},\"NewMaxCreatorFeeBp(uint256)\":{\"notice\":\"It is issued when there is a new maximum creator fee (in basis point).\"},\"NewProtocolFeeRecipient(address)\":{\"notice\":\"It is issued when there is a new protocol fee recipient address.\"},\"NewStrategy(uint256,uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"It is emitted when a new strategy is added.\"},\"OrderNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when order nonces are cancelled for a user.\"},\"StrategyUpdated(uint256,bool,uint16,uint16)\":{\"notice\":\"It is emitted when an existing strategy is updated.\"},\"SubsetNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when subset nonces are cancelled for a user.\"},\"TakerAsk((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker ask transaction is completed.\"},\"TakerBid((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker bid transaction is completed.\"}},\"kind\":\"user\",\"methods\":{\"MAGIC_VALUE_ORDER_NONCE_EXECUTED()\":{\"notice\":\"Magic value nonce returned if executed (or cancelled).\"},\"WETH()\":{\"notice\":\"Wrapped ETH.\"},\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"This function allows the owner to add a new execution strategy to the protocol.\"},\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOrderNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of order nonces.\"},\"cancelSubsetNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of subset nonces.\"},\"chainId()\":{\"notice\":\"Current chainId.\"},\"constructor\":{\"notice\":\"Constructor\"},\"creatorFeeManager()\":{\"notice\":\"Creator fee manager.\"},\"domainSeparator()\":{\"notice\":\"Current domain separator.\"},\"executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"notice\":\"This function allows a user to batch buy with an array of taker bids (against an array of maker asks).\"},\"executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker ask (against a maker bid).\"},\"executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker bid (against a maker ask).\"},\"hashBatchOrder(bytes32,uint256)\":{\"notice\":\"This function returns the hash of the concatenation of batch order type hash and merkle root.\"},\"incrementBidAskNonces(bool,bool)\":{\"notice\":\"This function increments a user's bid/ask nonces.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"maxCreatorFeeBp()\":{\"notice\":\"Maximum creator fee (in basis point).\"},\"protocolFeeRecipient()\":{\"notice\":\"Protocol fee recipient.\"},\"restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)\":{\"notice\":\"This function is used to do a non-atomic matching in the context of a batch taker bid.\"},\"strategyInfo(uint256)\":{\"notice\":\"This returns the strategy information for a strategy id.\"},\"transferManager()\":{\"notice\":\"Transfer manager for ERC721 and ERC1155.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCreatorFeeManager(address)\":{\"notice\":\"This function allows the owner to update the creator fee manager address.\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"},\"updateDomainSeparator()\":{\"notice\":\"This function allows the owner to update the domain separator (if possible).\"},\"updateETHGasLimitForTransfer(uint256)\":{\"notice\":\"This function allows the owner to update the maximum ETH gas limit for a standard transfer.\"},\"updateMaxCreatorFeeBp(uint16)\":{\"notice\":\"This function allows the owner to update the maximum creator fee (in basis point).\"},\"updateProtocolFeeRecipient(address)\":{\"notice\":\"This function allows the owner to update the protocol fee recipient.\"},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"notice\":\"This function allows the owner to update parameters for an existing execution strategy.\"},\"userBidAskNonces(address)\":{\"notice\":\"This tracks the bid and ask nonces for a user address.\"},\"userOrderNonce(address,uint256)\":{\"notice\":\"This checks whether the order nonce for a user was executed or cancelled.\"},\"userSubsetNonce(address,uint256)\":{\"notice\":\"This checks whether the subset nonce for a user was cancelled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/OmniXExchange.sol\":\"OmniXExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5\",\"dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke\"]},\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x523e993d95d2958e25c77a9e5893e6281558ae23b7fbdcfd65fbd252e59e84c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ebe8e2ccc7dfa0a5f72e8d6b956115c323fb982ead23acb870094862b8cdf5a\",\"dweb:/ipfs/QmcRTYKnUQRTMtWv8CD3dPNn9ddjazEUnu8eZNk884xFE4\"]},\"contracts/core/BatchOrderTypehashRegistry.sol\":{\"keccak256\":\"0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2\",\"dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x9faa7b1be507069bda09813f01912e1642ef114ba8d9939f1b21c8831a6569cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd2e5b1d133cfed8fcdc847050fbce6101c847bdae1be62ff4caf8103e87de30\",\"dweb:/ipfs/QmWEGD2QiFswjbT67dPTUGNRtdZQV8bDc9m79RAiEksqs8\"]},\"contracts/core/ExecutionManager.sol\":{\"keccak256\":\"0x952233881b5f0514a8a45ad4a88b8e51912bd4968286a6a584e6c61e63a44e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47f6f5d607b0b7b6616376be562b9b849f9f23ec7085486927c6b2f225d98f1b\",\"dweb:/ipfs/QmdCibeE9LSbzZXMH6fzzTWAQkPKWXLBwXirytFnqMRw12\"]},\"contracts/core/InheritedStrategy.sol\":{\"keccak256\":\"0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860\",\"dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375\",\"dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa\"]},\"contracts/core/OmniXExchange.sol\":{\"keccak256\":\"0x2ddf35fbcabe0a96d0632072253388d7fd543d37f18d317d51dcd9055ed99f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42589814fb277656b443789b587d3cdeb43ae83874dd0e84f250cdab85d3bc6b\",\"dweb:/ipfs/QmWCApMdCLRa9xoqe91Tfnhrq11VhgXP58JqxaiUAmjzWV\"]},\"contracts/core/StrategyManager.sol\":{\"keccak256\":\"0x40407314de830d393b8a323ddde763d5076b5e395f402a9f02d7dbb2d524579d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e5298c9853acece5fd3e6df443598fc2f24b881db51ac7d4ede0abe1d55a88\",\"dweb:/ipfs/QmcHUxdGzwgfVqun4gaeUo3ynQYo5qKXqCKvtQ8oceP9gC\"]},\"contracts/core/TransferManager.sol\":{\"keccak256\":\"0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f\",\"dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r\"]},\"contracts/core/TransferSelectorNFT.sol\":{\"keccak256\":\"0xa73dbd84940748e287c817f5b1770829f50e40c3e97077f66de3ac6eed7b3404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb7638beff6ccb860fe556656a8c5e1b9c0351e7f2f1311be92529040aa535d\",\"dweb:/ipfs/QmSarekTmo6sPcDHPnt4z4NFe8zrsyMBN66i3GXFcWg2U9\"]},\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/errors/SharedErrors.sol\":{\"keccak256\":\"0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9\",\"dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICreatorFeeManager.sol\":{\"keccak256\":\"0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e\",\"dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"contracts/interfaces/IExecutionManager.sol\":{\"keccak256\":\"0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab\",\"dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps\"]},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"keccak256\":\"0x99e841ea21cba851b8356c00db1f42f8b6f51f7c69c9d51c567124530a3cf842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbdb5500c2cb54c39c153dcc7974d8e6eb4cd13c2ec52563ff7b2d0b61aa4b2d\",\"dweb:/ipfs/QmX4ukYKAuZuG3gEQTn8XdpRLXXF9wt8hcBTwXVd1Ly9Hq\"]},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0x8d3744d49cea963aca1774a20e95e4ea157725f8d70eaa8fdf601c4ca28cb99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3ad97a5758dae977499283cfb56d59038f285010c7b8672e13e2ed7cdb5d91c\",\"dweb:/ipfs/QmatHGWtb9mtSj4iZs1PpK8YnK5s9qP9BwTHkYdCqs7nhc\"]},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"keccak256\":\"0xc4a255f5e1c8636ff1f46c97eecfdf583f50d87f53f7dad5451bea4f14fe3132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45216f78e00d4de204e21db3b82eea06f3e1f347964a037cb93351e5c461de03\",\"dweb:/ipfs/Qmb7NMFmkrXsmp42pdaJEJxrctZBvrczmFxjjN52ddVmzP\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443\",\"dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS\"]},\"contracts/interfaces/IOmniXExchange.sol\":{\"keccak256\":\"0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb\",\"dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3\"]},\"contracts/interfaces/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c\",\"dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db\",\"dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD\"]},\"contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817\",\"dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw\"]},\"contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a\",\"dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E\"]},\"contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x880ceabc6474d5cfc5c533800c41bb7a12fd88980b66a1e4849916d214f2d8cd\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://428da4f9eed925935522d7bcf440535d26572880cb9df9c2fdba0bb5a4708b5f\",\"dweb:/ipfs/QmPkyKtuYqP8SdTBYspiqUh5dcJyztnRjA3uZuhv6rUhYk\"]},\"contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol\":{\"keccak256\":\"0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc\",\"dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0xbd931df89e634b16394752f0f45e0319a0644b2e9bea287de628bb922e1a9e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9d4ccd35cc6d3446e5985fdb28a5402c774a420f4ec2a844b1f92f54057e553\",\"dweb:/ipfs/QmP1NZW8aimhPL2oDzP7x566S1HdQkYVLNV5UyRbnEAra5\"]},\"contracts/lzApp/exchangeLzApp/ExchangeLzApp.sol\":{\"keccak256\":\"0xdce6c426c86d1a76601bf942babf8db3baf2d8e7563340b5e59f711bdee9500f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3aaed8039085c9fd4ae0cb343263d7eabb7e908b2e7a40c2600790fe6fd2e791\",\"dweb:/ipfs/QmbNxP3LAjsVY3XBoYNoZFpbSveiummpmUnVdgDKHo6HDn\"]},\"contracts/lzApp/exchangeLzApp/NonBlockingExchangeLzApp.sol\":{\"keccak256\":\"0xf391cf6c7b29e40b3b85e0eac32a0a1e9c0daa04afce0e74f72322815effbe6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb0466e3cfd488e03aee9d464c28e6a92ec4dac0362a97448d622f539b394891\",\"dweb:/ipfs/QmUgcTRC5XL2gBD4aaVpHzmNpy6m1y1aTbEc8CSnwgqLNk\"]},\"contracts/reservoir/misc/TwoStepOwnable.sol\":{\"keccak256\":\"0x4327eafecd0ab6c931b8e527702b4c700b403527ef321680d3c886f00b9efc08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://289e4d95780cf4842f9f825b38208a2456c4b4096c858b8f0d7c6ef7798dbef5\",\"dweb:/ipfs/QmYeYFsopfLzyWbpJW9mwjrsJtt9dNKswKcCbAUQ6C9mxm\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":{\"keccak256\":\"0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda\",\"dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd\"]},\"node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol\":{\"keccak256\":\"0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd\",\"dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6\",\"dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW\"]},\"node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol\":{\"keccak256\":\"0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e\",\"dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol\":{\"keccak256\":\"0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e\",\"dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol\":{\"keccak256\":\"0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc\",\"dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol\":{\"keccak256\":\"0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84\",\"dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol\":{\"keccak256\":\"0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04\",\"dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol\":{\"keccak256\":\"0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00\",\"dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol\":{\"keccak256\":\"0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d\",\"dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol\":{\"keccak256\":\"0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26\",\"dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":{\"keccak256\":\"0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1\",\"dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol\":{\"keccak256\":\"0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc\",\"dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol\":{\"keccak256\":\"0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027\",\"dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol\":{\"keccak256\":\"0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114\",\"dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol\":{\"keccak256\":\"0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4\",\"dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":{\"keccak256\":\"0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6\",\"dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_endpoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_transferManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChainIdInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreatorFeeBpTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20TransferFromFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LengthsInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MerkleProofTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewGasLimitETHTransferTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewProtocolFeeRecipientCannotBeNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorForStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoncesInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotV2Strategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullSignerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutsideOfTimeRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QuoteTypeInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameDomainSeparator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureEOAInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureERC1271Invalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SignatureLengthInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureParameterSInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "SignatureParameterVInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyHasNoSelector"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrategyNotAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyProtocolFeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "affiliateFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AffiliatePayment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBidAskNonces",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creatorFeeManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewCreatorFeeManager",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewDomainSeparator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasLimitETHTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewGasLimitETHTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxCreatorFeeBp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewMaxCreatorFeeBp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFeeRecipient",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_dstChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "_type",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_minDstGas",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMinDstGas",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "precrime",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPrecrime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_path",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTrustedRemote",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_remoteAddress",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTrustedRemoteAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubsetNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "askUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerAsk",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerBid",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrderNonces"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSubsetNonces"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creatorFeeManager",
          "outputs": [
            {
              "internalType": "contract ICreatorFeeManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker[]",
              "name": "takerBids",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker[]",
              "name": "makerAsks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "makerSignatures",
              "type": "bytes[]"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree[]",
              "name": "merkleTrees",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAtomic",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeMultipleTakerBids"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeTakerAsk"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeTakerBid"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "failedMessages",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forceResumeReceive"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_chainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_configType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfig",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTrustedRemoteAddress",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "proofLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashBatchOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "batchOrderHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "bid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ask",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementBidAskNonces"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedRemote",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lzEndpoint",
          "outputs": [
            {
              "internalType": "contract ILayerZeroEndpoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lzReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCreatorFeeBp",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minDstGasLookup",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nonblockingLzReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "precrime",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restrictedExecuteTakerBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "protocolFeeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_srcAddress",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "_nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "_payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "retryMessage"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_chainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_configType",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_config",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setConfig"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_packetType",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_minGas",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDstGas"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_precrime",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrecrime"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReceiveVersion"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSendVersion"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_srcChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_path",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedRemote"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_remoteChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "_remoteAddress",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedRemoteAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyInfo",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferManager",
          "outputs": [
            {
              "internalType": "contract TransferManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedRemoteLookup",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCreatorFeeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCreatorFeeManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDomainSeparator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newGasLimitETHTransfer",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateETHGasLimitForTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newMaxCreatorFeeBp",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxCreatorFeeBp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newProtocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProtocolFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "newStandardProtocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "newMinTotalFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBidAskNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userOrderNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userSubsetNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "details": "Strategies have an id that is incremental.      Only callable by owner.",
            "params": {
              "implementation": "Implementation address",
              "isMakerBid": "Whether the function selector is for maker bid",
              "maxProtocolFeeBp": "Maximum protocol fee (in basis point)",
              "minTotalFeeBp": "Minimum total fee (in basis point)",
              "selector": "Function selector for the strategy",
              "standardProtocolFeeBp": "Standard protocol fee (in basis point)"
            }
          },
          "cancelOrderNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.",
            "params": {
              "orderNonces": "Array of order nonces"
            }
          },
          "cancelSubsetNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas.",
            "params": {
              "subsetNonces": "Array of subset nonces"
            }
          },
          "constructor": {
            "params": {
              "_owner": "Owner address",
              "_protocolFeeRecipient": "Protocol fee recipient address",
              "_transferManager": "Transfer manager address",
              "_weth": "Wrapped ETH address"
            }
          },
          "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "params": {
              "affiliate": "Affiliate address",
              "isAtomic": "Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail",
              "makerAsks": "Array of maker ask structs",
              "makerSignatures": "Array of maker signatures",
              "merkleTrees": "Array of merkle tree structs if the signature contains multiple maker orders",
              "takerBids": "Array of taker bid structs"
            }
          },
          "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerBid": "Maker bid struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerAsk": "Taker ask struct"
            }
          },
          "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerAsk": "Maker ask struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerBid": "Taker bid struct"
            }
          },
          "hashBatchOrder(bytes32,uint256)": {
            "params": {
              "proofLength": "Merkle proof length",
              "root": "Merkle root"
            },
            "returns": {
              "batchOrderHash": "The batch order hash"
            }
          },
          "incrementBidAskNonces(bool,bool)": {
            "details": "The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.",
            "params": {
              "ask": "Whether to increment the user ask nonce",
              "bid": "Whether to increment the user bid nonce"
            }
          },
          "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": {
            "details": "This function is only callable by this contract. It is used for non-atomic batch order matching.",
            "params": {
              "makerAsk": "Maker ask struct",
              "orderHash": "Hash of the maker ask order",
              "sender": "Sender address (i.e. the initial msg sender)",
              "takerBid": "Taker bid struct"
            },
            "returns": {
              "protocolFeeAmount": "Protocol fee amount"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCreatorFeeManager(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newCreatorFeeManager": "Address of the creator fee manager"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          },
          "updateDomainSeparator()": {
            "details": "Only callable by owner. If there is a fork of the network with a new chainId,      it allows the owner to reset the domain separator for the new chain id."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "details": "Only callable by owner.",
            "params": {
              "newGasLimitETHTransfer": "New gas limit for ETH transfer"
            }
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "details": "The maximum value that can be set is 25%.      Only callable by owner.",
            "params": {
              "newMaxCreatorFeeBp": "New maximum creator fee (in basis point)"
            }
          },
          "updateProtocolFeeRecipient(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newProtocolFeeRecipient": "New protocol fee recipient address"
            }
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the strategy must be active",
              "newMinTotalFee": "New minimum total fee (in basis point)",
              "newStandardProtocolFee": "New standard protocol fee (in basis point)",
              "strategyId": "Strategy id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": {
            "notice": "Magic value nonce returned if executed (or cancelled)."
          },
          "WETH()": {
            "notice": "Wrapped ETH."
          },
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "notice": "This function allows the owner to add a new execution strategy to the protocol."
          },
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOrderNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of order nonces."
          },
          "cancelSubsetNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of subset nonces."
          },
          "chainId()": {
            "notice": "Current chainId."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "creatorFeeManager()": {
            "notice": "Creator fee manager."
          },
          "domainSeparator()": {
            "notice": "Current domain separator."
          },
          "executeMultipleTakerBids((address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "notice": "This function allows a user to batch buy with an array of taker bids (against an array of maker asks)."
          },
          "executeTakerAsk((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker ask (against a maker bid)."
          },
          "executeTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker bid (against a maker ask)."
          },
          "hashBatchOrder(bytes32,uint256)": {
            "notice": "This function returns the hash of the concatenation of batch order type hash and merkle root."
          },
          "incrementBidAskNonces(bool,bool)": {
            "notice": "This function increments a user's bid/ask nonces."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "maxCreatorFeeBp()": {
            "notice": "Maximum creator fee (in basis point)."
          },
          "protocolFeeRecipient()": {
            "notice": "Protocol fee recipient."
          },
          "restrictedExecuteTakerBid((address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),address,bytes32)": {
            "notice": "This function is used to do a non-atomic matching in the context of a batch taker bid."
          },
          "strategyInfo(uint256)": {
            "notice": "This returns the strategy information for a strategy id."
          },
          "transferManager()": {
            "notice": "Transfer manager for ERC721 and ERC1155."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCreatorFeeManager(address)": {
            "notice": "This function allows the owner to update the creator fee manager address."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          },
          "updateDomainSeparator()": {
            "notice": "This function allows the owner to update the domain separator (if possible)."
          },
          "updateETHGasLimitForTransfer(uint256)": {
            "notice": "This function allows the owner to update the maximum ETH gas limit for a standard transfer."
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "notice": "This function allows the owner to update the maximum creator fee (in basis point)."
          },
          "updateProtocolFeeRecipient(address)": {
            "notice": "This function allows the owner to update the protocol fee recipient."
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "notice": "This function allows the owner to update parameters for an existing execution strategy."
          },
          "userBidAskNonces(address)": {
            "notice": "This tracks the bid and ask nonces for a user address."
          },
          "userOrderNonce(address,uint256)": {
            "notice": "This checks whether the order nonce for a user was executed or cancelled."
          },
          "userSubsetNonce(address,uint256)": {
            "notice": "This checks whether the subset nonce for a user was cancelled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/OmniXExchange.sol": "OmniXExchange"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2",
        "urls": [
          "bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5",
          "dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke"
        ],
        "license": "MIT"
      },
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x523e993d95d2958e25c77a9e5893e6281558ae23b7fbdcfd65fbd252e59e84c4",
        "urls": [
          "bzz-raw://4ebe8e2ccc7dfa0a5f72e8d6b956115c323fb982ead23acb870094862b8cdf5a",
          "dweb:/ipfs/QmcRTYKnUQRTMtWv8CD3dPNn9ddjazEUnu8eZNk884xFE4"
        ],
        "license": "MIT"
      },
      "contracts/core/BatchOrderTypehashRegistry.sol": {
        "keccak256": "0x43094fe0320ceb7de5a4e08f6fee9bfd6dbc5c498c386023edbe0eedf1b5a89a",
        "urls": [
          "bzz-raw://95d476e1d2e88a07f9ebd1ee4fc7ff81aaf6dae4b1183198280bb1ce03fa8cf2",
          "dweb:/ipfs/QmW2Ukcter5KUX7NkWJxonJVRh8WBwj3urXuENBei7Dcsk"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x9faa7b1be507069bda09813f01912e1642ef114ba8d9939f1b21c8831a6569cb",
        "urls": [
          "bzz-raw://fd2e5b1d133cfed8fcdc847050fbce6101c847bdae1be62ff4caf8103e87de30",
          "dweb:/ipfs/QmWEGD2QiFswjbT67dPTUGNRtdZQV8bDc9m79RAiEksqs8"
        ],
        "license": "MIT"
      },
      "contracts/core/ExecutionManager.sol": {
        "keccak256": "0x952233881b5f0514a8a45ad4a88b8e51912bd4968286a6a584e6c61e63a44e87",
        "urls": [
          "bzz-raw://47f6f5d607b0b7b6616376be562b9b849f9f23ec7085486927c6b2f225d98f1b",
          "dweb:/ipfs/QmdCibeE9LSbzZXMH6fzzTWAQkPKWXLBwXirytFnqMRw12"
        ],
        "license": "MIT"
      },
      "contracts/core/InheritedStrategy.sol": {
        "keccak256": "0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38",
        "urls": [
          "bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860",
          "dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d"
        ],
        "license": "MIT"
      },
      "contracts/core/NonceManager.sol": {
        "keccak256": "0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737",
        "urls": [
          "bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375",
          "dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa"
        ],
        "license": "MIT"
      },
      "contracts/core/OmniXExchange.sol": {
        "keccak256": "0x2ddf35fbcabe0a96d0632072253388d7fd543d37f18d317d51dcd9055ed99f34",
        "urls": [
          "bzz-raw://42589814fb277656b443789b587d3cdeb43ae83874dd0e84f250cdab85d3bc6b",
          "dweb:/ipfs/QmWCApMdCLRa9xoqe91Tfnhrq11VhgXP58JqxaiUAmjzWV"
        ],
        "license": "MIT"
      },
      "contracts/core/StrategyManager.sol": {
        "keccak256": "0x40407314de830d393b8a323ddde763d5076b5e395f402a9f02d7dbb2d524579d",
        "urls": [
          "bzz-raw://a6e5298c9853acece5fd3e6df443598fc2f24b881db51ac7d4ede0abe1d55a88",
          "dweb:/ipfs/QmcHUxdGzwgfVqun4gaeUo3ynQYo5qKXqCKvtQ8oceP9gC"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferManager.sol": {
        "keccak256": "0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1",
        "urls": [
          "bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f",
          "dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferSelectorNFT.sol": {
        "keccak256": "0xa73dbd84940748e287c817f5b1770829f50e40c3e97077f66de3ac6eed7b3404",
        "urls": [
          "bzz-raw://4cb7638beff6ccb860fe556656a8c5e1b9c0351e7f2f1311be92529040aa535d",
          "dweb:/ipfs/QmSarekTmo6sPcDHPnt4z4NFe8zrsyMBN66i3GXFcWg2U9"
        ],
        "license": "MIT"
      },
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/errors/SharedErrors.sol": {
        "keccak256": "0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf",
        "urls": [
          "bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9",
          "dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICreatorFeeManager.sol": {
        "keccak256": "0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237",
        "urls": [
          "bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e",
          "dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionManager.sol": {
        "keccak256": "0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4",
        "urls": [
          "bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab",
          "dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroEndpoint.sol": {
        "keccak256": "0x99e841ea21cba851b8356c00db1f42f8b6f51f7c69c9d51c567124530a3cf842",
        "urls": [
          "bzz-raw://dbdb5500c2cb54c39c153dcc7974d8e6eb4cd13c2ec52563ff7b2d0b61aa4b2d",
          "dweb:/ipfs/QmX4ukYKAuZuG3gEQTn8XdpRLXXF9wt8hcBTwXVd1Ly9Hq"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroReceiver.sol": {
        "keccak256": "0x8d3744d49cea963aca1774a20e95e4ea157725f8d70eaa8fdf601c4ca28cb99b",
        "urls": [
          "bzz-raw://f3ad97a5758dae977499283cfb56d59038f285010c7b8672e13e2ed7cdb5d91c",
          "dweb:/ipfs/QmatHGWtb9mtSj4iZs1PpK8YnK5s9qP9BwTHkYdCqs7nhc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILayerZeroUserApplicationConfig.sol": {
        "keccak256": "0xc4a255f5e1c8636ff1f46c97eecfdf583f50d87f53f7dad5451bea4f14fe3132",
        "urls": [
          "bzz-raw://45216f78e00d4de204e21db3b82eea06f3e1f347964a037cb93351e5c461de03",
          "dweb:/ipfs/Qmb7NMFmkrXsmp42pdaJEJxrctZBvrczmFxjjN52ddVmzP"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c",
        "urls": [
          "bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443",
          "dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOmniXExchange.sol": {
        "keccak256": "0x2db8a2368634780daacd531b4f4cb411383f5cdb97fde78742c0708e8cfde453",
        "urls": [
          "bzz-raw://2f4032a30bef6fe320005494b43c879f08830d785a0eeaffeb3b769a01c616eb",
          "dweb:/ipfs/QmQg8QxVcrGpEb9ZXgio4HLuUcXptHELrKPN5veMiUnST3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRoyaltyFeeRegistry.sol": {
        "keccak256": "0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6",
        "urls": [
          "bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c",
          "dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f",
        "urls": [
          "bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db",
          "dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9",
        "urls": [
          "bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817",
          "dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITransferManager.sol": {
        "keccak256": "0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50",
        "urls": [
          "bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a",
          "dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E"
        ],
        "license": "MIT"
      },
      "contracts/libraries/BytesLib.sol": {
        "keccak256": "0x880ceabc6474d5cfc5c533800c41bb7a12fd88980b66a1e4849916d214f2d8cd",
        "urls": [
          "bzz-raw://428da4f9eed925935522d7bcf440535d26572880cb9df9c2fdba0bb5a4708b5f",
          "dweb:/ipfs/QmPkyKtuYqP8SdTBYspiqUh5dcJyztnRjA3uZuhv6rUhYk"
        ],
        "license": "Unlicense"
      },
      "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol": {
        "keccak256": "0xa2a90a0297f02cdc63ea18cba9bf3439425d3f795f203df2221e0685e8e28620",
        "urls": [
          "bzz-raw://a5e2ec70bcf695bd0c8b5703dc68f5c84fc5fc446e3e28cc6f1735d16104bbdc",
          "dweb:/ipfs/Qme2dNuS7368AdFaWZE6nyGuUcyCwVEhpzTQ4kcEJVuZ6q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0xbd931df89e634b16394752f0f45e0319a0644b2e9bea287de628bb922e1a9e4e",
        "urls": [
          "bzz-raw://e9d4ccd35cc6d3446e5985fdb28a5402c774a420f4ec2a844b1f92f54057e553",
          "dweb:/ipfs/QmP1NZW8aimhPL2oDzP7x566S1HdQkYVLNV5UyRbnEAra5"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/ExchangeLzApp.sol": {
        "keccak256": "0xdce6c426c86d1a76601bf942babf8db3baf2d8e7563340b5e59f711bdee9500f",
        "urls": [
          "bzz-raw://3aaed8039085c9fd4ae0cb343263d7eabb7e908b2e7a40c2600790fe6fd2e791",
          "dweb:/ipfs/QmbNxP3LAjsVY3XBoYNoZFpbSveiummpmUnVdgDKHo6HDn"
        ],
        "license": "MIT"
      },
      "contracts/lzApp/exchangeLzApp/NonBlockingExchangeLzApp.sol": {
        "keccak256": "0xf391cf6c7b29e40b3b85e0eac32a0a1e9c0daa04afce0e74f72322815effbe6f",
        "urls": [
          "bzz-raw://cb0466e3cfd488e03aee9d464c28e6a92ec4dac0362a97448d622f539b394891",
          "dweb:/ipfs/QmUgcTRC5XL2gBD4aaVpHzmNpy6m1y1aTbEc8CSnwgqLNk"
        ],
        "license": "MIT"
      },
      "contracts/reservoir/misc/TwoStepOwnable.sol": {
        "keccak256": "0x4327eafecd0ab6c931b8e527702b4c700b403527ef321680d3c886f00b9efc08",
        "urls": [
          "bzz-raw://289e4d95780cf4842f9f825b38208a2456c4b4096c858b8f0d7c6ef7798dbef5",
          "dweb:/ipfs/QmYeYFsopfLzyWbpJW9mwjrsJtt9dNKswKcCbAUQ6C9mxm"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
        "keccak256": "0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc",
        "urls": [
          "bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda",
          "dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol": {
        "keccak256": "0xe8d69a788992819096c6b1837314ee18ca1b6fc06bd427882fb8f42f2d7ef85d",
        "urls": [
          "bzz-raw://b045831d6c4d5ea287d19b6081430b92869e009a42c42400c39825e23b0467fd",
          "dweb:/ipfs/QmcNDyRBHm7gLWFb93a9tbVWieKLteXtBPX9HnHAvUYHkY"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb0e39805ee68fd28a966b0b118bcbede50ccc273b48cf6f4cc91c6f3fd481e77",
        "urls": [
          "bzz-raw://a1976cdd9a7160ad3e4f923d0c2aefc108efc7ceb0c4dc700a3262ad2a7798a6",
          "dweb:/ipfs/Qmb84WvCL5iXiykUE3nUCJ7wkaELQPdtz7XfMLMj1Te3gW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/constants/StandardConstants.sol": {
        "keccak256": "0xf595b011f0f9a03d5848a33db7ab2883da98010cecab70c379f627b9fd5e9143",
        "urls": [
          "bzz-raw://0652db70e72f0b5286e5ede3b74d8049bfcc7695b748ee20e9471fbcb8e6030e",
          "dweb:/ipfs/QmeCeD1JXTTYqKb3oBZ3cMGNtxeMmYCARw1XLEL7wTZzQG"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol": {
        "keccak256": "0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2",
        "urls": [
          "bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e",
          "dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol": {
        "keccak256": "0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262",
        "urls": [
          "bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc",
          "dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/SignatureCheckerErrors.sol": {
        "keccak256": "0x584922ec477b878d348a60d0ac1229622143f1a28fdf2f13657969c9a03e0adf",
        "urls": [
          "bzz-raw://76537673fd7035c7574b2536c014fe7c5a17a3d17b5e54a5f6c3c46d4c268a84",
          "dweb:/ipfs/QmZFJPmVJdWGJaVG8roRKd6pZDx41jsXveM883qxaaV12R"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
        "keccak256": "0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46",
        "urls": [
          "bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7",
          "dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol": {
        "keccak256": "0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9",
        "urls": [
          "bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04",
          "dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1271.sol": {
        "keccak256": "0x0d4b5f45a4018a002f84eef23361523c3556a2167b5004761471e32061735bce",
        "urls": [
          "bzz-raw://f62c36b65265b8865aadb35dd158e13089cec73f5716815a1080a1eab2ec0a00",
          "dweb:/ipfs/QmdqqnpKG1Te89sCAQcDiafXnSUsQuE2tdvWCzXsfeMUuA"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC20.sol": {
        "keccak256": "0x00de5900712b4cf6d4eb739d325f83aec5a357b25571aaae440aad43eb1e4f05",
        "urls": [
          "bzz-raw://c92e7d221e92cb3e102f16ebeaa948e02a0ace684d17aec40ae7ff3de8ce8f0d",
          "dweb:/ipfs/QmUUbqrh3mhtRNsZdQ44yk3yw99Xpkx1RaGQnANduTTJBj"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol": {
        "keccak256": "0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73",
        "urls": [
          "bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26",
          "dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
        "keccak256": "0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d",
        "urls": [
          "bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1",
          "dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol": {
        "keccak256": "0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c",
        "urls": [
          "bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc",
          "dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol": {
        "keccak256": "0x2f3561ba45f4ab530212d9e560a0d9226e0a431503506acdb6c69c45dc9990b8",
        "urls": [
          "bzz-raw://491b6c01c4800224cff4967224162661b0978395ce6cf1e6806e0348adc8e027",
          "dweb:/ipfs/QmUDRVjGi49cmcctBhCW3EBT9iMqw7ULcFh4brFMtCorwW"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol": {
        "keccak256": "0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713",
        "urls": [
          "bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114",
          "dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol": {
        "keccak256": "0x7b8df3869da936af190db674c62be8626034e3cc5cb882cd3a6ca2b43df1549c",
        "urls": [
          "bzz-raw://3076c426130eefd4cc6391779049f7e0dc16a497760937fdaee24b6e61a433b4",
          "dweb:/ipfs/QmcTVo3BHc13mb2qdBUStdvtzfB2uufZahDfrx4ETaYMBx"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
        "keccak256": "0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab",
        "urls": [
          "bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6",
          "dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/OmniXExchange.sol",
    "id": 2841,
    "exportedSymbols": {
      "BatchOrderTypehashRegistry": [
        455
      ],
      "CallerInvalid": [
        3971
      ],
      "CurrencyInvalid": [
        3974
      ],
      "ICurrencyManager": [
        9003
      ],
      "IOmniXExchange": [
        9422
      ],
      "LengthsInvalid": [
        3980
      ],
      "LowLevelERC20Transfer": [
        50148
      ],
      "LowLevelETHReturnETHIfAnyExceptOneWei": [
        50217
      ],
      "LowLevelWETH": [
        50260
      ],
      "MAX_CALLDATA_PROOF_LENGTH": [
        41
      ],
      "MerkleProofCalldataWithNodes": [
        10597
      ],
      "MerkleProofInvalid": [
        3983
      ],
      "MerkleProofTooLarge": [
        3988
      ],
      "ONE_HUNDRED_PERCENT_IN_BP": [
        37
      ],
      "OmniXExchange": [
        2840
      ],
      "OrderStructs": [
        10867
      ],
      "QuoteType": [
        3906
      ],
      "QuoteTypeInvalid": [
        3994
      ],
      "SignatureCheckerCalldata": [
        49281
      ],
      "TransferSelectorNFT": [
        3896
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:25002:11",
    "nodes": [
      {
        "id": 1615,
        "nodeType": "PragmaDirective",
        "src": "32:24:11",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 1617,
        "nodeType": "ImportDirective",
        "src": "95:106:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "file": "@looksrare/contracts-libs/contracts/SignatureCheckerCalldata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 49282,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1616,
              "name": "SignatureCheckerCalldata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49281,
              "src": "103:24:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1619,
        "nodeType": "ImportDirective",
        "src": "202:148:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelETHReturnETHIfAnyExceptOneWei.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 50218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1618,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50217,
              "src": "210:37:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1621,
        "nodeType": "ImportDirective",
        "src": "351:98:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 50261,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1620,
              "name": "LowLevelWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50260,
              "src": "359:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1623,
        "nodeType": "ImportDirective",
        "src": "450:116:11",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "file": "@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC20Transfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 50149,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1622,
              "name": "LowLevelERC20Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50148,
              "src": "458:21:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1625,
        "nodeType": "ImportDirective",
        "src": "633:104:11",
        "nodes": [],
        "absolutePath": "contracts/libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "file": "../libraries/OpenZeppelin/MerkleProofCalldataWithNodes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 10598,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1624,
              "name": "MerkleProofCalldataWithNodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10597,
              "src": "641:28:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1627,
        "nodeType": "ImportDirective",
        "src": "752:59:11",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 10868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1626,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10867,
              "src": "760:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1629,
        "nodeType": "ImportDirective",
        "src": "827:64:11",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOmniXExchange.sol",
        "file": "../interfaces/IOmniXExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 9423,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1628,
              "name": "IOmniXExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9422,
              "src": "835:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1636,
        "nodeType": "ImportDirective",
        "src": "910:149:11",
        "nodes": [],
        "absolutePath": "contracts/errors/SharedErrors.sol",
        "file": "../errors/SharedErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 3995,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1630,
              "name": "CallerInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3971,
              "src": "918:13:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1631,
              "name": "CurrencyInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3974,
              "src": "933:15:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1632,
              "name": "LengthsInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3980,
              "src": "950:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1633,
              "name": "MerkleProofInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3983,
              "src": "966:18:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1634,
              "name": "MerkleProofTooLarge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3988,
              "src": "986:19:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1635,
              "name": "QuoteTypeInvalid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3994,
              "src": "1007:16:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1638,
        "nodeType": "ImportDirective",
        "src": "1084:62:11",
        "nodes": [],
        "absolutePath": "contracts/core/TransferSelectorNFT.sol",
        "file": "./TransferSelectorNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 3897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1637,
              "name": "TransferSelectorNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3896,
              "src": "1092:19:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1640,
        "nodeType": "ImportDirective",
        "src": "1147:76:11",
        "nodes": [],
        "absolutePath": "contracts/core/BatchOrderTypehashRegistry.sol",
        "file": "./BatchOrderTypehashRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 456,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1639,
              "name": "BatchOrderTypehashRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 455,
              "src": "1155:26:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1643,
        "nodeType": "ImportDirective",
        "src": "1238:103:11",
        "nodes": [],
        "absolutePath": "contracts/constants/NumericConstants.sol",
        "file": "../constants/NumericConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 42,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1641,
              "name": "MAX_CALLDATA_PROOF_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41,
              "src": "1246:25:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1642,
              "name": "ONE_HUNDRED_PERCENT_IN_BP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37,
              "src": "1273:25:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1645,
        "nodeType": "ImportDirective",
        "src": "1352:49:11",
        "nodes": [],
        "absolutePath": "contracts/enums/QuoteType.sol",
        "file": "../enums/QuoteType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 3907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1644,
              "name": "QuoteType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3906,
              "src": "1360:9:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1647,
        "nodeType": "ImportDirective",
        "src": "1403:68:11",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICurrencyManager.sol",
        "file": "../interfaces/ICurrencyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2841,
        "sourceUnit": 9004,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1646,
              "name": "ICurrencyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9003,
              "src": "1411:16:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2840,
        "nodeType": "ContractDefinition",
        "src": "1475:23559:11",
        "nodes": [
          {
            "id": 1663,
            "nodeType": "UsingForDirective",
            "src": "1671:42:11",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1660,
              "name": "OrderStructs",
              "nameLocations": [
                "1677:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10867,
              "src": "1677:12:11"
            },
            "typeName": {
              "id": 1662,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1661,
                "name": "OrderStructs.Maker",
                "nameLocations": [
                  "1694:12:11",
                  "1707:5:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10745,
                "src": "1694:18:11"
              },
              "referencedDeclaration": 10745,
              "src": "1694:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                "typeString": "struct OrderStructs.Maker"
              }
            }
          },
          {
            "id": 1666,
            "nodeType": "VariableDeclaration",
            "src": "1763:29:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1664,
              "nodeType": "StructuredDocumentation",
              "src": "1719:39:11",
              "text": " @notice Wrapped ETH."
            },
            "functionSelector": "ad5c4648",
            "mutability": "immutable",
            "name": "WETH",
            "nameLocation": "1788:4:11",
            "scope": 2840,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1669,
            "nodeType": "VariableDeclaration",
            "src": "1847:22:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "1799:43:11",
              "text": " @notice Current chainId."
            },
            "functionSelector": "9a8a0592",
            "mutability": "mutable",
            "name": "chainId",
            "nameLocation": "1862:7:11",
            "scope": 2840,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1847:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1672,
            "nodeType": "VariableDeclaration",
            "src": "1933:30:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1670,
              "nodeType": "StructuredDocumentation",
              "src": "1876:52:11",
              "text": " @notice Current domain separator."
            },
            "functionSelector": "f698da25",
            "mutability": "mutable",
            "name": "domainSeparator",
            "nameLocation": "1948:15:11",
            "scope": 2840,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1671,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1933:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1676,
            "nodeType": "VariableDeclaration",
            "src": "2217:44:11",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1673,
              "nodeType": "StructuredDocumentation",
              "src": "1970:242:11",
              "text": " @notice This variable is used as the gas limit for a ETH transfer.\n         If a standard ETH transfer fails within this gas limit, ETH will get wrapped to WETH\n         and transferred to the initial recipient."
            },
            "mutability": "mutable",
            "name": "_gasLimitETHTransfer",
            "nameLocation": "2233:20:11",
            "scope": 2840,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1674,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2217:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "325f333030",
              "id": 1675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2256:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2300_by_1",
                "typeString": "int_const 2300"
              },
              "value": "2_300"
            },
            "visibility": "private"
          },
          {
            "id": 1704,
            "nodeType": "FunctionDefinition",
            "src": "2509:309:11",
            "nodes": [],
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "2755:63:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1696,
                      "name": "_updateDomainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "2765:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2765:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "2765:24:11"
                },
                {
                  "expression": {
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1699,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1666,
                      "src": "2799:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1700,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "2806:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2799:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "2799:12:11"
                }
              ]
            },
            "documentation": {
              "id": 1677,
              "nodeType": "StructuredDocumentation",
              "src": "2268:236:11",
              "text": " @notice Constructor\n @param _owner Owner address\n @param _protocolFeeRecipient Protocol fee recipient address\n @param _transferManager Transfer manager address\n @param _weth Wrapped ETH address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1690,
                    "name": "_endpoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1679,
                    "src": "2695:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1691,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1681,
                    "src": "2706:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1692,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1683,
                    "src": "2714:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1693,
                    "name": "_transferManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1685,
                    "src": "2737:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1694,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1689,
                  "name": "TransferSelectorNFT",
                  "nameLocations": [
                    "2674:19:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3896,
                  "src": "2674:19:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2674:80:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "_endpoint",
                  "nameLocation": "2538:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2530:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2565:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2557:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "2589:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2581:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1685,
                  "mutability": "mutable",
                  "name": "_transferManager",
                  "nameLocation": "2628:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2620:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1687,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "2662:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2654:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:153:11"
            },
            "returnParameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1777,
            "nodeType": "FunctionDefinition",
            "src": "2824:993:11",
            "nodes": [],
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "3088:729:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1723,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "3106:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "3098:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3098:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1726,
                  "initialValue": {
                    "expression": {
                      "id": 1724,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "3117:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3126:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10726,
                    "src": "3117:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3098:36:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3227:28:11",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1727,
                          "name": "isCurrencyAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "3228:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1729,
                        "indexExpression": {
                          "id": 1728,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1723,
                          "src": "3246:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3228:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1731,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "3259:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3279:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3271:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1732,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3271:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3271:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3259:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3227:54:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1742,
                  "nodeType": "IfStatement",
                  "src": "3223:109:11",
                  "trueBody": {
                    "id": 1741,
                    "nodeType": "Block",
                    "src": "3283:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1738,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3974,
                            "src": "3304:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3304:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1740,
                        "nodeType": "RevertStatement",
                        "src": "3297:24:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1744,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "3350:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "3342:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1743,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3342:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1747,
                  "initialValue": {
                    "expression": {
                      "id": 1745,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "3359:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3368:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10728,
                    "src": "3359:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3342:32:11"
                },
                {
                  "assignments": [
                    1749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1749,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "3392:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "3384:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1748,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3384:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1753,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1750,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "3404:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3413:4:11",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10866,
                      "src": "3404:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10745_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10745_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1755,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "3459:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 1756,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "3471:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1757,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "3482:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 1758,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "3498:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1754,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2826,
                      "src": "3429:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10768_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:76:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1760,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:76:11"
                },
                {
                  "assignments": [
                    1762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1762,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "3589:22:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "3581:30:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3581:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1768,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1764,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "3631:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 1765,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "3641:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "id": 1766,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "3651:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1763,
                      "name": "_executeTakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2330,
                      "src": "3614:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,bytes32) returns (uint256)"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3581:80:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1770,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "3758:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1771,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "3768:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1772,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1717,
                        "src": "3776:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1773,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "3787:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1769,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2574,
                      "src": "3727:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:83:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1775,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:83:11"
                }
              ]
            },
            "baseFunctions": [
              9381
            ],
            "functionSelector": "10e89db4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1719,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3075:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49113,
                  "src": "3075:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3075:12:11"
              }
            ],
            "name": "executeTakerAsk",
            "nameLocation": "2833:15:11",
            "parameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "2886:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2858:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 1706,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1705,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "2858:12:11",
                        "2871:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10752,
                      "src": "2858:18:11"
                    },
                    "referencedDeclaration": 10752,
                    "src": "2858:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "2932:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2904:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 1709,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1708,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "2904:12:11",
                        "2917:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10745,
                      "src": "2904:18:11"
                    },
                    "referencedDeclaration": 10745,
                    "src": "2904:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "2965:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2950:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "3022:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2989:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 1714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1713,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "2989:12:11",
                        "3002:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10768,
                      "src": "2989:23:11"
                    },
                    "referencedDeclaration": 10768,
                    "src": "2989:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10768_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "3050:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "3042:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3042:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2848:217:11"
            },
            "returnParameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3088:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1845,
            "nodeType": "FunctionDefinition",
            "src": "3823:1031:11",
            "nodes": [],
            "body": {
              "id": 1844,
              "nodeType": "Block",
              "src": "4095:759:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1796,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "4113:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "4105:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4105:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1799,
                  "initialValue": {
                    "expression": {
                      "id": 1797,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "4124:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4133:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10726,
                    "src": "4124:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4105:36:11"
                },
                {
                  "condition": {
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4219:28:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1800,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "4220:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1802,
                      "indexExpression": {
                        "id": 1801,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1796,
                        "src": "4238:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4220:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1808,
                  "nodeType": "IfStatement",
                  "src": "4215:83:11",
                  "trueBody": {
                    "id": 1807,
                    "nodeType": "Block",
                    "src": "4249:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1804,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3974,
                            "src": "4270:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4270:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1806,
                        "nodeType": "RevertStatement",
                        "src": "4263:24:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1810,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "4316:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "4308:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1809,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4308:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1814,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1811,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "4328:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 1812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4337:4:11",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10866,
                      "src": "4328:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10745_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10745_memory_ptr_$",
                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4308:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1816,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1788,
                        "src": "4383:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      {
                        "id": 1817,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "4395:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1818,
                        "name": "makerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1785,
                        "src": "4406:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 1819,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1783,
                          "src": "4422:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4431:6:11",
                        "memberName": "signer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10728,
                        "src": "4422:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1815,
                      "name": "_verifyMerkleProofOrOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2826,
                      "src": "4353:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10768_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:85:11"
                },
                {
                  "assignments": [
                    1824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1824,
                      "mutability": "mutable",
                      "name": "totalProtocolFeeAmount",
                      "nameLocation": "4527:22:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "4519:30:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4519:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1832,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1826,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "4569:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 1827,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "4579:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 1828,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4589:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4593:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4589:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1830,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "4601:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1825,
                      "name": "_executeTakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "4552:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                      }
                    },
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4519:92:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1834,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1796,
                        "src": "4715:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4725:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4729:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4725:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1837,
                        "name": "affiliate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "4737:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1838,
                        "name": "totalProtocolFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1824,
                        "src": "4748:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1833,
                      "name": "_payProtocolFeeAndAffiliateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2574,
                      "src": "4684:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:87:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1840,
                  "nodeType": "ExpressionStatement",
                  "src": "4684:87:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1841,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50216,
                      "src": "4810:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1843,
                  "nodeType": "ExpressionStatement",
                  "src": "4810:31:11"
                }
              ]
            },
            "baseFunctions": [
              9398
            ],
            "functionSelector": "41fb13d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1792,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4082:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49113,
                  "src": "4082:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4082:12:11"
              }
            ],
            "name": "executeTakerBid",
            "nameLocation": "3832:15:11",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "3885:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "3857:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 1779,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1778,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "3857:12:11",
                        "3870:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10752,
                      "src": "3857:18:11"
                    },
                    "referencedDeclaration": 10752,
                    "src": "3857:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1783,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "3931:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "3903:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 1782,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1781,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "3903:12:11",
                        "3916:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10745,
                      "src": "3903:18:11"
                    },
                    "referencedDeclaration": 10745,
                    "src": "3903:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1785,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "3964:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "3949:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3949:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "4021:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "3988:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 1787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1786,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "3988:12:11",
                        "4001:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10768,
                      "src": "3988:23:11"
                    },
                    "referencedDeclaration": 10768,
                    "src": "3988:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10768_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "4049:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "4041:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4041:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3847:217:11"
            },
            "returnParameters": {
              "id": 1794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:11"
            },
            "scope": 2840,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2094,
            "nodeType": "FunctionDefinition",
            "src": "4861:3405:11",
            "nodes": [],
            "body": {
              "id": 2093,
              "nodeType": "Block",
              "src": "5177:3089:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1870,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "5195:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2093,
                      "src": "5187:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5187:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1873,
                  "initialValue": {
                    "expression": {
                      "id": 1871,
                      "name": "takerBids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "5204:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Taker_$10752_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5214:6:11",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5204:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5187:33:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1874,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "5247:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5257:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5247:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1877,
                                    "name": "makerAsks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1853,
                                    "src": "5275:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Maker_$10745_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                    }
                                  },
                                  "id": 1878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5285:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5275:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 1879,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1870,
                                  "src": "5294:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5275:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1881,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5274:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "|",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1882,
                                    "name": "makerSignatures",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1856,
                                    "src": "5305:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "bytes calldata[] calldata"
                                    }
                                  },
                                  "id": 1883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5321:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5305:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "^",
                                "rightExpression": {
                                  "id": 1884,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1870,
                                  "src": "5330:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5305:31:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1886,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5304:33:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5274:63:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1888,
                                  "name": "merkleTrees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "5341:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10768_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                  }
                                },
                                "id": 1889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5353:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5341:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "id": 1890,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1870,
                                "src": "5362:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5341:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1892,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5340:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5274:95:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5373:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5274:100:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5247:127:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1901,
                  "nodeType": "IfStatement",
                  "src": "5230:203:11",
                  "trueBody": {
                    "id": 1900,
                    "nodeType": "Block",
                    "src": "5385:48:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1897,
                            "name": "LengthsInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3980,
                            "src": "5406:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5406:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1899,
                        "nodeType": "RevertStatement",
                        "src": "5399:23:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1903,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "5526:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2093,
                      "src": "5518:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1902,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5518:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1908,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1904,
                        "name": "makerAsks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "5537:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Maker_$10745_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata[] calldata"
                        }
                      },
                      "id": 1906,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5547:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5537:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5550:8:11",
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10726,
                    "src": "5537:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5518:40:11"
                },
                {
                  "condition": {
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5572:28:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1909,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "5573:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1911,
                      "indexExpression": {
                        "id": 1910,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "5591:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5573:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1917,
                  "nodeType": "IfStatement",
                  "src": "5568:83:11",
                  "trueBody": {
                    "id": 1916,
                    "nodeType": "Block",
                    "src": "5602:49:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1913,
                            "name": "CurrencyInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3974,
                            "src": "5623:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1915,
                        "nodeType": "RevertStatement",
                        "src": "5616:24:11"
                      }
                    ]
                  }
                },
                {
                  "id": 2089,
                  "nodeType": "Block",
                  "src": "5661:2528:11",
                  "statements": [
                    {
                      "assignments": [
                        1919
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1919,
                          "mutability": "mutable",
                          "name": "totalProtocolFeeAmount",
                          "nameLocation": "5729:22:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2089,
                          "src": "5721:30:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1918,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5721:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1920,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5721:30:11"
                    },
                    {
                      "condition": {
                        "id": 1921,
                        "name": "isAtomic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "5919:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2079,
                        "nodeType": "Block",
                        "src": "6917:1101:11",
                        "statements": [
                          {
                            "body": {
                              "id": 2077,
                              "nodeType": "Block",
                              "src": "6965:1039:11",
                              "statements": [
                                {
                                  "assignments": [
                                    2006
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2006,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "7015:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2077,
                                      "src": "6987:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 2005,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 2004,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "6987:12:11",
                                            "7000:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10745,
                                          "src": "6987:18:11"
                                        },
                                        "referencedDeclaration": 10745,
                                        "src": "6987:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2010,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 2007,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1853,
                                      "src": "7026:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$10745_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 2009,
                                    "indexExpression": {
                                      "id": 2008,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1997,
                                      "src": "7036:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7026:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6987:51:11"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2011,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1997,
                                      "src": "7120:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7125:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7120:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2024,
                                  "nodeType": "IfStatement",
                                  "src": "7116:176:11",
                                  "trueBody": {
                                    "id": 2023,
                                    "nodeType": "Block",
                                    "src": "7128:164:11",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 2017,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 2014,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2006,
                                              "src": "7158:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 2015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7167:8:11",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10726,
                                            "src": "7158:17:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 2016,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1903,
                                            "src": "7179:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "7158:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2022,
                                        "nodeType": "IfStatement",
                                        "src": "7154:116:11",
                                        "trueBody": {
                                          "id": 2021,
                                          "nodeType": "Block",
                                          "src": "7189:81:11",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 2018,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3974,
                                                  "src": "7226:15:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 2019,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7226:17:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 2020,
                                              "nodeType": "RevertStatement",
                                              "src": "7219:24:11"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    2029
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2029,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "7342:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2077,
                                      "src": "7314:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 2028,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 2027,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "7314:12:11",
                                            "7327:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10752,
                                          "src": "7314:18:11"
                                        },
                                        "referencedDeclaration": 10752,
                                        "src": "7314:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2033,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 2030,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1849,
                                      "src": "7353:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$10752_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 2032,
                                    "indexExpression": {
                                      "id": 2031,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1997,
                                      "src": "7363:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7353:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7314:51:11"
                                },
                                {
                                  "assignments": [
                                    2035
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2035,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "7395:9:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2077,
                                      "src": "7387:17:11",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 2034,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7387:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2039,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2036,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2006,
                                        "src": "7407:8:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 2037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7416:4:11",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10866,
                                      "src": "7407:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10745_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10745_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 2038,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7407:15:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7387:35:11"
                                },
                                {
                                  "id": 2076,
                                  "nodeType": "Block",
                                  "src": "7445:541:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 2041,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1860,
                                              "src": "7501:11:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10768_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 2043,
                                            "indexExpression": {
                                              "id": 2042,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1997,
                                              "src": "7513:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7501:14:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 2044,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2035,
                                            "src": "7517:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 2045,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1856,
                                              "src": "7528:15:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 2047,
                                            "indexExpression": {
                                              "id": 2046,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1997,
                                              "src": "7544:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7528:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 2048,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2006,
                                              "src": "7548:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 2049,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7557:6:11",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10728,
                                            "src": "7548:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2040,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2826,
                                          "src": "7471:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10768_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 2050,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7471:93:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2051,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7471:93:11"
                                    },
                                    {
                                      "clauses": [
                                        {
                                          "block": {
                                            "id": 2067,
                                            "nodeType": "Block",
                                            "src": "7759:100:11",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 2065,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 2063,
                                                    "name": "totalProtocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1919,
                                                    "src": "7789:22:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "+=",
                                                  "rightHandSide": {
                                                    "id": 2064,
                                                    "name": "protocolFeeAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2061,
                                                    "src": "7815:17:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "7789:43:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2066,
                                                "nodeType": "ExpressionStatement",
                                                "src": "7789:43:11"
                                              }
                                            ]
                                          },
                                          "errorName": "",
                                          "id": 2068,
                                          "nodeType": "TryCatchClause",
                                          "parameters": {
                                            "id": 2062,
                                            "nodeType": "ParameterList",
                                            "parameters": [
                                              {
                                                "constant": false,
                                                "id": 2061,
                                                "mutability": "mutable",
                                                "name": "protocolFeeAmount",
                                                "nameLocation": "7715:17:11",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 2068,
                                                "src": "7707:25:11",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "typeName": {
                                                  "id": 2060,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "7707:7:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "visibility": "internal"
                                              }
                                            ],
                                            "src": "7677:81:11"
                                          },
                                          "src": "7669:190:11"
                                        },
                                        {
                                          "block": {
                                            "id": 2069,
                                            "nodeType": "Block",
                                            "src": "7866:2:11",
                                            "statements": []
                                          },
                                          "errorName": "",
                                          "id": 2070,
                                          "nodeType": "TryCatchClause",
                                          "src": "7860:8:11"
                                        }
                                      ],
                                      "externalCall": {
                                        "arguments": [
                                          {
                                            "id": 2054,
                                            "name": "takerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2029,
                                            "src": "7626:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            }
                                          },
                                          {
                                            "id": 2055,
                                            "name": "makerAsk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2006,
                                            "src": "7636:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 2056,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "7646:3:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 2057,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7650:6:11",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "7646:10:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 2058,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2035,
                                            "src": "7658:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                              "typeString": "struct OrderStructs.Taker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                              "typeString": "struct OrderStructs.Maker calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2052,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "7595:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_OmniXExchange_$2840",
                                              "typeString": "contract OmniXExchange"
                                            }
                                          },
                                          "id": 2053,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7600:25:11",
                                          "memberName": "restrictedExecuteTakerBid",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2132,
                                          "src": "7595:30:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Taker_$10752_memory_ptr_$_t_struct$_Maker_$10745_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                            "typeString": "function (struct OrderStructs.Taker memory,struct OrderStructs.Maker memory,address,bytes32) external returns (uint256)"
                                          }
                                        },
                                        "id": 2059,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7595:73:11",
                                        "tryCall": true,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2071,
                                      "nodeType": "TryStatement",
                                      "src": "7591:277:11"
                                    },
                                    {
                                      "id": 2075,
                                      "nodeType": "UncheckedBlock",
                                      "src": "7894:70:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2073,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "7934:3:11",
                                            "subExpression": {
                                              "id": 2072,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1997,
                                              "src": "7936:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2074,
                                          "nodeType": "ExpressionStatement",
                                          "src": "7934:3:11"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1999,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1997,
                                "src": "6951:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2000,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1870,
                                "src": "6955:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6951:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2078,
                            "initializationExpression": {
                              "assignments": [
                                1997
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1997,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "6948:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2078,
                                  "src": "6940:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1996,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6940:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1998,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6940:9:11"
                            },
                            "nodeType": "ForStatement",
                            "src": "6935:1069:11"
                          }
                        ]
                      },
                      "id": 2080,
                      "nodeType": "IfStatement",
                      "src": "5915:2103:11",
                      "trueBody": {
                        "id": 1995,
                        "nodeType": "Block",
                        "src": "5929:982:11",
                        "statements": [
                          {
                            "body": {
                              "id": 1993,
                              "nodeType": "Block",
                              "src": "5977:920:11",
                              "statements": [
                                {
                                  "assignments": [
                                    1932
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1932,
                                      "mutability": "mutable",
                                      "name": "makerAsk",
                                      "nameLocation": "6027:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1993,
                                      "src": "5999:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker"
                                      },
                                      "typeName": {
                                        "id": 1931,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1930,
                                          "name": "OrderStructs.Maker",
                                          "nameLocations": [
                                            "5999:12:11",
                                            "6012:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10745,
                                          "src": "5999:18:11"
                                        },
                                        "referencedDeclaration": 10745,
                                        "src": "5999:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                                          "typeString": "struct OrderStructs.Maker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1936,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1933,
                                      "name": "makerAsks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1853,
                                      "src": "6038:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Maker_$10745_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Maker calldata[] calldata"
                                      }
                                    },
                                    "id": 1935,
                                    "indexExpression": {
                                      "id": 1934,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1923,
                                      "src": "6048:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6038:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                      "typeString": "struct OrderStructs.Maker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "5999:51:11"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1937,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1923,
                                      "src": "6132:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1938,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6137:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6132:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1950,
                                  "nodeType": "IfStatement",
                                  "src": "6128:176:11",
                                  "trueBody": {
                                    "id": 1949,
                                    "nodeType": "Block",
                                    "src": "6140:164:11",
                                    "statements": [
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 1943,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 1940,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1932,
                                              "src": "6170:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 1941,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6179:8:11",
                                            "memberName": "currency",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10726,
                                            "src": "6170:17:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "id": 1942,
                                            "name": "currency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1903,
                                            "src": "6191:8:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "6170:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 1948,
                                        "nodeType": "IfStatement",
                                        "src": "6166:116:11",
                                        "trueBody": {
                                          "id": 1947,
                                          "nodeType": "Block",
                                          "src": "6201:81:11",
                                          "statements": [
                                            {
                                              "errorCall": {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "id": 1944,
                                                  "name": "CurrencyInvalid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3974,
                                                  "src": "6238:15:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                  }
                                                },
                                                "id": 1945,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6238:17:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 1946,
                                              "nodeType": "RevertStatement",
                                              "src": "6231:24:11"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    1955
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1955,
                                      "mutability": "mutable",
                                      "name": "takerBid",
                                      "nameLocation": "6354:8:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1993,
                                      "src": "6326:36:11",
                                      "stateVariable": false,
                                      "storageLocation": "calldata",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker"
                                      },
                                      "typeName": {
                                        "id": 1954,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1953,
                                          "name": "OrderStructs.Taker",
                                          "nameLocations": [
                                            "6326:12:11",
                                            "6339:5:11"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 10752,
                                          "src": "6326:18:11"
                                        },
                                        "referencedDeclaration": 10752,
                                        "src": "6326:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                                          "typeString": "struct OrderStructs.Taker"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1959,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1956,
                                      "name": "takerBids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1849,
                                      "src": "6365:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Taker_$10752_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct OrderStructs.Taker calldata[] calldata"
                                      }
                                    },
                                    "id": 1958,
                                    "indexExpression": {
                                      "id": 1957,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1923,
                                      "src": "6375:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6365:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                      "typeString": "struct OrderStructs.Taker calldata"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6326:51:11"
                                },
                                {
                                  "assignments": [
                                    1961
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1961,
                                      "mutability": "mutable",
                                      "name": "orderHash",
                                      "nameLocation": "6407:9:11",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1993,
                                      "src": "6399:17:11",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 1960,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6399:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1965,
                                  "initialValue": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1962,
                                        "name": "makerAsk",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1932,
                                        "src": "6419:8:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                          "typeString": "struct OrderStructs.Maker calldata"
                                        }
                                      },
                                      "id": 1963,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6428:4:11",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10866,
                                      "src": "6419:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Maker_$10745_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Maker_$10745_memory_ptr_$",
                                        "typeString": "function (struct OrderStructs.Maker memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 1964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6419:15:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "6399:35:11"
                                },
                                {
                                  "id": 1992,
                                  "nodeType": "Block",
                                  "src": "6457:422:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 1967,
                                              "name": "merkleTrees",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1860,
                                              "src": "6513:11:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10768_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "struct OrderStructs.MerkleTree calldata[] calldata"
                                              }
                                            },
                                            "id": 1969,
                                            "indexExpression": {
                                              "id": 1968,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1923,
                                              "src": "6525:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6513:14:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            }
                                          },
                                          {
                                            "id": 1970,
                                            "name": "orderHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1961,
                                            "src": "6529:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 1971,
                                              "name": "makerSignatures",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1856,
                                              "src": "6540:15:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                                "typeString": "bytes calldata[] calldata"
                                              }
                                            },
                                            "id": 1973,
                                            "indexExpression": {
                                              "id": 1972,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1923,
                                              "src": "6556:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6540:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 1974,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1932,
                                              "src": "6560:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            "id": 1975,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6569:6:11",
                                            "memberName": "signer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10728,
                                            "src": "6560:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                              "typeString": "struct OrderStructs.MerkleTree calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1966,
                                          "name": "_verifyMerkleProofOrOrderHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2826,
                                          "src": "6483:29:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_MerkleTree_$10768_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (struct OrderStructs.MerkleTree calldata,bytes32,bytes calldata,address) view"
                                          }
                                        },
                                        "id": 1976,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6483:93:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1977,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6483:93:11"
                                    },
                                    {
                                      "expression": {
                                        "id": 1986,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1978,
                                          "name": "totalProtocolFeeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1919,
                                          "src": "6675:22:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "id": 1980,
                                              "name": "takerBid",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1955,
                                              "src": "6718:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              }
                                            },
                                            {
                                              "id": 1981,
                                              "name": "makerAsk",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1932,
                                              "src": "6728:8:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1982,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "6738:3:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1983,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6742:6:11",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "6738:10:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1984,
                                              "name": "orderHash",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1961,
                                              "src": "6750:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                                "typeString": "struct OrderStructs.Taker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                                "typeString": "struct OrderStructs.Maker calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 1979,
                                            "name": "_executeTakerBid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2500,
                                            "src": "6701:16:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                                              "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                                            }
                                          },
                                          "id": 1985,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6701:59:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6675:85:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1987,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6675:85:11"
                                    },
                                    {
                                      "id": 1991,
                                      "nodeType": "UncheckedBlock",
                                      "src": "6787:70:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1989,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "6827:3:11",
                                            "subExpression": {
                                              "id": 1988,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1923,
                                              "src": "6829:1:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1990,
                                          "nodeType": "ExpressionStatement",
                                          "src": "6827:3:11"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1925,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1923,
                                "src": "5963:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1926,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1870,
                                "src": "5967:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5963:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1994,
                            "initializationExpression": {
                              "assignments": [
                                1923
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1923,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "5960:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1994,
                                  "src": "5952:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1922,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5952:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1924,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5952:9:11"
                            },
                            "nodeType": "ForStatement",
                            "src": "5947:950:11"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2082,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "8122:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 2083,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8132:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8136:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8132:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2085,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "8144:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2086,
                            "name": "totalProtocolFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "8155:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2081,
                          "name": "_payProtocolFeeAndAffiliateFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2574,
                          "src": "8091:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,address,uint256)"
                          }
                        },
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8091:87:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2088,
                      "nodeType": "ExpressionStatement",
                      "src": "8091:87:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2090,
                      "name": "_returnETHIfAnyWithOneWeiLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50216,
                      "src": "8228:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8228:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "8228:31:11"
                }
              ]
            },
            "baseFunctions": [
              9421
            ],
            "functionSelector": "0db2bd1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1866,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5164:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49113,
                  "src": "5164:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "5164:12:11"
              }
            ],
            "name": "executeMultipleTakerBids",
            "nameLocation": "4870:24:11",
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "takerBids",
                  "nameLocation": "4934:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "4904:39:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Taker_$10752_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1847,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1846,
                        "name": "OrderStructs.Taker",
                        "nameLocations": [
                          "4904:12:11",
                          "4917:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10752,
                        "src": "4904:18:11"
                      },
                      "referencedDeclaration": 10752,
                      "src": "4904:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                        "typeString": "struct OrderStructs.Taker"
                      }
                    },
                    "id": 1848,
                    "nodeType": "ArrayTypeName",
                    "src": "4904:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Taker_$10752_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Taker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "makerAsks",
                  "nameLocation": "4983:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "4953:39:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Maker_$10745_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1851,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1850,
                        "name": "OrderStructs.Maker",
                        "nameLocations": [
                          "4953:12:11",
                          "4966:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10745,
                        "src": "4953:18:11"
                      },
                      "referencedDeclaration": 10745,
                      "src": "4953:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                        "typeString": "struct OrderStructs.Maker"
                      }
                    },
                    "id": 1852,
                    "nodeType": "ArrayTypeName",
                    "src": "4953:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Maker_$10745_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Maker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "makerSignatures",
                  "nameLocation": "5019:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "5002:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1854,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5002:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1855,
                    "nodeType": "ArrayTypeName",
                    "src": "5002:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "merkleTrees",
                  "nameLocation": "5079:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "5044:46:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10768_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1858,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1857,
                        "name": "OrderStructs.MerkleTree",
                        "nameLocations": [
                          "5044:12:11",
                          "5057:10:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10768,
                        "src": "5044:23:11"
                      },
                      "referencedDeclaration": 10768,
                      "src": "5044:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$10768_storage_ptr",
                        "typeString": "struct OrderStructs.MerkleTree"
                      }
                    },
                    "id": 1859,
                    "nodeType": "ArrayTypeName",
                    "src": "5044:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MerkleTree_$10768_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "5108:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "5100:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5100:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "isAtomic",
                  "nameLocation": "5132:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "5127:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4894:252:11"
            },
            "returnParameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5177:0:11"
            },
            "scope": 2840,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2132,
            "nodeType": "FunctionDefinition",
            "src": "8750:411:11",
            "nodes": [],
            "body": {
              "id": 2131,
              "nodeType": "Block",
              "src": "8979:182:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8993:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8997:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8993:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2114,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9015:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OmniXExchange_$2840",
                            "typeString": "contract OmniXExchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OmniXExchange_$2840",
                            "typeString": "contract OmniXExchange"
                          }
                        ],
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9007:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9007:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8993:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2121,
                  "nodeType": "IfStatement",
                  "src": "8989:80:11",
                  "trueBody": {
                    "id": 2120,
                    "nodeType": "Block",
                    "src": "9022:47:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2117,
                            "name": "CallerInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3971,
                            "src": "9043:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:15:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2119,
                        "nodeType": "RevertStatement",
                        "src": "9036:22:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2122,
                      "name": "protocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "9079:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2124,
                          "name": "takerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "9116:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          }
                        },
                        {
                          "id": 2125,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "9126:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        {
                          "id": 2126,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "9136:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2127,
                          "name": "orderHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2105,
                          "src": "9144:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                            "typeString": "struct OrderStructs.Taker calldata"
                          },
                          {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 2123,
                        "name": "_executeTakerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "9099:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address,bytes32) returns (uint256)"
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9099:55:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9079:75:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:75:11"
                }
              ]
            },
            "documentation": {
              "id": 2095,
              "nodeType": "StructuredDocumentation",
              "src": "8272:473:11",
              "text": " @notice This function is used to do a non-atomic matching in the context of a batch taker bid.\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param sender Sender address (i.e. the initial msg sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount\n @dev This function is only callable by this contract. It is used for non-atomic batch order matching."
            },
            "functionSelector": "37e8cc71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restrictedExecuteTakerBid",
            "nameLocation": "8759:25:11",
            "parameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "8822:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "8794:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2096,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "8794:12:11",
                        "8807:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10752,
                      "src": "8794:18:11"
                    },
                    "referencedDeclaration": 10752,
                    "src": "8794:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "8868:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "8840:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2099,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "8840:12:11",
                        "8853:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10745,
                      "src": "8840:18:11"
                    },
                    "referencedDeclaration": 10745,
                    "src": "8840:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8894:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "8886:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8886:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "8918:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "8910:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8784:149:11"
            },
            "returnParameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "protocolFeeAmount",
                  "nameLocation": "8960:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "8952:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8951:27:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2155,
            "nodeType": "FunctionDefinition",
            "src": "9449:245:11",
            "nodes": [],
            "body": {
              "id": 2154,
              "nodeType": "Block",
              "src": "9501:193:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2138,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9515:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9521:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "9515:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2140,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1669,
                      "src": "9532:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9515:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2152,
                    "nodeType": "Block",
                    "src": "9635:53:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2149,
                            "name": "SameDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9358,
                            "src": "9656:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9656:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2151,
                        "nodeType": "RevertStatement",
                        "src": "9649:28:11"
                      }
                    ]
                  },
                  "id": 2153,
                  "nodeType": "IfStatement",
                  "src": "9511:177:11",
                  "trueBody": {
                    "id": 2148,
                    "nodeType": "Block",
                    "src": "9541:88:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2142,
                            "name": "_updateDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2703,
                            "src": "9555:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9555:24:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2144,
                        "nodeType": "ExpressionStatement",
                        "src": "9555:24:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2145,
                            "name": "NewDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9287,
                            "src": "9598:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9598:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2147,
                        "nodeType": "EmitStatement",
                        "src": "9593:25:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2133,
              "nodeType": "StructuredDocumentation",
              "src": "9167:277:11",
              "text": " @notice This function allows the owner to update the domain separator (if possible).\n @dev Only callable by owner. If there is a fork of the network with a new chainId,\n      it allows the owner to reset the domain separator for the new chain id."
            },
            "functionSelector": "89ccfe89",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2136,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2135,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9491:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15697,
                  "src": "9491:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9491:9:11"
              }
            ],
            "name": "updateDomainSeparator",
            "nameLocation": "9458:21:11",
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9479:2:11"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9501:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2180,
            "nodeType": "FunctionDefinition",
            "src": "9927:321:11",
            "nodes": [],
            "body": {
              "id": 2179,
              "nodeType": "Block",
              "src": "10016:232:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2163,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "10030:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "325f333030",
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10055:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2300_by_1",
                        "typeString": "int_const 2300"
                      },
                      "value": "2_300"
                    },
                    "src": "10030:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2170,
                  "nodeType": "IfStatement",
                  "src": "10026:98:11",
                  "trueBody": {
                    "id": 2169,
                    "nodeType": "Block",
                    "src": "10062:62:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2166,
                            "name": "NewGasLimitETHTransferTooLow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9355,
                            "src": "10083:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10083:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2168,
                        "nodeType": "RevertStatement",
                        "src": "10076:37:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2171,
                      "name": "_gasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "10134:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2172,
                      "name": "newGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "10157:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10134:45:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "10134:45:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2176,
                        "name": "newGasLimitETHTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "10218:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2175,
                      "name": "NewGasLimitETHTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9292,
                      "src": "10195:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10195:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2178,
                  "nodeType": "EmitStatement",
                  "src": "10190:51:11"
                }
              ]
            },
            "documentation": {
              "id": 2156,
              "nodeType": "StructuredDocumentation",
              "src": "9700:222:11",
              "text": " @notice This function allows the owner to update the maximum ETH gas limit for a standard transfer.\n @param newGasLimitETHTransfer New gas limit for ETH transfer\n @dev Only callable by owner."
            },
            "functionSelector": "974e7c9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2160,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10006:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15697,
                  "src": "10006:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "10006:9:11"
              }
            ],
            "name": "updateETHGasLimitForTransfer",
            "nameLocation": "9936:28:11",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "newGasLimitETHTransfer",
                  "nameLocation": "9973:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2180,
                  "src": "9965:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9965:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9964:32:11"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10016:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2330,
            "nodeType": "FunctionDefinition",
            "src": "10566:2019:11",
            "nodes": [],
            "body": {
              "id": 2329,
              "nodeType": "Block",
              "src": "10744:1841:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$3906",
                      "typeString": "enum QuoteType"
                    },
                    "id": 2198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2194,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2187,
                        "src": "10758:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10767:9:11",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10711,
                      "src": "10758:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$3906",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 2196,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "10780:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$3906_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 2197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "10790:3:11",
                      "memberName": "Bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3904,
                      "src": "10780:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$3906",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "10758:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2203,
                  "nodeType": "IfStatement",
                  "src": "10754:91:11",
                  "trueBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "10795:50:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2199,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3994,
                            "src": "10816:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10816:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "RevertStatement",
                        "src": "10809:25:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2205,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "10863:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "10855:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2204,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10855:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2208,
                  "initialValue": {
                    "expression": {
                      "id": 2206,
                      "name": "makerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "10872:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10881:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10728,
                    "src": "10872:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10855:32:11"
                },
                {
                  "id": 2249,
                  "nodeType": "Block",
                  "src": "10897:447:11",
                  "statements": [
                    {
                      "assignments": [
                        2210
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2210,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "10919:20:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2249,
                          "src": "10911:28:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 2209,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10911:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2217,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2211,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "10942:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 2213,
                          "indexExpression": {
                            "id": 2212,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2205,
                            "src": "10957:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10942:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 2216,
                        "indexExpression": {
                          "expression": {
                            "id": 2214,
                            "name": "makerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2187,
                            "src": "10965:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10974:10:11",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10717,
                          "src": "10965:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10942:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10911:74:11"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2218,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "11049:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$9237_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 2220,
                                "indexExpression": {
                                  "id": 2219,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2205,
                                  "src": "11066:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11049:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$9237_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11074:8:11",
                              "memberName": "bidNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9234,
                              "src": "11049:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2222,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2187,
                                "src": "11086:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11095:11:11",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10713,
                              "src": "11086:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11049:57:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2225,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "11126:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 2227,
                              "indexExpression": {
                                "id": 2226,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2205,
                                "src": "11142:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11126:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 2230,
                            "indexExpression": {
                              "expression": {
                                "id": 2228,
                                "name": "makerBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2187,
                                "src": "11150:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11159:11:11",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10715,
                              "src": "11150:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11126:45:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11049:122:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2232,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2210,
                                  "src": "11192:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2235,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11224:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11216:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 2233,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11216:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11216:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "11192:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2238,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2210,
                                  "src": "11230:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2239,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2189,
                                  "src": "11254:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "11230:33:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11192:71:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2242,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11191:73:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11049:215:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2248,
                      "nodeType": "IfStatement",
                      "src": "11028:306:11",
                      "trueBody": {
                        "id": 2247,
                        "nodeType": "Block",
                        "src": "11279:55:11",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2244,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9364,
                                "src": "11304:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11304:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2246,
                            "nodeType": "RevertStatement",
                            "src": "11297:22:11"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    2254,
                    2257,
                    2261,
                    2265,
                    2267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2254,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "11385:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "11368:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11368:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2253,
                        "nodeType": "ArrayTypeName",
                        "src": "11368:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2257,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11423:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "11406:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11406:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ArrayTypeName",
                        "src": "11406:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2261,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "11462:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "11444:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2258,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11444:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2260,
                        "length": {
                          "hexValue": "32",
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11452:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "11444:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2265,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "11504:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "11486:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11486:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2264,
                        "length": {
                          "hexValue": "33",
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11494:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "11486:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "11533:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2329,
                      "src": "11528:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11528:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2274,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2269,
                        "name": "takerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2184,
                        "src": "11594:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 2270,
                        "name": "makerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2187,
                        "src": "11604:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 2271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11614:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11618:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11614:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2268,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "11564:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11564:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11354:271:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2276,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "11699:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2277,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "11719:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2278,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "11727:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11736:10:11",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10717,
                        "src": "11727:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2280,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2189,
                        "src": "11748:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2275,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2728,
                      "src": "11677:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11677:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "11677:81:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2284,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "11817:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11826:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10724,
                        "src": "11817:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2286,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "11838:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11847:14:11",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10722,
                        "src": "11838:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$3901",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "expression": {
                          "id": 2288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11863:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11867:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11863:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2290,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "11875:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2291,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "11883:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2292,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "11892:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$3901",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2283,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "11804:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$3901_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11804:96:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2294,
                  "nodeType": "ExpressionStatement",
                  "src": "11804:96:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2296,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "11986:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2297,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2265,
                        "src": "11998:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2298,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "12010:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12019:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10726,
                        "src": "12010:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2300,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "12029:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2295,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "11947:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11947:89:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2302,
                  "nodeType": "ExpressionStatement",
                  "src": "11947:89:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2305,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2189,
                            "src": "12131:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2306,
                              "name": "makerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "12170:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 2307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12179:10:11",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10717,
                            "src": "12170:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2308,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "12227:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2304,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9275,
                          "src": "12074:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$9275_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "12120:9:11",
                          "12158:10:11",
                          "12207:18:11"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "12074:186:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9275_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12274:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12278:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12274:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2312,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2205,
                        "src": "12298:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2313,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "12318:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12327:10:11",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10719,
                        "src": "12318:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2315,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "12351:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12360:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10726,
                        "src": "12351:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2317,
                          "name": "makerBid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "12382:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12391:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10724,
                        "src": "12382:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2319,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "12415:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2320,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "12436:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2321,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "12457:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2322,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2265,
                        "src": "12481:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9275_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 2303,
                      "name": "TakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9322,
                      "src": "12052:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$9275_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 2323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12052:449:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2324,
                  "nodeType": "EmitStatement",
                  "src": "12047:454:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2325,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2265,
                      "src": "12565:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2327,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12576:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12565:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2193,
                  "id": 2328,
                  "nodeType": "Return",
                  "src": "12558:20:11"
                }
              ]
            },
            "documentation": {
              "id": 2181,
              "nodeType": "StructuredDocumentation",
              "src": "10254:307:11",
              "text": " @notice This function is internal and is used to execute a taker ask (against a maker bid).\n @param takerAsk Taker ask order struct\n @param makerBid Maker bid order struct\n @param orderHash Hash of the maker bid order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerAsk",
            "nameLocation": "10575:16:11",
            "parameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2184,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "10629:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2330,
                  "src": "10601:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2183,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2182,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "10601:12:11",
                        "10614:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10752,
                      "src": "10601:18:11"
                    },
                    "referencedDeclaration": 10752,
                    "src": "10601:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2187,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "10675:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2330,
                  "src": "10647:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2185,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "10647:12:11",
                        "10660:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10745,
                      "src": "10647:18:11"
                    },
                    "referencedDeclaration": 10745,
                    "src": "10647:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2189,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "10701:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2330,
                  "src": "10693:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10693:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10591:125:11"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2330,
                  "src": "10735:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10735:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10734:9:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2500,
            "nodeType": "FunctionDefinition",
            "src": "14834:2232:11",
            "nodes": [],
            "body": {
              "id": 2499,
              "nodeType": "Block",
              "src": "15036:2030:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteType_$3906",
                      "typeString": "enum QuoteType"
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2346,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "15050:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15059:9:11",
                      "memberName": "quoteType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10711,
                      "src": "15050:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$3906",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 2348,
                        "name": "QuoteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "15072:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteType_$3906_$",
                          "typeString": "type(enum QuoteType)"
                        }
                      },
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "15082:3:11",
                      "memberName": "Ask",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3905,
                      "src": "15072:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteType_$3906",
                        "typeString": "enum QuoteType"
                      }
                    },
                    "src": "15050:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2355,
                  "nodeType": "IfStatement",
                  "src": "15046:91:11",
                  "trueBody": {
                    "id": 2354,
                    "nodeType": "Block",
                    "src": "15087:50:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2351,
                            "name": "QuoteTypeInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3994,
                            "src": "15108:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15108:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2353,
                        "nodeType": "RevertStatement",
                        "src": "15101:25:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2357,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "15155:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15147:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2356,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15147:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2360,
                  "initialValue": {
                    "expression": {
                      "id": 2358,
                      "name": "makerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2337,
                      "src": "15164:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                        "typeString": "struct OrderStructs.Maker calldata"
                      }
                    },
                    "id": 2359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15173:6:11",
                    "memberName": "signer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10728,
                    "src": "15164:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15147:32:11"
                },
                {
                  "id": 2401,
                  "nodeType": "Block",
                  "src": "15191:448:11",
                  "statements": [
                    {
                      "assignments": [
                        2362
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2362,
                          "mutability": "mutable",
                          "name": "userOrderNonceStatus",
                          "nameLocation": "15242:20:11",
                          "nodeType": "VariableDeclaration",
                          "scope": 2401,
                          "src": "15234:28:11",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 2361,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15234:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2369,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2363,
                            "name": "userOrderNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "15265:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 2365,
                          "indexExpression": {
                            "id": 2364,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "15280:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15265:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 2368,
                        "indexExpression": {
                          "expression": {
                            "id": 2366,
                            "name": "makerAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "15288:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                              "typeString": "struct OrderStructs.Maker calldata"
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15297:10:11",
                          "memberName": "orderNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10717,
                          "src": "15288:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15265:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15234:74:11"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2370,
                                  "name": "userBidAskNonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "15344:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBidAskNonces_$9237_storage_$",
                                    "typeString": "mapping(address => struct INonceManager.UserBidAskNonces storage ref)"
                                  }
                                },
                                "id": 2372,
                                "indexExpression": {
                                  "id": 2371,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2357,
                                  "src": "15361:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15344:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBidAskNonces_$9237_storage",
                                  "typeString": "struct INonceManager.UserBidAskNonces storage ref"
                                }
                              },
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15369:8:11",
                              "memberName": "askNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9236,
                              "src": "15344:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 2374,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2337,
                                "src": "15381:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15390:11:11",
                              "memberName": "globalNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10713,
                              "src": "15381:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15344:57:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2377,
                                "name": "userSubsetNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "15421:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 2379,
                              "indexExpression": {
                                "id": 2378,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2357,
                                "src": "15437:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15421:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 2382,
                            "indexExpression": {
                              "expression": {
                                "id": 2380,
                                "name": "makerAsk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2337,
                                "src": "15445:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                  "typeString": "struct OrderStructs.Maker calldata"
                                }
                              },
                              "id": 2381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15454:11:11",
                              "memberName": "subsetNonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10715,
                              "src": "15445:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15421:45:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15344:122:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2384,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "15487:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2387,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15519:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15511:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 2385,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15511:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15511:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "15487:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2390,
                                  "name": "userOrderNonceStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "15525:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2391,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2341,
                                  "src": "15549:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "15525:33:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15487:71:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2394,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15486:73:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15344:215:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2400,
                      "nodeType": "IfStatement",
                      "src": "15323:306:11",
                      "trueBody": {
                        "id": 2399,
                        "nodeType": "Block",
                        "src": "15574:55:11",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2396,
                                "name": "NoncesInvalid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9364,
                                "src": "15599:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15599:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2398,
                            "nodeType": "RevertStatement",
                            "src": "15592:22:11"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    2406,
                    2409,
                    2413,
                    2417,
                    2419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2406,
                      "mutability": "mutable",
                      "name": "itemIds",
                      "nameLocation": "15680:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15663:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15663:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2405,
                        "nodeType": "ArrayTypeName",
                        "src": "15663:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2409,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "15718:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15701:24:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15701:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2408,
                        "nodeType": "ArrayTypeName",
                        "src": "15701:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2413,
                      "mutability": "mutable",
                      "name": "recipients",
                      "nameLocation": "15757:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15739:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15739:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2412,
                        "length": {
                          "hexValue": "32",
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15747:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "15739:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2417,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "nameLocation": "15799:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15781:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15781:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2416,
                        "length": {
                          "hexValue": "33",
                          "id": 2415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15789:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "15781:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2419,
                      "mutability": "mutable",
                      "name": "isNonceInvalidated",
                      "nameLocation": "15828:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2499,
                      "src": "15823:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2418,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15823:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2421,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "15889:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        }
                      },
                      {
                        "id": 2422,
                        "name": "makerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "15899:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 2423,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15909:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15913:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15909:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                          "typeString": "struct OrderStructs.Taker calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                          "typeString": "struct OrderStructs.Maker calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2420,
                      "name": "_executeStrategyForTakerOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "15859:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Taker_$10752_calldata_ptr_$_t_struct$_Maker_$10745_calldata_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                        "typeString": "function (struct OrderStructs.Taker calldata,struct OrderStructs.Maker calldata,address) returns (uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15859:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15649:271:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2428,
                        "name": "isNonceInvalidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "15994:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2429,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "16014:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2430,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16022:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16031:10:11",
                        "memberName": "orderNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10717,
                        "src": "16022:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2432,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2341,
                        "src": "16043:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2427,
                      "name": "_updateUserOrderNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2728,
                      "src": "15972:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,address,uint256,bytes32)"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15972:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "15972:81:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2436,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "16138:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2437,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "16150:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2438,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16162:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16171:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10726,
                        "src": "16162:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2440,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "16181:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2435,
                      "name": "_transferToAskRecipientAndCreatorIfAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "16099:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[2] memory,uint256[3] memory,address,address)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16099:89:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "16099:89:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2444,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16261:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16270:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10724,
                        "src": "16261:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2446,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16294:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16303:14:11",
                        "memberName": "collectionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10722,
                        "src": "16294:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$3901",
                          "typeString": "enum CollectionType"
                        }
                      },
                      {
                        "id": 2448,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "16331:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2449,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2334,
                              "src": "16351:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 2450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16360:9:11",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10747,
                            "src": "16351:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16381:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16373:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2451,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16373:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16373:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16351:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 2457,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2334,
                            "src": "16395:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16404:9:11",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10747,
                          "src": "16395:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "16351:62:11",
                        "trueExpression": {
                          "id": 2456,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2339,
                          "src": "16386:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2460,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "16427:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2409,
                        "src": "16448:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CollectionType_$3901",
                          "typeString": "enum CollectionType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2443,
                      "name": "_transferNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "16235:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_CollectionType_$3901_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum CollectionType,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16235:230:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2463,
                  "nodeType": "ExpressionStatement",
                  "src": "16235:230:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2466,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2341,
                            "src": "16560:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2467,
                              "name": "makerAsk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2337,
                              "src": "16599:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                                "typeString": "struct OrderStructs.Maker calldata"
                              }
                            },
                            "id": 2468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16608:10:11",
                            "memberName": "orderNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10717,
                            "src": "16599:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2469,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2419,
                            "src": "16656:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2465,
                          "name": "NonceInvalidationParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9275,
                          "src": "16503:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NonceInvalidationParameters_$9275_storage_ptr_$",
                            "typeString": "type(struct IOmniXExchange.NonceInvalidationParameters storage pointer)"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "16549:9:11",
                          "16587:10:11",
                          "16636:18:11"
                        ],
                        "names": [
                          "orderHash",
                          "orderNonce",
                          "isNonceInvalidated"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "16503:186:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9275_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        }
                      },
                      {
                        "id": 2471,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "16703:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2472,
                              "name": "takerBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2334,
                              "src": "16723:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                                "typeString": "struct OrderStructs.Taker calldata"
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16732:9:11",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10747,
                            "src": "16723:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16753:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16745:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2474,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16745:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16745:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16723:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 2480,
                            "name": "takerBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2334,
                            "src": "16767:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                              "typeString": "struct OrderStructs.Taker calldata"
                            }
                          },
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16776:9:11",
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10747,
                          "src": "16767:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "16723:62:11",
                        "trueExpression": {
                          "id": 2479,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2339,
                          "src": "16758:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2483,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16799:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16808:10:11",
                        "memberName": "strategyId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10719,
                        "src": "16799:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2485,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16832:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16841:8:11",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10726,
                        "src": "16832:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2487,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2337,
                          "src": "16863:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                            "typeString": "struct OrderStructs.Maker calldata"
                          }
                        },
                        "id": 2488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16872:10:11",
                        "memberName": "collection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10724,
                        "src": "16863:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2489,
                        "name": "itemIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "16896:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2490,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2409,
                        "src": "16917:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2491,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "16938:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      {
                        "id": 2492,
                        "name": "feeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "16962:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NonceInvalidationParameters_$9275_memory_ptr",
                          "typeString": "struct IOmniXExchange.NonceInvalidationParameters memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 2464,
                      "name": "TakerBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9352,
                      "src": "16481:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NonceInvalidationParameters_$9275_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOmniXExchange.NonceInvalidationParameters memory,address,address,uint256,address,address,uint256[] memory,uint256[] memory,address[2] memory,uint256[3] memory)"
                      }
                    },
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16481:501:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2494,
                  "nodeType": "EmitStatement",
                  "src": "16476:506:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2495,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2417,
                      "src": "17046:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2497,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 2496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17057:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17046:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2345,
                  "id": 2498,
                  "nodeType": "Return",
                  "src": "17039:20:11"
                }
              ]
            },
            "documentation": {
              "id": 2331,
              "nodeType": "StructuredDocumentation",
              "src": "14457:372:11",
              "text": " @notice This function is internal and is used to execute a taker bid (against a maker ask).\n @param takerBid Taker bid order struct\n @param makerAsk Maker ask order struct\n @param sender Sender of the transaction (i.e. msg.sender)\n @param orderHash Hash of the maker ask order\n @return protocolFeeAmount Protocol fee amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTakerBid",
            "nameLocation": "14843:16:11",
            "parameters": {
              "id": 2342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "14897:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "14869:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10752_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 2333,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2332,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "14869:12:11",
                        "14882:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10752,
                      "src": "14869:18:11"
                    },
                    "referencedDeclaration": 10752,
                    "src": "14869:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10752_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "14943:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "14915:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10745_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 2336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2335,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "14915:12:11",
                        "14928:5:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10745,
                      "src": "14915:18:11"
                    },
                    "referencedDeclaration": 10745,
                    "src": "14915:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10745_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2339,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14969:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "14961:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14961:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2341,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "14993:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "14985:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14985:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14859:149:11"
            },
            "returnParameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "15027:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15027:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15026:9:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2574,
            "nodeType": "FunctionDefinition",
            "src": "17460:1635:11",
            "nodes": [],
            "body": {
              "id": 2573,
              "nodeType": "Block",
              "src": "17633:1462:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2512,
                      "name": "totalProtocolFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2509,
                      "src": "17647:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17673:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17647:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2572,
                  "nodeType": "IfStatement",
                  "src": "17643:1446:11",
                  "trueBody": {
                    "id": 2571,
                    "nodeType": "Block",
                    "src": "17676:1413:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2515,
                            "name": "affiliate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2507,
                            "src": "17694:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17715:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17707:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2516,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17707:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17707:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17694:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2563,
                        "nodeType": "IfStatement",
                        "src": "17690:1209:11",
                        "trueBody": {
                          "id": 2562,
                          "nodeType": "Block",
                          "src": "17719:1180:11",
                          "statements": [
                            {
                              "condition": {
                                "id": 2521,
                                "name": "isAffiliateProgramActive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "17907:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2561,
                              "nodeType": "IfStatement",
                              "src": "17903:982:11",
                              "trueBody": {
                                "id": 2560,
                                "nodeType": "Block",
                                "src": "17933:952:11",
                                "statements": [
                                  {
                                    "assignments": [
                                      2523
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2523,
                                        "mutability": "mutable",
                                        "name": "totalAffiliateFeeAmount",
                                        "nameLocation": "17963:23:11",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2560,
                                        "src": "17955:31:11",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2522,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "17955:7:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2532,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2528,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2524,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2509,
                                              "src": "17990:22:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "baseExpression": {
                                                "id": 2525,
                                                "name": "affiliateRates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 237,
                                                "src": "18015:14:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 2527,
                                              "indexExpression": {
                                                "id": 2526,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2507,
                                                "src": "18030:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "18015:25:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17990:50:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2529,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "17989:52:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2530,
                                        "name": "ONE_HUNDRED_PERCENT_IN_BP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "18068:25:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17989:104:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "17955:138:11"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2533,
                                        "name": "totalAffiliateFeeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2523,
                                        "src": "18120:23:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2534,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18147:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "18120:28:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2559,
                                    "nodeType": "IfStatement",
                                    "src": "18116:751:11",
                                    "trueBody": {
                                      "id": 2558,
                                      "nodeType": "Block",
                                      "src": "18150:717:11",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2538,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2536,
                                              "name": "totalProtocolFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2509,
                                              "src": "18176:22:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "-=",
                                            "rightHandSide": {
                                              "id": 2537,
                                              "name": "totalAffiliateFeeAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2523,
                                              "src": "18202:23:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18176:49:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2539,
                                          "nodeType": "ExpressionStatement",
                                          "src": "18176:49:11"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 2542,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2540,
                                              "name": "bidUser",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2505,
                                              "src": "18594:7:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "!=",
                                            "rightExpression": {
                                              "id": 2541,
                                              "name": "affiliate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2507,
                                              "src": "18605:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "18594:20:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2551,
                                          "nodeType": "IfStatement",
                                          "src": "18590:161:11",
                                          "trueBody": {
                                            "id": 2550,
                                            "nodeType": "Block",
                                            "src": "18616:135:11",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 2544,
                                                      "name": "currency",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2503,
                                                      "src": "18670:8:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2545,
                                                      "name": "bidUser",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2505,
                                                      "src": "18680:7:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2546,
                                                      "name": "affiliate",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2507,
                                                      "src": "18689:9:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    {
                                                      "id": 2547,
                                                      "name": "totalAffiliateFeeAmount",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2523,
                                                      "src": "18700:23:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2543,
                                                    "name": "_transferFungibleTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2610,
                                                    "src": "18646:23:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                      "typeString": "function (address,address,address,uint256)"
                                                    }
                                                  },
                                                  "id": 2548,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18646:78:11",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 2549,
                                                "nodeType": "ExpressionStatement",
                                                "src": "18646:78:11"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "id": 2553,
                                                "name": "affiliate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2507,
                                                "src": "18799:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2554,
                                                "name": "currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2503,
                                                "src": "18810:8:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2555,
                                                "name": "totalAffiliateFeeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2523,
                                                "src": "18820:23:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 2552,
                                              "name": "AffiliatePayment",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9284,
                                              "src": "18782:16:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                              }
                                            },
                                            "id": 2556,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18782:62:11",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 2557,
                                          "nodeType": "EmitStatement",
                                          "src": "18777:67:11"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2565,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2503,
                              "src": "19014:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2566,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2505,
                              "src": "19024:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2567,
                              "name": "protocolFeeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "19033:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2568,
                              "name": "totalProtocolFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2509,
                              "src": "19055:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2564,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "18990:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18990:88:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2570,
                        "nodeType": "ExpressionStatement",
                        "src": "18990:88:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2501,
              "nodeType": "StructuredDocumentation",
              "src": "17072:383:11",
              "text": " @notice This function is internal and is used to pay the protocol fee and affiliate fee (if any).\n @param currency Currency address to transfer (address(0) is ETH)\n @param bidUser Bid user address\n @param affiliate Affiliate address (address(0) if none)\n @param totalProtocolFeeAmount Total protocol fee amount (denominated in the currency)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payProtocolFeeAndAffiliateFee",
            "nameLocation": "17469:30:11",
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2503,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "17517:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2574,
                  "src": "17509:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17509:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "17543:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2574,
                  "src": "17535:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17535:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "17568:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2574,
                  "src": "17560:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17560:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "mutability": "mutable",
                  "name": "totalProtocolFeeAmount",
                  "nameLocation": "17595:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2574,
                  "src": "17587:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17587:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17499:124:11"
            },
            "returnParameters": {
              "id": 2511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17633:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2610,
            "nodeType": "FunctionDefinition",
            "src": "19366:357:11",
            "nodes": [],
            "body": {
              "id": 2609,
              "nodeType": "Block",
              "src": "19477:246:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2586,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "19491:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19511:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19503:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19503:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19503:10:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19491:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2607,
                    "nodeType": "Block",
                    "src": "19630:87:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2601,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "19670:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2602,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "19680:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2603,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "19688:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2604,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2583,
                              "src": "19699:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2600,
                            "name": "_executeERC20TransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50084,
                            "src": "19644:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19644:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2606,
                        "nodeType": "ExpressionStatement",
                        "src": "19644:62:11"
                      }
                    ]
                  },
                  "id": 2608,
                  "nodeType": "IfStatement",
                  "src": "19487:230:11",
                  "trueBody": {
                    "id": 2599,
                    "nodeType": "Block",
                    "src": "19515:109:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2593,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1666,
                              "src": "19567:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2594,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "19573:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2595,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2583,
                              "src": "19584:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2596,
                              "name": "_gasLimitETHTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "19592:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2592,
                            "name": "_transferETHAndWrapIfFailWithGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50259,
                            "src": "19529:37:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19529:84:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2598,
                        "nodeType": "ExpressionStatement",
                        "src": "19529:84:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2575,
              "nodeType": "StructuredDocumentation",
              "src": "19101:260:11",
              "text": " @notice This function is internal and is used to transfer fungible tokens.\n @param currency Currency address\n @param sender Sender address\n @param recipient Recipient address\n @param amount Amount (in fungible tokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFungibleTokens",
            "nameLocation": "19375:23:11",
            "parameters": {
              "id": 2584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2577,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "19407:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "19399:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19399:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2579,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19425:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "19417:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19417:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2581,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "19441:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "19433:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19433:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2583,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19460:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "19452:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19452:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19398:69:11"
            },
            "returnParameters": {
              "id": 2585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19477:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2667,
            "nodeType": "FunctionDefinition",
            "src": "20196:1029:11",
            "nodes": [],
            "body": {
              "id": 2666,
              "nodeType": "Block",
              "src": "20385:840:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2627,
                      "mutability": "mutable",
                      "name": "sellerProceed",
                      "nameLocation": "20762:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2666,
                      "src": "20754:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20754:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2631,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2628,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2619,
                      "src": "20778:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2630,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 2629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20789:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20778:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20754:37:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2632,
                      "name": "sellerProceed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2627,
                      "src": "20805:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20822:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "20805:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2645,
                  "nodeType": "IfStatement",
                  "src": "20801:121:11",
                  "trueBody": {
                    "id": 2644,
                    "nodeType": "Block",
                    "src": "20825:97:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2636,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2621,
                              "src": "20863:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2637,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2623,
                              "src": "20873:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2638,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2615,
                                "src": "20882:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 2640,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 2639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20893:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20882:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2641,
                              "name": "sellerProceed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2627,
                              "src": "20897:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2635,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "20839:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20839:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2643,
                        "nodeType": "ExpressionStatement",
                        "src": "20839:72:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2647,
                      "mutability": "mutable",
                      "name": "creatorFeeAmount",
                      "nameLocation": "21050:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2666,
                      "src": "21042:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21042:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2651,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2648,
                      "name": "feeAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2619,
                      "src": "21069:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                        "typeString": "uint256[3] memory"
                      }
                    },
                    "id": 2650,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 2649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21080:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21069:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21042:40:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2652,
                      "name": "creatorFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2647,
                      "src": "21096:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21116:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21096:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2665,
                  "nodeType": "IfStatement",
                  "src": "21092:127:11",
                  "trueBody": {
                    "id": 2664,
                    "nodeType": "Block",
                    "src": "21119:100:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2656,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2621,
                              "src": "21157:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2657,
                              "name": "bidUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2623,
                              "src": "21167:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2658,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2615,
                                "src": "21176:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 2660,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 2659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21187:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21176:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2661,
                              "name": "creatorFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2647,
                              "src": "21191:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2655,
                            "name": "_transferFungibleTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "21133:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21133:75:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2663,
                        "nodeType": "ExpressionStatement",
                        "src": "21133:75:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2611,
              "nodeType": "StructuredDocumentation",
              "src": "19729:462:11",
              "text": " @notice This function is private and used to transfer funds to\n         (1) creator recipient (if any)\n         (2) ask recipient.\n @param recipients Recipient addresses\n @param feeAmounts Fees\n @param currency Currency address\n @param bidUser Bid user address\n @dev It does not send to the 0-th element in the array since it is the protocol fee,\n      which is paid later in the execution flow."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToAskRecipientAndCreatorIfAny",
            "nameLocation": "20205:38:11",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "20271:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2667,
                  "src": "20253:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2612,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20253:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2614,
                    "length": {
                      "hexValue": "32",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20261:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "20253:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "20309:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2667,
                  "src": "20291:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2616,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20291:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2618,
                    "length": {
                      "hexValue": "33",
                      "id": 2617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20299:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "20291:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "20337:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2667,
                  "src": "20329:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20329:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "20363:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2667,
                  "src": "20355:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20355:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20243:133:11"
            },
            "returnParameters": {
              "id": 2625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20385:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2703,
            "nodeType": "FunctionDefinition",
            "src": "21360:429:11",
            "nodes": [],
            "body": {
              "id": 2702,
              "nodeType": "Block",
              "src": "21402:387:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2671,
                      "name": "domainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1672,
                      "src": "21412:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 2676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21491:84:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 2675,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "21481:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21481:95:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4c6f6f6b735261726550726f746f636f6c",
                                  "id": 2679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21604:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  },
                                  "value": "LooksRareProtocol"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9e6bc51ef68b436657c5fe7a273ea9121a02b234cc81ad1e04892649c9168c6a",
                                    "typeString": "literal_string \"LooksRareProtocol\""
                                  }
                                ],
                                "id": 2678,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "21594:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21594:30:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32",
                                      "id": 2684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21658:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                        "typeString": "literal_string \"2\""
                                      }
                                    ],
                                    "id": 2683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "21652:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 2682,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "21652:5:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21652:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2681,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "21642:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21642:21:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2687,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "21681:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21687:7:11",
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "21681:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2691,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "21720:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$2840",
                                    "typeString": "contract OmniXExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OmniXExchange_$2840",
                                    "typeString": "contract OmniXExchange"
                                  }
                                ],
                                "id": 2690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21712:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2689,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21712:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21712:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2673,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "21453:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21457:6:11",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "21453:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21453:286:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2672,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "21430:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 2694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21430:319:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "21412:337:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "21412:337:11"
                },
                {
                  "expression": {
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2697,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1669,
                      "src": "21759:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2698,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "21769:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21775:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "21769:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21759:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2701,
                  "nodeType": "ExpressionStatement",
                  "src": "21759:23:11"
                }
              ]
            },
            "documentation": {
              "id": 2668,
              "nodeType": "StructuredDocumentation",
              "src": "21231:124:11",
              "text": " @notice This function is private and used to compute the domain separator and store the current chain id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDomainSeparator",
            "nameLocation": "21369:22:11",
            "parameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21391:2:11"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21402:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2728,
            "nodeType": "FunctionDefinition",
            "src": "22466:278:11",
            "nodes": [],
            "body": {
              "id": 2727,
              "nodeType": "Block",
              "src": "22623:121:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2715,
                          "name": "userOrderNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "22633:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bytes32))"
                          }
                        },
                        "id": 2718,
                        "indexExpression": {
                          "id": 2716,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2708,
                          "src": "22648:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22633:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 2719,
                      "indexExpression": {
                        "id": 2717,
                        "name": "orderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2710,
                        "src": "22656:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22633:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "condition": {
                            "id": 2720,
                            "name": "isNonceInvalidated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2706,
                            "src": "22671:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2722,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "22727:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "22671:65:11",
                          "trueExpression": {
                            "id": 2721,
                            "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "22692:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2724,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22670:67:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "22633:104:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "22633:104:11"
                }
              ]
            },
            "documentation": {
              "id": 2704,
              "nodeType": "StructuredDocumentation",
              "src": "21795:666:11",
              "text": " @notice This function is internal and is called during the execution of a transaction to decide\n         how to map the user's order nonce.\n @param isNonceInvalidated Whether the nonce is being invalidated\n @param signer Signer address\n @param orderNonce Maker user order nonce\n @param orderHash Hash of the order struct\n @dev If isNonceInvalidated is true, this function invalidates the user order nonce for future execution.\n      If it is equal to false, this function maps the order hash for this user order nonce\n      to prevent other order structs sharing the same order nonce to be executed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateUserOrderNonce",
            "nameLocation": "22475:21:11",
            "parameters": {
              "id": 2713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2706,
                  "mutability": "mutable",
                  "name": "isNonceInvalidated",
                  "nameLocation": "22511:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "22506:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22506:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2708,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "22547:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "22539:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22539:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "orderNonce",
                  "nameLocation": "22571:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "22563:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22563:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "22599:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "22591:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22591:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22496:118:11"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22623:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2764,
            "nodeType": "FunctionDefinition",
            "src": "23131:485:11",
            "nodes": [],
            "body": {
              "id": 2763,
              "nodeType": "Block",
              "src": "23246:370:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2738,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1669,
                      "src": "23260:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2739,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "23271:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23277:7:11",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "23271:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23260:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2761,
                    "nodeType": "Block",
                    "src": "23562:48:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2758,
                            "name": "ChainIdInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9361,
                            "src": "23583:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23583:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2760,
                        "nodeType": "RevertStatement",
                        "src": "23576:23:11"
                      }
                    ]
                  },
                  "id": 2762,
                  "nodeType": "IfStatement",
                  "src": "23256:354:11",
                  "trueBody": {
                    "id": 2757,
                    "nodeType": "Block",
                    "src": "23286:270:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "1901",
                                      "id": 2748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23432:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      "value": "\u0019\u0001"
                                    },
                                    {
                                      "id": 2749,
                                      "name": "domainSeparator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1672,
                                      "src": "23444:15:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 2750,
                                      "name": "computedHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2731,
                                      "src": "23461:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2746,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "23415:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "23419:12:11",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "23415:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23415:59:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2745,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "23405:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23405:70:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2753,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2735,
                              "src": "23493:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2754,
                              "name": "makerSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2733,
                              "src": "23517:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 2742,
                              "name": "SignatureCheckerCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49281,
                              "src": "23356:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureCheckerCalldata_$49281_$",
                                "typeString": "type(library SignatureCheckerCalldata)"
                              }
                            },
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23381:6:11",
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49180,
                            "src": "23356:31:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,bytes calldata) view"
                            }
                          },
                          "id": 2755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23356:189:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2756,
                        "nodeType": "ExpressionStatement",
                        "src": "23356:189:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2729,
              "nodeType": "StructuredDocumentation",
              "src": "22750:376:11",
              "text": " @notice This function is private and used to verify the chain id, compute the digest, and verify the signature.\n @dev If chainId is not equal to the cached chain id, it would revert.\n @param computedHash Hash of order (maker bid or maker ask) or merkle root\n @param makerSignature Signature of the maker\n @param signer Signer address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeDigestAndVerify",
            "nameLocation": "23140:23:11",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2731,
                  "mutability": "mutable",
                  "name": "computedHash",
                  "nameLocation": "23172:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "23164:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2730,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23164:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2733,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "23201:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "23186:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23186:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "23225:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "23217:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23217:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23163:69:11"
            },
            "returnParameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23246:0:11"
            },
            "scope": 2840,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2826,
            "nodeType": "FunctionDefinition",
            "src": "24141:736:11",
            "nodes": [],
            "body": {
              "id": 2825,
              "nodeType": "Block",
              "src": "24337:540:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2778,
                      "mutability": "mutable",
                      "name": "proofLength",
                      "nameLocation": "24355:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "24347:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2777,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24347:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2782,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 2779,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2768,
                        "src": "24369:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                          "typeString": "struct OrderStructs.MerkleTree calldata"
                        }
                      },
                      "id": 2780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24380:5:11",
                      "memberName": "proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10767,
                      "src": "24369:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10761_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                      }
                    },
                    "id": 2781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "24386:6:11",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "24369:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24347:45:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2783,
                      "name": "proofLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2778,
                      "src": "24407:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24422:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24407:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2818,
                  "nodeType": "IfStatement",
                  "src": "24403:404:11",
                  "trueBody": {
                    "id": 2817,
                    "nodeType": "Block",
                    "src": "24425:382:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2786,
                            "name": "proofLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "24443:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2787,
                            "name": "MAX_CALLDATA_PROOF_LENGTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "24457:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24443:39:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2794,
                        "nodeType": "IfStatement",
                        "src": "24439:117:11",
                        "trueBody": {
                          "id": 2793,
                          "nodeType": "Block",
                          "src": "24484:72:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 2790,
                                    "name": "proofLength",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2778,
                                    "src": "24529:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2789,
                                  "name": "MerkleProofTooLarge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3988,
                                  "src": "24509:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 2791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24509:32:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2792,
                              "nodeType": "RevertStatement",
                              "src": "24502:39:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "24574:90:11",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2797,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "24619:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24630:5:11",
                                "memberName": "proof",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10767,
                                "src": "24619:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10761_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2799,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "24637:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24648:4:11",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10763,
                                "src": "24637:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2801,
                                "name": "orderHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2770,
                                "src": "24654:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_MerkleTreeNode_$10761_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct OrderStructs.MerkleTreeNode calldata[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 2795,
                                "name": "MerkleProofCalldataWithNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10597,
                                "src": "24575:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProofCalldataWithNodes_$10597_$",
                                  "typeString": "type(library MerkleProofCalldataWithNodes)"
                                }
                              },
                              "id": 2796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24604:14:11",
                              "memberName": "verifyCalldata",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10517,
                              "src": "24575:43:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_MerkleTreeNode_$10761_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (struct OrderStructs.MerkleTreeNode calldata[] calldata,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 2802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24575:89:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2808,
                        "nodeType": "IfStatement",
                        "src": "24570:156:11",
                        "trueBody": {
                          "id": 2807,
                          "nodeType": "Block",
                          "src": "24666:60:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2804,
                                  "name": "MerkleProofInvalid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3983,
                                  "src": "24691:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24691:20:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2806,
                              "nodeType": "RevertStatement",
                              "src": "24684:27:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2809,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2770,
                            "src": "24740:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2811,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "24767:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                                    "typeString": "struct OrderStructs.MerkleTree calldata"
                                  }
                                },
                                "id": 2812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24778:4:11",
                                "memberName": "root",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10763,
                                "src": "24767:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2813,
                                "name": "proofLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2778,
                                "src": "24784:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2810,
                              "name": "hashBatchOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "24752:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                              }
                            },
                            "id": 2814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24752:44:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "24740:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2816,
                        "nodeType": "ExpressionStatement",
                        "src": "24740:56:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2820,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "24841:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2821,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "24852:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 2822,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "24863:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2819,
                      "name": "_computeDigestAndVerify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2764,
                      "src": "24817:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes calldata,address) view"
                      }
                    },
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24817:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "24817:53:11"
                }
              ]
            },
            "documentation": {
              "id": 2765,
              "nodeType": "StructuredDocumentation",
              "src": "23622:514:11",
              "text": " @notice This function is private and called to verify whether the merkle proofs provided for the order hash\n         are correct or verify the order hash if the order is not part of a merkle tree.\n @param merkleTree Merkle tree\n @param orderHash Order hash (can be maker bid hash or maker ask hash)\n @param signature Maker order signature\n @param signer Maker address\n @dev It verifies (1) merkle proof (if necessary) (2) signature is from the expected signer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMerkleProofOrOrderHash",
            "nameLocation": "24150:29:11",
            "parameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "24222:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "24189:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10768_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 2767,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2766,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "24189:12:11",
                        "24202:10:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10768,
                      "src": "24189:23:11"
                    },
                    "referencedDeclaration": 10768,
                    "src": "24189:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10768_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "24250:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "24242:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24242:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "24284:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "24269:24:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24269:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "24311:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "24303:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24303:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24179:144:11"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24337:0:11"
            },
            "scope": 2840,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 2839,
            "nodeType": "FunctionDefinition",
            "src": "24884:148:11",
            "nodes": [],
            "body": {
              "id": 2838,
              "nodeType": "Block",
              "src": "25024:8:11",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              11482
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nonblockingLzReceive",
            "nameLocation": "24893:21:11",
            "overrides": {
              "id": 2836,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25016:8:11"
            },
            "parameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "_srcChainId",
                  "nameLocation": "24922:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2839,
                  "src": "24915:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "24915:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2830,
                  "mutability": "mutable",
                  "name": "_srcAddress",
                  "nameLocation": "24948:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2839,
                  "src": "24935:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2829,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24935:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2832,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "24968:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2839,
                  "src": "24961:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "24961:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2834,
                  "mutability": "mutable",
                  "name": "_payload",
                  "nameLocation": "24989:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2839,
                  "src": "24976:21:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24976:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24914:84:11"
            },
            "returnParameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25024:0:11"
            },
            "scope": 2840,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1648,
              "name": "IOmniXExchange",
              "nameLocations": [
                "1505:14:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9422,
              "src": "1505:14:11"
            },
            "id": 1649,
            "nodeType": "InheritanceSpecifier",
            "src": "1505:14:11"
          },
          {
            "baseName": {
              "id": 1650,
              "name": "TransferSelectorNFT",
              "nameLocations": [
                "1525:19:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3896,
              "src": "1525:19:11"
            },
            "id": 1651,
            "nodeType": "InheritanceSpecifier",
            "src": "1525:19:11"
          },
          {
            "baseName": {
              "id": 1652,
              "name": "LowLevelETHReturnETHIfAnyExceptOneWei",
              "nameLocations": [
                "1550:37:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50217,
              "src": "1550:37:11"
            },
            "id": 1653,
            "nodeType": "InheritanceSpecifier",
            "src": "1550:37:11"
          },
          {
            "baseName": {
              "id": 1654,
              "name": "LowLevelWETH",
              "nameLocations": [
                "1593:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50260,
              "src": "1593:12:11"
            },
            "id": 1655,
            "nodeType": "InheritanceSpecifier",
            "src": "1593:12:11"
          },
          {
            "baseName": {
              "id": 1656,
              "name": "LowLevelERC20Transfer",
              "nameLocations": [
                "1611:21:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50148,
              "src": "1611:21:11"
            },
            "id": 1657,
            "nodeType": "InheritanceSpecifier",
            "src": "1611:21:11"
          },
          {
            "baseName": {
              "id": 1658,
              "name": "BatchOrderTypehashRegistry",
              "nameLocations": [
                "1638:26:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 455,
              "src": "1638:26:11"
            },
            "id": 1659,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:26:11"
          }
        ],
        "canonicalName": "OmniXExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2840,
          455,
          50148,
          50260,
          50217,
          3896,
          49122,
          49560,
          1376,
          9039,
          3191,
          825,
          322,
          11546,
          11362,
          9229,
          9198,
          15761,
          52309,
          8959,
          9003,
          9840,
          1613,
          9263,
          1401,
          9422
        ],
        "name": "OmniXExchange",
        "nameLocation": "1484:13:11",
        "scope": 2841,
        "usedErrors": [
          3971,
          3974,
          3980,
          3983,
          3988,
          3994,
          8955,
          8958,
          9024,
          9027,
          9030,
          9033,
          9038,
          9355,
          9358,
          9361,
          9364,
          9830,
          9833,
          9836,
          9839,
          15682,
          15684,
          49462,
          49476,
          49490,
          49493,
          49496,
          49501,
          49504,
          49509,
          49559
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 11
}