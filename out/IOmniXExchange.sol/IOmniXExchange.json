{
  "abi": [
    {
      "inputs": [],
      "name": "ChainIdInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewGasLimitETHTransferTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoncesInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameDomainSeparator",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "AffiliatePayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewDomainSeparator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimitETHTransfer",
          "type": "uint256"
        }
      ],
      "name": "NewGasLimitETHTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "askUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerAsk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isNonceInvalidated",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
          "name": "nonceInvalidationParameters",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "feeRecipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "feeAmounts",
          "type": "uint256[3]"
        }
      ],
      "name": "TakerBid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "destAirdrop",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker[]",
          "name": "takerBids",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker[]",
          "name": "makerAsks",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "makerSignatures",
          "type": "bytes[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree[]",
          "name": "merkleTrees",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAtomic",
          "type": "bool"
        }
      ],
      "name": "executeMultipleTakerBids",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerBid",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "destAirdrop",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16",
              "name": "lzChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderStructs.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct OrderStructs.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct OrderStructs.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "executeMultipleTakerBids(uint256,(address,address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": "c6fcfed0",
    "executeTakerAsk((address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "62d7b6ab",
    "executeTakerBid(uint256,(address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": "c0a23138"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChainIdInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewGasLimitETHTransferTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoncesInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameDomainSeparator\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"affiliateFee\",\"type\":\"uint256\"}],\"name\":\"AffiliatePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewDomainSeparator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimitETHTransfer\",\"type\":\"uint256\"}],\"name\":\"NewGasLimitETHTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"askUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNonceInvalidated\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IOmniXExchange.NonceInvalidationParameters\",\"name\":\"nonceInvalidationParameters\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"feeRecipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"feeAmounts\",\"type\":\"uint256[3]\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destAirdrop\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker[]\",\"name\":\"takerBids\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker[]\",\"name\":\"makerAsks\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"makerSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree[]\",\"name\":\"merkleTrees\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAtomic\",\"type\":\"bool\"}],\"name\":\"executeMultipleTakerBids\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destAirdrop\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"lzChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderStructs.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum OrderStructs.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderStructs.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderStructs.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"events\":{\"AffiliatePayment(address,address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"affiliateFee\":\"Affiliate fee (in the currency)\",\"currency\":\"Address of the currency\"}},\"NewGasLimitETHTransfer(uint256)\":{\"params\":{\"gasLimitETHTransfer\":\"Gas limit for an ETH transfer\"}},\"TakerAsk((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"params\":{\"amounts\":\"Array of amounts (for item ids)\",\"askUser\":\"Address of the ask user\",\"bidUser\":\"Address of the bid user\",\"collection\":\"Address of the collection\",\"currency\":\"Address of the currency\",\"feeAmounts\":\"Array of fee amounts        feeAmounts[0] Fee amount for the user receiving sale proceeds        feeAmounts[1] Creator fee amount        feeAmounts[2] Protocol fee amount prior to adjustment for a potential affiliate payment\",\"feeRecipients\":\"Array of fee recipients        feeRecipients[0] User who receives the proceeds of the sale (it can be the taker ask user or different)        feeRecipients[1] Creator fee recipient (if none, address(0))\",\"itemIds\":\"Array of item ids\",\"nonceInvalidationParameters\":\"Struct about nonce invalidation parameters\",\"strategyId\":\"Id of the strategy\"}},\"TakerBid((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"params\":{\"amounts\":\"Array of amounts (for item ids)\",\"bidRecipient\":\"Address of the recipient of the bid\",\"bidUser\":\"Address of the bid user\",\"collection\":\"Address of the collection\",\"currency\":\"Address of the currency\",\"feeAmounts\":\"Array of fee amounts        feeAmounts[0] Fee amount for the user receiving sale proceeds        feeAmounts[1] Creator fee amount        feeAmounts[2] Protocol fee amount prior to adjustment for a potential affiliate payment\",\"feeRecipients\":\"Array of fee recipients        feeRecipients[0] User who receives the proceeds of the sale (it is the maker ask user)        feeRecipients[1] Creator fee recipient (if none, address(0))\",\"itemIds\":\"Array of item ids\",\"nonceInvalidationParameters\":\"Struct about nonce invalidation parameters\",\"strategyId\":\"Id of the strategy\"}}},\"kind\":\"dev\",\"methods\":{\"executeMultipleTakerBids(uint256,(address,address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"isAtomic\":\"Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail\",\"makerAsks\":\"Array of maker ask structs\",\"makerSignatures\":\"Array of maker signatures\",\"merkleTrees\":\"Array of merkle tree structs if the signature contains multiple maker orders\",\"takerBids\":\"Array of taker bid structs\"}},\"executeTakerAsk((address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerBid\":\"Maker bid struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerAsk\":\"Taker ask struct\"}},\"executeTakerBid(uint256,(address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerAsk\":\"Maker ask struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerBid\":\"Taker bid struct\"}}},\"title\":\"ILooksRareProtocol\",\"version\":1},\"userdoc\":{\"errors\":{\"ChainIdInvalid()\":[{\"notice\":\"It is returned if the domain separator should change.\"}],\"NewGasLimitETHTransferTooLow()\":[{\"notice\":\"It is returned if the gas limit for a standard ETH transfer is too low.\"}],\"NoncesInvalid()\":[{\"notice\":\"It is returned if the nonces are invalid.\"}],\"SameDomainSeparator()\":[{\"notice\":\"It is returned if the domain separator cannot be updated (i.e. the chainId is the same).\"}]},\"events\":{\"AffiliatePayment(address,address,uint256)\":{\"notice\":\"It is emitted when there is an affiliate fee paid.\"},\"NewDomainSeparator()\":{\"notice\":\"It is emitted if there is a change in the domain separator.\"},\"NewGasLimitETHTransfer(uint256)\":{\"notice\":\"It is emitted when there is a new gas limit for a ETH transfer (before it is wrapped to WETH).\"},\"TakerAsk((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker ask transaction is completed.\"},\"TakerBid((bytes32,uint256,bool),address,address,uint256,address,address,uint256[],uint256[],address[2],uint256[3])\":{\"notice\":\"It is emitted when a taker bid transaction is completed.\"}},\"kind\":\"user\",\"methods\":{\"executeMultipleTakerBids(uint256,(address,address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)\":{\"notice\":\"This function allows a user to batch buy with an array of taker bids (against an array of maker asks).\"},\"executeTakerAsk((address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker ask (against a maker bid).\"},\"executeTakerBid(uint256,(address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker bid (against a maker ask).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOmniXExchange.sol\":\"IOmniXExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/interfaces/IOmniXExchange.sol\":{\"keccak256\":\"0x310b12355c12bd1a4e24b36c7e8ba91ffe672255644e5eb3ef89501865349baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393082a70959149c0779b998e39892033ec3244d1e15cc1756b77e424f115427\",\"dweb:/ipfs/Qma2ugjoaayVGbFqDg54ATwyqQip47W6rpqeS4VKJWNNWe\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0x8ac102dfcc046ef66725c1d360cd756ef6e384c6dad0f1333015b7c2cdfd2fc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7feae6cd326dc47ad020efc4e59f02f5bb09a9e637fc81107035f7d0871b5dab\",\"dweb:/ipfs/QmTxBn3xKLdPq4PiNNgKAawg9CodCB6hmuQmHittGenaLF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ChainIdInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewGasLimitETHTransferTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoncesInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameDomainSeparator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "affiliateFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AffiliatePayment",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewDomainSeparator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasLimitETHTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewGasLimitETHTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "askUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerAsk",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IOmniXExchange.NonceInvalidationParameters",
              "name": "nonceInvalidationParameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isNonceInvalidated",
                  "type": "bool"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidUser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "bidRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "address[2]",
              "name": "feeRecipients",
              "type": "address[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[3]",
              "name": "feeAmounts",
              "type": "uint256[3]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TakerBid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "destAirdrop",
              "type": "uint256"
            },
            {
              "internalType": "struct OrderStructs.Taker[]",
              "name": "takerBids",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker[]",
              "name": "makerAsks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "makerSignatures",
              "type": "bytes[]"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree[]",
              "name": "merkleTrees",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAtomic",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeMultipleTakerBids"
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeTakerAsk"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "destAirdrop",
              "type": "uint256"
            },
            {
              "internalType": "struct OrderStructs.Taker",
              "name": "takerBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct OrderStructs.Maker",
              "name": "makerAsk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum QuoteType",
                  "name": "quoteType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "globalNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "subsetNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "orderNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum CollectionType",
                  "name": "collectionType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "itemIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint16",
                  "name": "lzChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalParameters",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "struct OrderStructs.MerkleTree",
              "name": "merkleTree",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct OrderStructs.MerkleTreeNode[]",
                  "name": "proof",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum OrderStructs.MerkleTreeNodePosition",
                      "name": "position",
                      "type": "uint8"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeTakerBid"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "executeMultipleTakerBids(uint256,(address,address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "params": {
              "affiliate": "Affiliate address",
              "isAtomic": "Whether the execution should be atomic        i.e. whether it should revert if 1 or more transactions fail",
              "makerAsks": "Array of maker ask structs",
              "makerSignatures": "Array of maker signatures",
              "merkleTrees": "Array of merkle tree structs if the signature contains multiple maker orders",
              "takerBids": "Array of taker bid structs"
            }
          },
          "executeTakerAsk((address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerBid": "Maker bid struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerAsk": "Taker ask struct"
            }
          },
          "executeTakerBid(uint256,(address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "params": {
              "affiliate": "Affiliate address",
              "makerAsk": "Maker ask struct",
              "makerSignature": "Maker signature",
              "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
              "takerBid": "Taker bid struct"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "executeMultipleTakerBids(uint256,(address,address,uint16,bytes)[],(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes)[],bytes[],(bytes32,(bytes32,uint8)[])[],address,bool)": {
            "notice": "This function allows a user to batch buy with an array of taker bids (against an array of maker asks)."
          },
          "executeTakerAsk((address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker ask (against a maker bid)."
          },
          "executeTakerBid(uint256,(address,address,uint16,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],uint16,bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
            "notice": "This function allows a user to execute a taker bid (against a maker ask)."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/IOmniXExchange.sol": "IOmniXExchange"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOmniXExchange.sol": {
        "keccak256": "0x310b12355c12bd1a4e24b36c7e8ba91ffe672255644e5eb3ef89501865349baa",
        "urls": [
          "bzz-raw://393082a70959149c0779b998e39892033ec3244d1e15cc1756b77e424f115427",
          "dweb:/ipfs/Qma2ugjoaayVGbFqDg54ATwyqQip47W6rpqeS4VKJWNNWe"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0x8ac102dfcc046ef66725c1d360cd756ef6e384c6dad0f1333015b7c2cdfd2fc6",
        "urls": [
          "bzz-raw://7feae6cd326dc47ad020efc4e59f02f5bb09a9e637fc81107035f7d0871b5dab",
          "dweb:/ipfs/QmTxBn3xKLdPq4PiNNgKAawg9CodCB6hmuQmHittGenaLF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IOmniXExchange.sol",
    "id": 12993,
    "exportedSymbols": {
      "IOmniXExchange": [
        12992
      ],
      "OrderStructs": [
        14898
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6964:55",
    "nodes": [
      {
        "id": 12831,
        "nodeType": "PragmaDirective",
        "src": "32:24:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 12833,
        "nodeType": "ImportDirective",
        "src": "71:59:55",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12993,
        "sourceUnit": 14899,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12832,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14898,
              "src": "79:12:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12992,
        "nodeType": "ContractDefinition",
        "src": "216:6780:55",
        "nodes": [
          {
            "id": 12841,
            "nodeType": "StructDefinition",
            "src": "603:130:55",
            "nodes": [],
            "canonicalName": "IOmniXExchange.NonceInvalidationParameters",
            "members": [
              {
                "constant": false,
                "id": 12836,
                "mutability": "mutable",
                "name": "orderHash",
                "nameLocation": "656:9:55",
                "nodeType": "VariableDeclaration",
                "scope": 12841,
                "src": "648:17:55",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 12835,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "648:7:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12838,
                "mutability": "mutable",
                "name": "orderNonce",
                "nameLocation": "683:10:55",
                "nodeType": "VariableDeclaration",
                "scope": 12841,
                "src": "675:18:55",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12837,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12840,
                "mutability": "mutable",
                "name": "isNonceInvalidated",
                "nameLocation": "708:18:55",
                "nodeType": "VariableDeclaration",
                "scope": 12841,
                "src": "703:23:55",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12839,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "703:4:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NonceInvalidationParameters",
            "nameLocation": "610:27:55",
            "scope": 12992,
            "visibility": "public"
          },
          {
            "id": 12850,
            "nodeType": "EventDefinition",
            "src": "969:82:55",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12842,
              "nodeType": "StructuredDocumentation",
              "src": "739:225:55",
              "text": " @notice It is emitted when there is an affiliate fee paid.\n @param affiliate Affiliate address\n @param currency Address of the currency\n @param affiliateFee Affiliate fee (in the currency)"
            },
            "eventSelector": "49e92b6b3114f7e128555cd58c568f7c2e0e56fe9b4c46b6125bc308184623b3",
            "name": "AffiliatePayment",
            "nameLocation": "975:16:55",
            "parameters": {
              "id": 12849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "1000:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12850,
                  "src": "992:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "1019:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12850,
                  "src": "1011:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "affiliateFee",
                  "nameLocation": "1037:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12850,
                  "src": "1029:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:59:55"
            }
          },
          {
            "id": 12853,
            "nodeType": "EventDefinition",
            "src": "1148:27:55",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12851,
              "nodeType": "StructuredDocumentation",
              "src": "1057:86:55",
              "text": " @notice It is emitted if there is a change in the domain separator."
            },
            "eventSelector": "5b2d1f36cd3ec425baab07b99853532e2ba6387a472ddbff437c5cc96f2f20ca",
            "name": "NewDomainSeparator",
            "nameLocation": "1154:18:55",
            "parameters": {
              "id": 12852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:2:55"
            }
          },
          {
            "id": 12858,
            "nodeType": "EventDefinition",
            "src": "1371:58:55",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12854,
              "nodeType": "StructuredDocumentation",
              "src": "1181:185:55",
              "text": " @notice It is emitted when there is a new gas limit for a ETH transfer (before it is wrapped to WETH).\n @param gasLimitETHTransfer Gas limit for an ETH transfer"
            },
            "eventSelector": "fc3a20d07f3d5bcc0b01a52011f630765611323fa9afa69f63ba2aa19f7364b6",
            "name": "NewGasLimitETHTransfer",
            "nameLocation": "1377:22:55",
            "parameters": {
              "id": 12857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12856,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasLimitETHTransfer",
                  "nameLocation": "1408:19:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12858,
                  "src": "1400:27:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1399:29:55"
            }
          },
          {
            "id": 12888,
            "nodeType": "EventDefinition",
            "src": "2452:402:55",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12859,
              "nodeType": "StructuredDocumentation",
              "src": "1435:1012:55",
              "text": " @notice It is emitted when a taker ask transaction is completed.\n @param nonceInvalidationParameters Struct about nonce invalidation parameters\n @param askUser Address of the ask user\n @param bidUser Address of the bid user\n @param strategyId Id of the strategy\n @param currency Address of the currency\n @param collection Address of the collection\n @param itemIds Array of item ids\n @param amounts Array of amounts (for item ids)\n @param feeRecipients Array of fee recipients\n        feeRecipients[0] User who receives the proceeds of the sale (it can be the taker ask user or different)\n        feeRecipients[1] Creator fee recipient (if none, address(0))\n @param feeAmounts Array of fee amounts\n        feeAmounts[0] Fee amount for the user receiving sale proceeds\n        feeAmounts[1] Creator fee amount\n        feeAmounts[2] Protocol fee amount prior to adjustment for a potential affiliate payment"
            },
            "eventSelector": "9aaa45d6db2ef74ead0751ea9113263d1dec1b50cea05f0ca2002cb8063564a4",
            "name": "TakerAsk",
            "nameLocation": "2458:8:55",
            "parameters": {
              "id": 12887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonceInvalidationParameters",
                  "nameLocation": "2504:27:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2476:55:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NonceInvalidationParameters_$12841_memory_ptr",
                    "typeString": "struct IOmniXExchange.NonceInvalidationParameters"
                  },
                  "typeName": {
                    "id": 12861,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12860,
                      "name": "NonceInvalidationParameters",
                      "nameLocations": [
                        "2476:27:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12841,
                      "src": "2476:27:55"
                    },
                    "referencedDeclaration": 12841,
                    "src": "2476:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NonceInvalidationParameters_$12841_storage_ptr",
                      "typeString": "struct IOmniXExchange.NonceInvalidationParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "askUser",
                  "nameLocation": "2549:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2541:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12866,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "2611:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2603:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12868,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "2664:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2656:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12870,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "2692:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2684:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "2718:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2710:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12875,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "itemIds",
                  "nameLocation": "2748:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2738:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12873,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2738:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12874,
                    "nodeType": "ArrayTypeName",
                    "src": "2738:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2775:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2765:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2765:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12877,
                    "nodeType": "ArrayTypeName",
                    "src": "2765:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeRecipients",
                  "nameLocation": "2803:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2792:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12879,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2792:7:55",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 12881,
                    "length": {
                      "hexValue": "32",
                      "id": 12880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2800:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2792:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12886,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "2837:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12888,
                  "src": "2826:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12883,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2826:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12885,
                    "length": {
                      "hexValue": "33",
                      "id": 12884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2834:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2826:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:387:55"
            }
          },
          {
            "id": 12918,
            "nodeType": "EventDefinition",
            "src": "3877:407:55",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12889,
              "nodeType": "StructuredDocumentation",
              "src": "2860:1012:55",
              "text": " @notice It is emitted when a taker bid transaction is completed.\n @param nonceInvalidationParameters Struct about nonce invalidation parameters\n @param bidUser Address of the bid user\n @param bidRecipient Address of the recipient of the bid\n @param strategyId Id of the strategy\n @param currency Address of the currency\n @param collection Address of the collection\n @param itemIds Array of item ids\n @param amounts Array of amounts (for item ids)\n @param feeRecipients Array of fee recipients\n        feeRecipients[0] User who receives the proceeds of the sale (it is the maker ask user)\n        feeRecipients[1] Creator fee recipient (if none, address(0))\n @param feeAmounts Array of fee amounts\n        feeAmounts[0] Fee amount for the user receiving sale proceeds\n        feeAmounts[1] Creator fee amount\n        feeAmounts[2] Protocol fee amount prior to adjustment for a potential affiliate payment"
            },
            "eventSelector": "3ee3de4684413690dee6fff1a0a4f92916a1b97d1c5a83cdf24671844306b2e3",
            "name": "TakerBid",
            "nameLocation": "3883:8:55",
            "parameters": {
              "id": 12917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12892,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonceInvalidationParameters",
                  "nameLocation": "3929:27:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "3901:55:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NonceInvalidationParameters_$12841_memory_ptr",
                    "typeString": "struct IOmniXExchange.NonceInvalidationParameters"
                  },
                  "typeName": {
                    "id": 12891,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12890,
                      "name": "NonceInvalidationParameters",
                      "nameLocations": [
                        "3901:27:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12841,
                      "src": "3901:27:55"
                    },
                    "referencedDeclaration": 12841,
                    "src": "3901:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NonceInvalidationParameters_$12841_storage_ptr",
                      "typeString": "struct IOmniXExchange.NonceInvalidationParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bidUser",
                  "nameLocation": "3974:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "3966:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bidRecipient",
                  "nameLocation": "4036:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4028:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "4094:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4086:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4086:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12900,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "4122:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4114:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12902,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "4148:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4140:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "itemIds",
                  "nameLocation": "4178:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4168:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12903,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4168:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12904,
                    "nodeType": "ArrayTypeName",
                    "src": "4168:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12908,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4205:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4195:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12906,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4195:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12907,
                    "nodeType": "ArrayTypeName",
                    "src": "4195:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12912,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeRecipients",
                  "nameLocation": "4233:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4222:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12909,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4222:7:55",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 12911,
                    "length": {
                      "hexValue": "32",
                      "id": 12910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4230:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4222:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12916,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "4267:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12918,
                  "src": "4256:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12913,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4256:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12915,
                    "length": {
                      "hexValue": "33",
                      "id": 12914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4264:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4256:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:392:55"
            }
          },
          {
            "id": 12921,
            "nodeType": "ErrorDefinition",
            "src": "4393:37:55",
            "nodes": [],
            "documentation": {
              "id": 12919,
              "nodeType": "StructuredDocumentation",
              "src": "4290:98:55",
              "text": " @notice It is returned if the gas limit for a standard ETH transfer is too low."
            },
            "errorSelector": "ad6d14d6",
            "name": "NewGasLimitETHTransferTooLow",
            "nameLocation": "4399:28:55",
            "parameters": {
              "id": 12920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4427:2:55"
            }
          },
          {
            "id": 12924,
            "nodeType": "ErrorDefinition",
            "src": "4556:28:55",
            "nodes": [],
            "documentation": {
              "id": 12922,
              "nodeType": "StructuredDocumentation",
              "src": "4436:115:55",
              "text": " @notice It is returned if the domain separator cannot be updated (i.e. the chainId is the same)."
            },
            "errorSelector": "a69915e5",
            "name": "SameDomainSeparator",
            "nameLocation": "4562:19:55",
            "parameters": {
              "id": 12923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4581:2:55"
            }
          },
          {
            "id": 12927,
            "nodeType": "ErrorDefinition",
            "src": "4675:23:55",
            "nodes": [],
            "documentation": {
              "id": 12925,
              "nodeType": "StructuredDocumentation",
              "src": "4590:80:55",
              "text": " @notice It is returned if the domain separator should change."
            },
            "errorSelector": "6fd794c7",
            "name": "ChainIdInvalid",
            "nameLocation": "4681:14:55",
            "parameters": {
              "id": 12926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4695:2:55"
            }
          },
          {
            "id": 12930,
            "nodeType": "ErrorDefinition",
            "src": "4777:22:55",
            "nodes": [],
            "documentation": {
              "id": 12928,
              "nodeType": "StructuredDocumentation",
              "src": "4704:68:55",
              "text": " @notice It is returned if the nonces are invalid."
            },
            "errorSelector": "bc17cfe8",
            "name": "NoncesInvalid",
            "nameLocation": "4783:13:55",
            "parameters": {
              "id": 12929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4796:2:55"
            }
          },
          {
            "id": 12947,
            "nodeType": "FunctionDefinition",
            "src": "5171:251:55",
            "nodes": [],
            "documentation": {
              "id": 12931,
              "nodeType": "StructuredDocumentation",
              "src": "4805:361:55",
              "text": " @notice This function allows a user to execute a taker ask (against a maker bid).\n @param takerAsk Taker ask struct\n @param makerBid Maker bid struct\n @param makerSignature Maker signature\n @param merkleTree Merkle tree struct (if the signature contains multiple maker orders)\n @param affiliate Affiliate address"
            },
            "functionSelector": "62d7b6ab",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeTakerAsk",
            "nameLocation": "5180:15:55",
            "parameters": {
              "id": 12945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12934,
                  "mutability": "mutable",
                  "name": "takerAsk",
                  "nameLocation": "5233:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12947,
                  "src": "5205:36:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$14774_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 12933,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12932,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "5205:12:55",
                        "5218:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14774,
                      "src": "5205:18:55"
                    },
                    "referencedDeclaration": 14774,
                    "src": "5205:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$14774_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12937,
                  "mutability": "mutable",
                  "name": "makerBid",
                  "nameLocation": "5279:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12947,
                  "src": "5251:36:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$14765_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 12936,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12935,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "5251:12:55",
                        "5264:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14765,
                      "src": "5251:18:55"
                    },
                    "referencedDeclaration": 14765,
                    "src": "5251:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$14765_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12939,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "5312:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12947,
                  "src": "5297:29:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12938,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5297:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12942,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "5369:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12947,
                  "src": "5336:43:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$14799_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 12941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12940,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "5336:12:55",
                        "5349:10:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14799,
                      "src": "5336:23:55"
                    },
                    "referencedDeclaration": 14799,
                    "src": "5336:23:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$14799_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12944,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "5397:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12947,
                  "src": "5389:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5195:217:55"
            },
            "returnParameters": {
              "id": 12946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5421:0:55"
            },
            "scope": 12992,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12966,
            "nodeType": "FunctionDefinition",
            "src": "5794:288:55",
            "nodes": [],
            "documentation": {
              "id": 12948,
              "nodeType": "StructuredDocumentation",
              "src": "5428:361:55",
              "text": " @notice This function allows a user to execute a taker bid (against a maker ask).\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param makerSignature Maker signature\n @param merkleTree Merkle tree struct (if the signature contains multiple maker orders)\n @param affiliate Affiliate address"
            },
            "functionSelector": "c0a23138",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeTakerBid",
            "nameLocation": "5803:15:55",
            "parameters": {
              "id": 12964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12950,
                  "mutability": "mutable",
                  "name": "destAirdrop",
                  "nameLocation": "5836:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "5828:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5828:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12953,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nameLocation": "5885:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "5857:36:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$14774_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker"
                  },
                  "typeName": {
                    "id": 12952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12951,
                      "name": "OrderStructs.Taker",
                      "nameLocations": [
                        "5857:12:55",
                        "5870:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14774,
                      "src": "5857:18:55"
                    },
                    "referencedDeclaration": 14774,
                    "src": "5857:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$14774_storage_ptr",
                      "typeString": "struct OrderStructs.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12956,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nameLocation": "5931:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "5903:36:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$14765_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker"
                  },
                  "typeName": {
                    "id": 12955,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12954,
                      "name": "OrderStructs.Maker",
                      "nameLocations": [
                        "5903:12:55",
                        "5916:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14765,
                      "src": "5903:18:55"
                    },
                    "referencedDeclaration": 14765,
                    "src": "5903:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$14765_storage_ptr",
                      "typeString": "struct OrderStructs.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12958,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nameLocation": "5964:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "5949:29:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12957,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5949:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12961,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nameLocation": "6021:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "5988:43:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$14799_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree"
                  },
                  "typeName": {
                    "id": 12960,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12959,
                      "name": "OrderStructs.MerkleTree",
                      "nameLocations": [
                        "5988:12:55",
                        "6001:10:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14799,
                      "src": "5988:23:55"
                    },
                    "referencedDeclaration": 14799,
                    "src": "5988:23:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$14799_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12963,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "6049:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12966,
                  "src": "6041:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6041:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5818:246:55"
            },
            "returnParameters": {
              "id": 12965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6081:0:55"
            },
            "scope": 12992,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12991,
            "nodeType": "FunctionDefinition",
            "src": "6662:332:55",
            "nodes": [],
            "documentation": {
              "id": 12967,
              "nodeType": "StructuredDocumentation",
              "src": "6088:569:55",
              "text": " @notice This function allows a user to batch buy with an array of taker bids (against an array of maker asks).\n @param takerBids Array of taker bid structs\n @param makerAsks Array of maker ask structs\n @param makerSignatures Array of maker signatures\n @param merkleTrees Array of merkle tree structs if the signature contains multiple maker orders\n @param affiliate Affiliate address\n @param isAtomic Whether the execution should be atomic\n        i.e. whether it should revert if 1 or more transactions fail"
            },
            "functionSelector": "c6fcfed0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeMultipleTakerBids",
            "nameLocation": "6671:24:55",
            "parameters": {
              "id": 12989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12969,
                  "mutability": "mutable",
                  "name": "destAirdrop",
                  "nameLocation": "6713:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6705:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6705:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12973,
                  "mutability": "mutable",
                  "name": "takerBids",
                  "nameLocation": "6764:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6734:39:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Taker_$14774_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Taker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12971,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12970,
                        "name": "OrderStructs.Taker",
                        "nameLocations": [
                          "6734:12:55",
                          "6747:5:55"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 14774,
                        "src": "6734:18:55"
                      },
                      "referencedDeclaration": 14774,
                      "src": "6734:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Taker_$14774_storage_ptr",
                        "typeString": "struct OrderStructs.Taker"
                      }
                    },
                    "id": 12972,
                    "nodeType": "ArrayTypeName",
                    "src": "6734:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Taker_$14774_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Taker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12977,
                  "mutability": "mutable",
                  "name": "makerAsks",
                  "nameLocation": "6813:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6783:39:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Maker_$14765_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.Maker[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12975,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12974,
                        "name": "OrderStructs.Maker",
                        "nameLocations": [
                          "6783:12:55",
                          "6796:5:55"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 14765,
                        "src": "6783:18:55"
                      },
                      "referencedDeclaration": 14765,
                      "src": "6783:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Maker_$14765_storage_ptr",
                        "typeString": "struct OrderStructs.Maker"
                      }
                    },
                    "id": 12976,
                    "nodeType": "ArrayTypeName",
                    "src": "6783:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Maker_$14765_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.Maker[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12980,
                  "mutability": "mutable",
                  "name": "makerSignatures",
                  "nameLocation": "6849:15:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6832:32:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12978,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6832:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 12979,
                    "nodeType": "ArrayTypeName",
                    "src": "6832:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12984,
                  "mutability": "mutable",
                  "name": "merkleTrees",
                  "nameLocation": "6909:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6874:46:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MerkleTree_$14799_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderStructs.MerkleTree[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12982,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12981,
                        "name": "OrderStructs.MerkleTree",
                        "nameLocations": [
                          "6874:12:55",
                          "6887:10:55"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 14799,
                        "src": "6874:23:55"
                      },
                      "referencedDeclaration": 14799,
                      "src": "6874:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$14799_storage_ptr",
                        "typeString": "struct OrderStructs.MerkleTree"
                      }
                    },
                    "id": 12983,
                    "nodeType": "ArrayTypeName",
                    "src": "6874:25:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MerkleTree_$14799_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderStructs.MerkleTree[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12986,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nameLocation": "6938:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6930:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6930:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12988,
                  "mutability": "mutable",
                  "name": "isAtomic",
                  "nameLocation": "6962:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12991,
                  "src": "6957:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6695:281:55"
            },
            "returnParameters": {
              "id": 12990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6993:0:55"
            },
            "scope": 12992,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IOmniXExchange",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 12834,
          "nodeType": "StructuredDocumentation",
          "src": "132:83:55",
          "text": " @title ILooksRareProtocol\n @author LooksRare protocol team (👀,💎)"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          12992
        ],
        "name": "IOmniXExchange",
        "nameLocation": "226:14:55",
        "scope": 12993,
        "usedErrors": [
          12921,
          12924,
          12927,
          12930
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 55
}