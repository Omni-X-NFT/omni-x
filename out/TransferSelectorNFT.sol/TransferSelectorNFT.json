{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CreatorFeeBpTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthsInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewProtocolFeeRecipientCannotBeNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingTransferInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorForStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotV2Strategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutsideOfTimeRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncementNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyHasNoSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "StrategyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyNotUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyProtocolFeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferAlreadyInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongPotentialOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CancelOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InitiateOwnershipRenouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "InitiateOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "name": "NewBidAskNonces",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creatorFeeManager",
          "type": "address"
        }
      ],
      "name": "NewCreatorFeeManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCreatorFeeBp",
          "type": "uint256"
        }
      ],
      "name": "NewMaxCreatorFeeBp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "NewProtocolFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "OrderNoncesCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "SubsetNoncesCancelled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "orderNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelOrderNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subsetNonces",
          "type": "uint256[]"
        }
      ],
      "name": "cancelSubsetNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorFeeManager",
      "outputs": [
        {
          "internalType": "contract ICreatorFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "bid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ask",
          "type": "bool"
        }
      ],
      "name": "incrementBidAskNonces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "initiateOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCreatorFeeBp",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipStatus",
      "outputs": [
        {
          "internalType": "enum IOwnableTwoSteps.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "standardProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "minTotalFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "maxProtocolFeeBp",
          "type": "uint16"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "isMakerBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferManager",
      "outputs": [
        {
          "internalType": "contract TransferManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCreatorFeeManager",
          "type": "address"
        }
      ],
      "name": "updateCreatorFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxCreatorFeeBp",
          "type": "uint16"
        }
      ],
      "name": "updateMaxCreatorFeeBp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "updateProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "newStandardProtocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMinTotalFee",
          "type": "uint16"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBidAskNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userSubsetNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a03461026b57601f6200162e38819003918201601f1916830192916001600160401b03918285118486101761025557816060928592604097885283398101031261026b5761004d82610270565b9160209061006785610060848401610270565b9201610270565b600380546001600160a01b0319166001600160a01b0396871690811790915586519081529093907f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc908490a1600160085585519060e082019081118282101761025557865260018152828101906032825286810160328152606082019260c88452608083019360009485815260a085019186835260c086019387855287805260098a528c88209651151560ff16905160081b62ffff0016955160181b64ffff00000016915160281b66ffff000000000016925160a81c6affffffff00000000000000169351151560581b6bff00000000000000000000001694600160601b6001900319905160601b1695171717171717905585519080825283820160329052868201603290526060820160c890528060808301528060a083015260c082015260e07f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a291a183600a549116908115610244576001600160b01b0319168117607d60a31b17600a5584519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb109190a1600b805460ff60a01b1916600160a01b17905516608052516113a9908162000285823960805181610df50152f35b8551630f966bcb60e41b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b038216820361026b5756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263134849a61461118c575081631d3c42681461110b5781631df47f801461108957816320cd05c71461104857816323452b9c14610fb65781632bb5a9e614610f755781633e56753914610eed578163463357ec14610eb257816346b625bc14610e2457816346ea255214610de05781634cbac9dc14610db75781635487887614610d485781635a195d1914610d0a5781635b6ac01114610c7f57816364df049e14610c5657816367d9dd7914610c2d5781636e90c01414610c075781637200b82914610b425781637762df2514610b1a57816379ed31d414610a675781637a7d885114610a2f578163838b8f5c14610a065781638da5cb5b146109dd57816391be1360146106d5578163a02bab5714610666578163a39bf29f14610625578163ae1cce5a14610589578163b647a4041461051a578163bb91c339146104a1578163c0b6f561146103eb578163d5a06adf146102b4578163d5b010f5146101d9575063ea179b761461019057600080fd5b346101d557806003193601126101d55760209160ff9082906001600160a01b036101b8611274565b168152600285528181206024358252855220541690519015158152f35b5080fd5b8383346101d557806003193601126101d5576101f3611299565b6101fb61128a565b9160001943014381116102a157917fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4493916060934060801c3387528660205281872054936001838920015493610284575b610264575b508051923384526020840152820152a180f35b61026e919261132a565b9033865285602052816001828820015586610251565b938161028f9161132a565b9333885287602052848389205561024c565b634e487b7160e01b855260118652602485fd5b9050346103e75760803660031901126103e7578035916102d261128a565b6102da6112b9565b6064359161ffff92838116958682036103e3576102f561134d565b6008548810156103d557878952600960205284868a205460281c16871180156103ca575b6103bc57509160809593916103a28896947f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9998b52600960205261036b83878d209060ff801983541691151516179055565b858b20805462ffff001916600886901b62ffff0016179055858b209064ffff00000082549160181b169064ffff0000001916179055565b83519586521515602086015216908301526060820152a180f35b855163b704b7c160e01b8152fd5b508685851611610319565b855163bd7056c760e01b8152fd5b8880fd5b8280fd5b8383346101d55760203660031901126101d557610406611274565b61040e61134d565b83549060ff8260a01c16600381101561048e5761047e576001600160a81b03199091166001600160a01b03909116908117600160a01b179093558051338152602081019390935290917fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9190a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b9050346103e75760203660031901126103e75760e09282913581526009602052205481519160ff82161515835261ffff90818360081c166020850152818360181c16908401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b5050346101d55760203660031901126101d55760207fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa76491610559611274565b61056161134d565b600b80546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101d557806003193601126101d5576105a3611274565b600554602435916001600160a01b039182163303610615576127108311610605577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526006602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b5050346101d55760203660031901126101d5579081906001600160a01b0361064b611274565b16815280602052206001815491015482519182526020820152f35b5050346101d55760203660031901126101d55760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc916106a5611274565b6106ad61134d565b600580546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101d55760c03660031901126101d5576106f06112a8565b6024359161ffff928381168091036109d95761070a6112b9565b926064359163ffffffff60e01b83168093036109d557608435938415158095036109d15760a4356001600160a01b03811696908790036103e357879061074e61134d565b169283831180156109c6575b80156109bb575b6109ab57841561099b5781516345b2b38160e01b81526020989089818d818c5afa908115610991578b9161092c575b501561091c5782519160e0830183811067ffffffffffffffff82111761090957888784888f968f9897968f968e988c91825260018b52838c8c0193169b8c8452828c0195865260608c0197885260808c019a8b5260a08c0198895260c08c01998a526008548252600990522098511515610816908a9060ff801983541691151516179055565b51885462ffff001916911660081b62ffff001617875551865464ffff0000001916911660181b64ffff0000001617855551928454905160a81c6affffffff00000000000000169160ff60581b9051151560581b16926bffffffffffffffffffffffff19905160601b169360281b66ffff0000000000169064ffffffffff161717171790556008549760001989146108f6576001890160085582519889528801528601526060850152608084015260a083015260c08201527f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29060e090a180f35b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b8c5260418d5260248cfd5b825163ef8c37d760e01b81528b90fd5b9050893d8b1161098a575b601f8101601f1916820167ffffffffffffffff811183821017610976578b91839187528101031261097257518015158103610972578c610790565b8a80fd5b50634e487b7160e01b8c5260418d5260248cfd5b503d610937565b84513d8d823e3d90fd5b8151636168384960e11b81528a90fd5b815163b704b7c160e01b81528a90fd5b506101f48411610761565b50828882161161075a565b8780fd5b8680fd5b8480fd5b5050346101d557816003193601126101d55760035490516001600160a01b039091168152602090f35b5050346101d557816003193601126101d557600b5490516001600160a01b039091168152602090f35b5050346101d55760203660031901126101d55760209181906001600160a01b03610a57611274565b1681526006845220549051908152f35b9050346103e757610a7736611222565b9290918315610b0c5750835b838110610ac3575090610abd7f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec42593925192839233846112f0565b0390a180f35b338552600190602082815283872090610add8388886112ca565b358852527f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8387205501610a83565b90516397983bdb60e01b8152fd5b9050346103e757826003193601126103e7575490516001600160a01b03909116815260209150f35b9050346103e757826003193601126103e757805460ff8160a01c166003811015610bf457600103610be5576001600160a01b0381163303610bd657916020917f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc93336bffffffffffffffffffffffff60a01b60035416176003556affffffffffffffffffffff60a81b16905551338152a180f35b5090516357ee7dc960e11b8152fd5b509051632f27941360e11b8152fd5b634e487b7160e01b855260218352602485fd5b5050346101d557816003193601126101d55760209061ffff600a5460a01c169051908152f35b828434610c535780600319360112610c53575060ff6020925460a81c1690519015158152f35b80fd5b5050346101d557816003193601126101d557600a5490516001600160a01b039091168152602090f35b919050346103e757826003193601126103e757610c9a61134d565b81549060ff8260a01c166003811015610cf757610ce8575060ff60a01b1916600160a11b1790557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b81529050fd5b634e487b7160e01b855260218452602485fd5b5050346101d55760203660031901126101d55760209160ff9082906001600160a01b03610d35611274565b1681526007855220541690519015158152f35b919050346103e75760203660031901126103e7577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3491602091610d89611299565b610d9161134d565b825460ff60a81b191690151560a881901b60ff60a81b169190911790925551908152a180f35b5050346101d557816003193601126101d55760055490516001600160a01b039091168152602090f35b5050346101d557816003193601126101d557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103e75760203660031901126103e757610e406112a8565b610e4861134d565b61ffff8116926109c48411610ea45750600a805461ffff60a01b191660a09290921b61ffff60a01b16919091179055519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a180f35b82516397d7dcfb60e01b8152fd5b5050346101d557816003193601126101d557602090517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b9050346103e757826003193601126103e757610f0761134d565b805460ff8160a01c166003811015610bf457600203610f6657600380546001600160a01b031916905560ff60a01b19169055518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b50905163022e289160e11b8152fd5b8383346101d557816003193601126101d55760ff835460a01c169051916003821015610fa357602083838152f35b634e487b7160e01b815260218452602490fd5b919050346103e757826003193601126103e757610fd161134d565b81549060ff8260a01c16906003821015610cf75781156110395750600114611027575b50805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b031916815538610ff4565b5163ccf69db760e01b81528390fd5b5050346101d557806003193601126101d55760209181906001600160a01b0361106f611274565b168152600184528181206024358252845220549051908152f35b919050346103e75760203660031901126103e7576110a5611274565b6110ad61134d565b6001600160a01b03169182156110fd5750600a80546001600160a01b03191683179055519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090602090a180f35b9051630f966bcb60e41b8152fd5b5050346101d557806003193601126101d5577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54390611147611274565b61114f61128a565b9061115861134d565b6001600160a01b03168085526007602052828520805460ff191660ff8415151617905590825191825215156020820152a180f35b849250346103e75761119d36611222565b9290918315611216575050825b8281106111e35750610abd7fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f693945192839233846112f0565b338452602060028152858520906111fb8386866112ca565b35865252848420805460ff19166001908117909155016111aa565b6397983bdb60e01b8152fd5b90602060031983011261126f5760043567ffffffffffffffff9283821161126f578060238301121561126f57816004013593841161126f5760248460051b8301011161126f576024019190565b600080fd5b600435906001600160a01b038216820361126f57565b60243590811515820361126f57565b60043590811515820361126f57565b6004359061ffff8216820361126f57565b6044359061ffff8216820361126f57565b91908110156112da5760051b0190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161126f5760609260051b809284830137010190565b9190820180921161133757565b634e487b7160e01b600052601160045260246000fd5b6003546001600160a01b0316330361136157565b6040516330cd747160e01b8152600490fdfea2646970667358221220d3e451855c1abf0be9185f5ecdc15caf027bba84a3ff288875c5cf3c8fd5670d64736f6c63430008110033",
    "sourceMap": "608:1603:21:-:0;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1116:14:224;608:1603:21;;-1:-1:-1;;;;;;608:1603:21;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;1145:16:224;;608:1603:21;;1145:16:224;608:1603:21;713:1:19;608:1603:21;;;;;;;;;;;;;;;;;;;;;1022:257:19;;;608:1603:21;1096:2:19;608:1603:21;;1022:257:19;;;1096:2;608:1603:21;;;1022:257:19;;608:1603:21;1161:3:19;608:1603:21;;1022:257:19;;;-1:-1:-1;;608:1603:21;;;;;1022:257:19;;608:1603:21;;;;1022:257:19;;;608:1603:21;;;;;;;1004:12:19;608:1603:21;;;;;;;;;;;;;713:1:19;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:2:19;608:1603:21;;;;;1096:2:19;608:1603:21;;;;;1161:3:19;608:1603:21;;;1022:257:19;608:1603:21;;;;;;;;1022:257:19;608:1603:21;;;;1295:57:19;;;608:1603:21;1559:5:12;608:1603:21;;;7973:37:12;;;7969:119;;-1:-1:-1;;;;;;608:1603:21;;;-1:-1:-1;;;608:1603:21;1559:5:12;608:1603:21;;;;;;8159:48:12;;608:1603:21;8159:48:12;915:11:225;608:1603:21;;-1:-1:-1;;;;608:1603:21;-1:-1:-1;;;608:1603:21;;;;1022:257:19;1215:51:21;608:1603;;;;;;;1022:257:19;608:1603:21;;;;;;7969:119:12;608:1603:21;;-1:-1:-1;;;8033:44:12;;;;;608:1603:21;;;;-1:-1:-1;608:1603:21;;;;;-1:-1:-1;608:1603:21;;-1:-1:-1;608:1603:21;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c918263134849a61461118c575081631d3c42681461110b5781631df47f801461108957816320cd05c71461104857816323452b9c14610fb65781632bb5a9e614610f755781633e56753914610eed578163463357ec14610eb257816346b625bc14610e2457816346ea255214610de05781634cbac9dc14610db75781635487887614610d485781635a195d1914610d0a5781635b6ac01114610c7f57816364df049e14610c5657816367d9dd7914610c2d5781636e90c01414610c075781637200b82914610b425781637762df2514610b1a57816379ed31d414610a675781637a7d885114610a2f578163838b8f5c14610a065781638da5cb5b146109dd57816391be1360146106d5578163a02bab5714610666578163a39bf29f14610625578163ae1cce5a14610589578163b647a4041461051a578163bb91c339146104a1578163c0b6f561146103eb578163d5a06adf146102b4578163d5b010f5146101d9575063ea179b761461019057600080fd5b346101d557806003193601126101d55760209160ff9082906001600160a01b036101b8611274565b168152600285528181206024358252855220541690519015158152f35b5080fd5b8383346101d557806003193601126101d5576101f3611299565b6101fb61128a565b9160001943014381116102a157917fb738dd6073fae1a7128e3fcc6b4ca6e1356b7232f87cc98f8a2857bcd83dfc4493916060934060801c3387528660205281872054936001838920015493610284575b610264575b508051923384526020840152820152a180f35b61026e919261132a565b9033865285602052816001828820015586610251565b938161028f9161132a565b9333885287602052848389205561024c565b634e487b7160e01b855260118652602485fd5b9050346103e75760803660031901126103e7578035916102d261128a565b6102da6112b9565b6064359161ffff92838116958682036103e3576102f561134d565b6008548810156103d557878952600960205284868a205460281c16871180156103ca575b6103bc57509160809593916103a28896947f3b25bf77fa688236b850bf89c87e353098688237aa18dc42593aff0f6387aea9998b52600960205261036b83878d209060ff801983541691151516179055565b858b20805462ffff001916600886901b62ffff0016179055858b209064ffff00000082549160181b169064ffff0000001916179055565b83519586521515602086015216908301526060820152a180f35b855163b704b7c160e01b8152fd5b508685851611610319565b855163bd7056c760e01b8152fd5b8880fd5b8280fd5b8383346101d55760203660031901126101d557610406611274565b61040e61134d565b83549060ff8260a01c16600381101561048e5761047e576001600160a81b03199091166001600160a01b03909116908117600160a01b179093558051338152602081019390935290917fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef9190a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b9050346103e75760203660031901126103e75760e09282913581526009602052205481519160ff82161515835261ffff90818360081c166020850152818360181c16908401528160281c16606083015263ffffffff831b8160a81b16608083015260ff8160581c16151560a083015260601c60c0820152f35b5050346101d55760203660031901126101d55760207fa7014d98341b07b23615cb6b4da7cca2a381932b46fb39ca4b8c3875c53aa76491610559611274565b61056161134d565b600b80546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101d557806003193601126101d5576105a3611274565b600554602435916001600160a01b039182163303610615576127108311610605577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526006602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b5050346101d55760203660031901126101d5579081906001600160a01b0361064b611274565b16815280602052206001815491015482519182526020820152f35b5050346101d55760203660031901126101d55760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc916106a5611274565b6106ad61134d565b600580546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b8383346101d55760c03660031901126101d5576106f06112a8565b6024359161ffff928381168091036109d95761070a6112b9565b926064359163ffffffff60e01b83168093036109d557608435938415158095036109d15760a4356001600160a01b03811696908790036103e357879061074e61134d565b169283831180156109c6575b80156109bb575b6109ab57841561099b5781516345b2b38160e01b81526020989089818d818c5afa908115610991578b9161092c575b501561091c5782519160e0830183811067ffffffffffffffff82111761090957888784888f968f9897968f968e988c91825260018b52838c8c0193169b8c8452828c0195865260608c0197885260808c019a8b5260a08c0198895260c08c01998a526008548252600990522098511515610816908a9060ff801983541691151516179055565b51885462ffff001916911660081b62ffff001617875551865464ffff0000001916911660181b64ffff0000001617855551928454905160a81c6affffffff00000000000000169160ff60581b9051151560581b16926bffffffffffffffffffffffff19905160601b169360281b66ffff0000000000169064ffffffffff161717171790556008549760001989146108f6576001890160085582519889528801528601526060850152608084015260a083015260c08201527f5290475107686ff8d28cd104943b127d453b23622ac55346373fa25c0c8957a29060e090a180f35b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b8c5260418d5260248cfd5b825163ef8c37d760e01b81528b90fd5b9050893d8b1161098a575b601f8101601f1916820167ffffffffffffffff811183821017610976578b91839187528101031261097257518015158103610972578c610790565b8a80fd5b50634e487b7160e01b8c5260418d5260248cfd5b503d610937565b84513d8d823e3d90fd5b8151636168384960e11b81528a90fd5b815163b704b7c160e01b81528a90fd5b506101f48411610761565b50828882161161075a565b8780fd5b8680fd5b8480fd5b5050346101d557816003193601126101d55760035490516001600160a01b039091168152602090f35b5050346101d557816003193601126101d557600b5490516001600160a01b039091168152602090f35b5050346101d55760203660031901126101d55760209181906001600160a01b03610a57611274565b1681526006845220549051908152f35b9050346103e757610a7736611222565b9290918315610b0c5750835b838110610ac3575090610abd7f0560c6093fba8a508d0e6ea3b4d7260d7afa9b152731f03a2d05dfe39b0ec42593925192839233846112f0565b0390a180f35b338552600190602082815283872090610add8388886112ca565b358852527f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8387205501610a83565b90516397983bdb60e01b8152fd5b9050346103e757826003193601126103e7575490516001600160a01b03909116815260209150f35b9050346103e757826003193601126103e757805460ff8160a01c166003811015610bf457600103610be5576001600160a01b0381163303610bd657916020917f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc93336bffffffffffffffffffffffff60a01b60035416176003556affffffffffffffffffffff60a81b16905551338152a180f35b5090516357ee7dc960e11b8152fd5b509051632f27941360e11b8152fd5b634e487b7160e01b855260218352602485fd5b5050346101d557816003193601126101d55760209061ffff600a5460a01c169051908152f35b828434610c535780600319360112610c53575060ff6020925460a81c1690519015158152f35b80fd5b5050346101d557816003193601126101d557600a5490516001600160a01b039091168152602090f35b919050346103e757826003193601126103e757610c9a61134d565b81549060ff8260a01c166003811015610cf757610ce8575060ff60a01b1916600160a11b1790557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b81529050fd5b634e487b7160e01b855260218452602485fd5b5050346101d55760203660031901126101d55760209160ff9082906001600160a01b03610d35611274565b1681526007855220541690519015158152f35b919050346103e75760203660031901126103e7577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc3491602091610d89611299565b610d9161134d565b825460ff60a81b191690151560a881901b60ff60a81b169190911790925551908152a180f35b5050346101d557816003193601126101d55760055490516001600160a01b039091168152602090f35b5050346101d557816003193601126101d557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103e75760203660031901126103e757610e406112a8565b610e4861134d565b61ffff8116926109c48411610ea45750600a805461ffff60a01b191660a09290921b61ffff60a01b16919091179055519081527fcaba16bb74e50491b14ebf4755083b43aaf56a765134681af613a2ef8d732f4f90602090a180f35b82516397d7dcfb60e01b8152fd5b5050346101d557816003193601126101d557602090517f53849a1acec87308423850dccd979fc7a4b74b75a79b19c3b98ec8df38a599db8152f35b9050346103e757826003193601126103e757610f0761134d565b805460ff8160a01c166003811015610bf457600203610f6657600380546001600160a01b031916905560ff60a01b19169055518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b50905163022e289160e11b8152fd5b8383346101d557816003193601126101d55760ff835460a01c169051916003821015610fa357602083838152f35b634e487b7160e01b815260218452602490fd5b919050346103e757826003193601126103e757610fd161134d565b81549060ff8260a01c16906003821015610cf75781156110395750600114611027575b50805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b031916815538610ff4565b5163ccf69db760e01b81528390fd5b5050346101d557806003193601126101d55760209181906001600160a01b0361106f611274565b168152600184528181206024358252845220549051908152f35b919050346103e75760203660031901126103e7576110a5611274565b6110ad61134d565b6001600160a01b03169182156110fd5750600a80546001600160a01b03191683179055519081527f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090602090a180f35b9051630f966bcb60e41b8152fd5b5050346101d557806003193601126101d5577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54390611147611274565b61114f61128a565b9061115861134d565b6001600160a01b03168085526007602052828520805460ff191660ff8415151617905590825191825215156020820152a180f35b849250346103e75761119d36611222565b9290918315611216575050825b8281106111e35750610abd7fe8036d6fb143373f3ff63e551373f5fffe4267f6809bf6d3934014a18a9b38f693945192839233846112f0565b338452602060028152858520906111fb8386866112ca565b35865252848420805460ff19166001908117909155016111aa565b6397983bdb60e01b8152fd5b90602060031983011261126f5760043567ffffffffffffffff9283821161126f578060238301121561126f57816004013593841161126f5760248460051b8301011161126f576024019190565b600080fd5b600435906001600160a01b038216820361126f57565b60243590811515820361126f57565b60043590811515820361126f57565b6004359061ffff8216820361126f57565b6044359061ffff8216820361126f57565b91908110156112da5760051b0190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161126f5760609260051b809284830137010190565b9190820180921161133757565b634e487b7160e01b600052601160045260246000fd5b6003546001600160a01b0316330361136157565b6040516330cd747160e01b8152600490fdfea2646970667358221220d3e451855c1abf0be9185f5ecdc15caf027bba84a3ff288875c5cf3c8fd5670d64736f6c63430008110033",
    "sourceMap": "608:1603:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;:::i;:::-;;;;1496:67:14;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;4068:12:14;608:1603:21;4068:12:14;608:1603:21;;;;4058:27:14;4529:53;4058:27;;608:1603:21;4058:27:14;;4089:3;608:1603:21;4142:10:14;608:1603:21;;;;;;;;;;4083:1:14;608:1603:21;;;4194:37:14;608:1603:21;4242:131:14;;;608:1603:21;4383:131:14;;608:1603:21;;;;4142:10:14;;608:1603:21;;;;;;;;;4529:53:14;608:1603:21;;4383:131:14;4406:32;;;;:::i;:::-;4142:10;;608:1603:21;;;;;;4083:1:14;608:1603:21;;;4452:37:14;162:6:4;4383:131:14;;;4242;4265:32;;;;;:::i;:::-;4142:10;;608:1603:21;;;;;;;;;162:6:4;4242:131:14;;608:1603:21;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;3761:16:19;608:1603:21;3747:30:19;;;3743:85;;608:1603:21;;;3859:12:19;608:1603:21;;;;;;;;;;3842:58:19;;:101;;;;608:1603:21;3838:167:19;;608:1603:21;;;;;;4150:55:19;608:1603:21;;;4221:77:19;608:1603:21;;;3859:12:19;608:1603:21;;4015:44:19;608:1603:21;;;;;;;;;;;;;;;;;;;4015:44:19;608:1603:21;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4150:55:19;608:1603:21;;;;;;;;;;;;;;;;;;;;4221:77:19;608:1603:21;;3838:167:19;608:1603:21;;-1:-1:-1;;;3966:28:19;;;3842:101;608:1603:21;;;;;3904:39:19;3842:101;;3743:85;608:1603:21;;-1:-1:-1;;;3800:17:19;;;608:1603:21;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;:::i;:::-;926:61:224;;:::i;:::-;608:1603:21;;;;;;;;;;;;;;3023:108:224;;-1:-1:-1;;;;;;608:1603:21;;;-1:-1:-1;;;;;608:1603:21;;;;;;-1:-1:-1;;;608:1603:21;;;;;;3441:10:224;608:1603:21;;;;;;;;;;;3415:56:224;;608:1603:21;3415:56:224;608:1603:21;;3023:108:224;608:1603:21;;-1:-1:-1;;;3093:27:224;;608:1603:21;;3093:27:224;608:1603:21;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;809:48:19;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;2352:42:12;608:1603:21;;;:::i;:::-;926:61:224;;:::i;:::-;2277:60:12;608:1603:21;;-1:-1:-1;;;;;;608:1603:21;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;2352:42:12;608:1603:21;;;;;;;;;;;;;;;;;;:::i;:::-;1588:19:6;608:1603:21;;;;-1:-1:-1;;;;;608:1603:21;;;1574:10:6;:33;1570:95;;162:6:4;1679:30:6;;1675:87;;1817:31;608:1603:21;;;;;;;;1772:14:6;608:1603:21;;;;;;162:6:4;608:1603:21;;;;;;162:6:4;;608:1603:21;1817:31:6;608:1603:21;;1675:87:6;608:1603:21;;-1:-1:-1;;;1732:19:6;;608:1603:21;;1732:19:6;1570:95;608:1603:21;;-1:-1:-1;;;1630:24:6;;608:1603:21;;1630:24:6;608:1603:21;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;-1:-1:-1;;;;;608:1603:21;;:::i;:::-;;;;;;;;;;;1154:60:14;;608:1603:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;2228:46:6;608:1603:21;;;:::i;:::-;926:61:224;;:::i;:::-;2169:44:6;608:1603:21;;-1:-1:-1;;;;;;608:1603:21;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;2228:46:6;608:1603:21;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;926:61:224;;;;:::i;:::-;608:1603:21;2199:32:19;;;;:73;;;;608:1603:21;2199:99:19;;;;608:1603:21;2195:165:19;;2374:21;;2370:82;;608:1603:21;;-1:-1:-1;;;2467:49:19;;608:1603:21;;;;;2467:49:19;608:1603:21;2467:49:19;;;;;;;;;;;;608:1603:21;2466:50:19;;2462:103;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:308:19;;;;608:1603:21;;;;;;2608:308:19;;;608:1603:21;;;;2608:308:19;;608:1603:21;;;;2608:308:19;;608:1603:21;;;;2608:308:19;;608:1603:21;;;;2608:308:19;;608:1603:21;;;2588:16:19;608:1603:21;;;2575:12:19;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:16:19;608:1603:21;;;;;;;;;;;2588:16:19;162:6:4;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:219:19;;608:1603:21;;2932:219:19;608:1603:21;;;-1:-1:-1;;;608:1603:21;;;;;;;;;-1:-1:-1;;;608:1603:21;;;;;;;;2462:103:19;608:1603:21;;-1:-1:-1;;;2539:15:19;;608:1603:21;;2539:15:19;2467:49;;;;;;;;;;608:1603:21;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;;;;;;2467:49:19;;608:1603:21;;;;;;;;;;;;2467:49:19;;;608:1603:21;;;;;-1:-1:-1;;;;608:1603:21;;;;;;;;2467:49:19;;;;;;608:1603:21;;;;;;;;;2370:82:19;608:1603:21;;-1:-1:-1;;;2418:23:19;;608:1603:21;;2418:23:19;2195:165;608:1603:21;;-1:-1:-1;;;2321:28:19;;608:1603:21;;2321:28:19;2199:99;2276:22;2295:3;2276:22;;2199:99;;:73;608:1603:21;;;;;2235:37:19;2199:73;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;1623:43:12;608:1603:21;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;-1:-1:-1;;;;;608:1603:21;;:::i;:::-;;;;1040:49:6;608:1603:21;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:11:14;;;;;2002:65;;2082:9;;2093:10;;;;;;608:1603:21;;2283:45:14;;608:1603:21;;;2136:10:14;;;;2283:45;;:::i;:::-;;;;608:1603:21;;2082:9:14;2136:10;608:1603:21;;2121:14:14;608:1603:21;;;;;;;;2148:14:14;;;;;;:::i;:::-;608:1603:21;;;;1028:33:14;608:1603:21;;;162:6:4;608:1603:21;2082:9:14;;2002:65;608:1603:21;;-1:-1:-1;;;2040:16:14;;;608:1603:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;-1:-1:-1;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:25:224;2427:44;2423:105;;-1:-1:-1;;;;;608:1603:21;;2542:10:224;:28;2538:87;;2542:10;608:1603:21;2542:10:224;2732:20;2542:10;;608:1603:21;;;;;;;;;;;;;;;;2542:10:224;608:1603:21;;2732:20:224;608:1603:21;;2538:87:224;-1:-1:-1;608:1603:21;;-1:-1:-1;;;2593:21:224;;;2423:105;-1:-1:-1;608:1603:21;;-1:-1:-1;;;2494:23:224;;;608:1603:21;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;1527:37:12;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:35:12;608:1603:21;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;608:1603:21;;;;;;;;;;;;;;3647:108:224;;-1:-1:-1;;;;;608:1603:21;-1:-1:-1;;;608:1603:21;;;3828:31:224;;;;608:1603:21;;3647:108:224;608:1603:21;-1:-1:-1;;;3717:27:224;;608:1603:21;-1:-1:-1;3717:27:224;608:1603:21;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;:::i;:::-;;;;528:49:10;608:1603:21;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;2620:35:6;608:1603:21;;;;;:::i;:::-;926:61:224;;:::i;:::-;608:1603:21;;-1:-1:-1;;;;608:1603:21;;;;;;;;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;2620:35:6;608:1603:21;;;;;;;;;;;;;;;;787:34:6;608:1603:21;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;760:48;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;:::i;:::-;926:61:224;;:::i;:::-;608:1603:21;;;2776:26:12;2797:5;2776:26;;2772:85;;-1:-1:-1;2867:36:12;608:1603:21;;-1:-1:-1;;;;608:1603:21;;;;;;-1:-1:-1;;;608:1603:21;;;;;;;;;;;2919:38:12;;608:1603:21;;2919:38:12;608:1603:21;;2772:85:12;608:1603:21;;-1:-1:-1;;;2825:21:12;;;608:1603:21;;;;;;;;;;;;;;;;;1028:33:14;608:1603:21;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;608:1603:21;;;;;;;;;;;;;2010:29:224;1991:48;1987:113;;608:1603:21;;;-1:-1:-1;;;;;;608:1603:21;;;-1:-1:-1;;;;608:1603:21;;;;;;;2170:20:224;;608:1603:21;;2170:20:224;608:1603:21;;1987:113:224;-1:-1:-1;608:1603:21;;-1:-1:-1;;;2062:27:224;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;608:1603:21;;;;;;;;;;;;;;;1526:44:224;;1522:111;;1647:45;608:1603:21;1647:45:224;1643:97;;608:1603:21;-1:-1:-1;608:1603:21;;-1:-1:-1;;;;608:1603:21;;;1788:25:224;;;;608:1603:21;;1643:97:224;-1:-1:-1;;;;;;608:1603:21;;;1643:97:224;;;1522:111;608:1603:21;-1:-1:-1;;;1593:29:224;;608:1603:21;;1593:29:224;608:1603:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:1603:21;;;;;;:::i;:::-;926:61:224;;:::i;:::-;-1:-1:-1;;;;;608:1603:21;;7973:37:12;;7969:119;;-1:-1:-1;8098:46:12;608:1603:21;;-1:-1:-1;;;;;;608:1603:21;;;;;;;;;8159:48:12;;608:1603:21;;8159:48:12;608:1603:21;;7969:119:12;608:1603:21;;-1:-1:-1;;;8033:44:12;;;608:1603:21;;;;;;;;;;;;;;1140:42:10;608:1603:21;;;:::i;:::-;;;:::i;:::-;926:61:224;;;:::i;:::-;-1:-1:-1;;;;;608:1603:21;;;;1086:17:10;608:1603:21;;;;;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;;;;;;;;;1140:42:10;608:1603:21;;;;;;;;;;;;:::i;:::-;2686:11:14;;;;;2682:65;;2762:9;;;2773:10;;;;;;608:1603:21;2937:47:14;;608:1603:21;;;2817:10:14;;;;2937:47;;:::i;2762:9::-;2817:10;608:1603:21;;;2801:15:14;608:1603:21;;;;;2829:15:14;;;;;;:::i;:::-;608:1603:21;;;;;;;;;-1:-1:-1;;608:1603:21;2848:4:14;608:1603:21;;;;;;;2762:9:14;;2682:65;-1:-1:-1;;;2720:16:14;;;608:1603:21;;;-1:-1:-1;;608:1603:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;608:1603:21;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;608:1603:21;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3872:94:224;3935:5;608:1603:21;-1:-1:-1;;;;;608:1603:21;3921:10:224;:19;3917:42;;3872:94::o;3917:42::-;608:1603:21;;-1:-1:-1;;;3949:10:224;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "6012": [
        {
          "start": 3573,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": "463357ec",
    "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": "91be1360",
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOrderNonces(uint256[])": "79ed31d4",
    "cancelOwnershipTransfer()": "23452b9c",
    "cancelSubsetNonces(uint256[])": "134849a6",
    "confirmOwnershipRenouncement()": "3e567539",
    "confirmOwnershipTransfer()": "7200b829",
    "creatorFeeManager()": "838b8f5c",
    "incrementBidAskNonces(bool,bool)": "d5b010f5",
    "initiateOwnershipRenouncement()": "5b6ac011",
    "initiateOwnershipTransfer(address)": "c0b6f561",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "maxCreatorFeeBp()": "6e90c014",
    "owner()": "8da5cb5b",
    "ownershipStatus()": "2bb5a9e6",
    "potentialOwner()": "7762df25",
    "protocolFeeRecipient()": "64df049e",
    "strategyInfo(uint256)": "bb91c339",
    "transferManager()": "46ea2552",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCreatorFeeManager(address)": "b647a404",
    "updateCurrencyStatus(address,bool)": "1d3c4268",
    "updateMaxCreatorFeeBp(uint16)": "46b625bc",
    "updateProtocolFeeRecipient(address)": "1df47f80",
    "updateStrategy(uint256,bool,uint16,uint16)": "d5a06adf",
    "userBidAskNonces(address)": "a39bf29f",
    "userOrderNonce(address,uint256)": "20cd05c7",
    "userSubsetNonce(address,uint256)": "ea179b76"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CreatorFeeBpTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthsInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewProtocolFeeRecipientCannotBeNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingTransferInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorForStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotV2Strategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutsideOfTimeRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncementNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasNoSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"StrategyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPotentialOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"InitiateOwnershipRenouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"InitiateOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"name\":\"NewBidAskNonces\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creatorFeeManager\",\"type\":\"address\"}],\"name\":\"NewCreatorFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCreatorFeeBp\",\"type\":\"uint256\"}],\"name\":\"NewMaxCreatorFeeBp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"OrderNoncesCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"SubsetNoncesCancelled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAGIC_VALUE_ORDER_NONCE_EXECUTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelOrderNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subsetNonces\",\"type\":\"uint256[]\"}],\"name\":\"cancelSubsetNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFeeManager\",\"outputs\":[{\"internalType\":\"contract ICreatorFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"bid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ask\",\"type\":\"bool\"}],\"name\":\"incrementBidAskNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCreatorFeeBp\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipStatus\",\"outputs\":[{\"internalType\":\"enum IOwnableTwoSteps.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"standardProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minTotalFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxProtocolFeeBp\",\"type\":\"uint16\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isMakerBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferManager\",\"outputs\":[{\"internalType\":\"contract TransferManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCreatorFeeManager\",\"type\":\"address\"}],\"name\":\"updateCreatorFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxCreatorFeeBp\",\"type\":\"uint16\"}],\"name\":\"updateMaxCreatorFeeBp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"newStandardProtocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMinTotalFee\",\"type\":\"uint16\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBidAskNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSubsetNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"errors\":{\"NotV2Strategy()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyHasNoSelector()\":[{\"details\":\"It can only be returned for owner operations.\"}],\"StrategyNotAvailable(uint256)\":[{\"details\":\"It is returned if there is no implementation address and the strategyId is strictly greater than 0.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"details\":\"It can only be returned for owner operations.\"}]},\"kind\":\"dev\",\"methods\":{\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"details\":\"Strategies have an id that is incremental.      Only callable by owner.\",\"params\":{\"implementation\":\"Implementation address\",\"isMakerBid\":\"Whether the function selector is for maker bid\",\"maxProtocolFeeBp\":\"Maximum protocol fee (in basis point)\",\"minTotalFeeBp\":\"Minimum total fee (in basis point)\",\"selector\":\"Function selector for the strategy\",\"standardProtocolFeeBp\":\"Standard protocol fee (in basis point)\"}},\"cancelOrderNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.\",\"params\":{\"orderNonces\":\"Array of order nonces\"}},\"cancelOwnershipTransfer()\":{\"details\":\"This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership.\"},\"cancelSubsetNonces(uint256[])\":{\"details\":\"It does not check the status of the nonces to save gas.\",\"params\":{\"subsetNonces\":\"Array of subset nonces\"}},\"confirmOwnershipTransfer()\":{\"details\":\"This function can only be called by the current potential owner.\"},\"constructor\":{\"params\":{\"_owner\":\"Owner address\",\"_protocolFeeRecipient\":\"Protocol fee recipient address\",\"_transferManager\":\"Address of the transfer manager for ERC721/ERC1155\"}},\"incrementBidAskNonces(bool,bool)\":{\"details\":\"The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.\",\"params\":{\"ask\":\"Whether to increment the user ask nonce\",\"bid\":\"Whether to increment the user bid nonce\"}},\"initiateOwnershipTransfer(address)\":{\"params\":{\"newPotentialOwner\":\"New potential owner address\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCreatorFeeManager(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newCreatorFeeManager\":\"Address of the creator fee manager\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}},\"updateMaxCreatorFeeBp(uint16)\":{\"details\":\"The maximum value that can be set is 25%.      Only callable by owner.\",\"params\":{\"newMaxCreatorFeeBp\":\"New maximum creator fee (in basis point)\"}},\"updateProtocolFeeRecipient(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newProtocolFeeRecipient\":\"New protocol fee recipient address\"}},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the strategy must be active\",\"newMinTotalFee\":\"New minimum total fee (in basis point)\",\"newStandardProtocolFee\":\"New standard protocol fee (in basis point)\",\"strategyId\":\"Strategy id\"}}},\"title\":\"TransferSelectorNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"CreatorFeeBpTooHigh()\":[{\"notice\":\"It is returned if the creator fee (in basis point) is too high.\"}],\"LengthsInvalid()\":[{\"notice\":\"It is returned if there is either a mismatch or an error in the length of the array(s).\"}],\"NewProtocolFeeRecipientCannotBeNullAddress()\":[{\"notice\":\"It is returned if the new protocol fee recipient is set to address(0).\"}],\"NoOngoingTransferInProgress()\":[{\"notice\":\"This is returned when there is no transfer of ownership in progress.\"}],\"NoSelectorForStrategy()\":[{\"notice\":\"It is returned if there is no selector for maker ask/bid for a given strategyId,         depending on the quote type.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotOwner()\":[{\"notice\":\"This is returned when the caller is not the owner.\"}],\"NotV2Strategy()\":[{\"notice\":\"If the strategy has not set properly its implementation contract.\"}],\"OutsideOfTimeRange()\":[{\"notice\":\"It is returned if the current block timestamp is not between start and end times in the maker order.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}],\"RenouncementNotInProgress()\":[{\"notice\":\"This is returned when there is no renouncement in progress but         the owner tries to validate the ownership renouncement.\"}],\"StrategyHasNoSelector()\":[{\"notice\":\"It is returned if the strategy has no selector.\"}],\"StrategyNotAvailable(uint256)\":[{\"notice\":\"It is returned if the strategy id has no implementation.\"}],\"StrategyNotUsed()\":[{\"notice\":\"It is returned if the strategyId is invalid.\"}],\"StrategyProtocolFeeTooHigh()\":[{\"notice\":\"It is returned if the strategy's protocol fee is too high.\"}],\"TransferAlreadyInProgress()\":[{\"notice\":\"This is returned when the transfer is already in progress but the owner tries         initiate a new ownership transfer.\"}],\"TransferNotInProgress()\":[{\"notice\":\"This is returned when there is no ownership transfer in progress but the         ownership change tries to be approved.\"}],\"WrongPotentialOwner()\":[{\"notice\":\"This is returned when the ownership transfer is attempted to be validated by the         a caller that is not the potential owner.\"}]},\"events\":{\"CancelOwnershipTransfer()\":{\"notice\":\"This is emitted if the ownership transfer is cancelled.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"InitiateOwnershipRenouncement()\":{\"notice\":\"This is emitted if the ownership renouncement is initiated.\"},\"InitiateOwnershipTransfer(address,address)\":{\"notice\":\"This is emitted if the ownership transfer is initiated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewBidAskNonces(address,uint256,uint256)\":{\"notice\":\"It is emitted when there is an update of the global bid/ask nonces for a user.\"},\"NewCreatorFeeManager(address)\":{\"notice\":\"It is issued when there is a new creator fee manager.\"},\"NewMaxCreatorFeeBp(uint256)\":{\"notice\":\"It is issued when there is a new maximum creator fee (in basis point).\"},\"NewOwner(address)\":{\"notice\":\"This is emitted when there is a new owner.\"},\"NewProtocolFeeRecipient(address)\":{\"notice\":\"It is issued when there is a new protocol fee recipient address.\"},\"NewStrategy(uint256,uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"It is emitted when a new strategy is added.\"},\"OrderNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when order nonces are cancelled for a user.\"},\"StrategyUpdated(uint256,bool,uint16,uint16)\":{\"notice\":\"It is emitted when an existing strategy is updated.\"},\"SubsetNoncesCancelled(address,uint256[])\":{\"notice\":\"It is emitted when subset nonces are cancelled for a user.\"}},\"kind\":\"user\",\"methods\":{\"MAGIC_VALUE_ORDER_NONCE_EXECUTED()\":{\"notice\":\"Magic value nonce returned if executed (or cancelled).\"},\"addStrategy(uint16,uint16,uint16,bytes4,bool,address)\":{\"notice\":\"This function allows the owner to add a new execution strategy to the protocol.\"},\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOrderNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of order nonces.\"},\"cancelOwnershipTransfer()\":{\"notice\":\"This function is used to cancel the ownership transfer.\"},\"cancelSubsetNonces(uint256[])\":{\"notice\":\"This function allows a user to cancel an array of subset nonces.\"},\"confirmOwnershipRenouncement()\":{\"notice\":\"This function is used to confirm the ownership renouncement.\"},\"confirmOwnershipTransfer()\":{\"notice\":\"This function is used to confirm the ownership transfer.\"},\"constructor\":{\"notice\":\"Constructor\"},\"creatorFeeManager()\":{\"notice\":\"Creator fee manager.\"},\"incrementBidAskNonces(bool,bool)\":{\"notice\":\"This function increments a user's bid/ask nonces.\"},\"initiateOwnershipRenouncement()\":{\"notice\":\"This function is used to initiate the ownership renouncement.\"},\"initiateOwnershipTransfer(address)\":{\"notice\":\"This function is used to initiate the transfer of ownership to a new owner.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"maxCreatorFeeBp()\":{\"notice\":\"Maximum creator fee (in basis point).\"},\"owner()\":{\"notice\":\"Address of the current owner.\"},\"ownershipStatus()\":{\"notice\":\"Ownership status.\"},\"potentialOwner()\":{\"notice\":\"Address of the potential owner.\"},\"protocolFeeRecipient()\":{\"notice\":\"Protocol fee recipient.\"},\"strategyInfo(uint256)\":{\"notice\":\"This returns the strategy information for a strategy id.\"},\"transferManager()\":{\"notice\":\"Transfer manager for ERC721 and ERC1155.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCreatorFeeManager(address)\":{\"notice\":\"This function allows the owner to update the creator fee manager address.\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"},\"updateMaxCreatorFeeBp(uint16)\":{\"notice\":\"This function allows the owner to update the maximum creator fee (in basis point).\"},\"updateProtocolFeeRecipient(address)\":{\"notice\":\"This function allows the owner to update the protocol fee recipient.\"},\"updateStrategy(uint256,bool,uint16,uint16)\":{\"notice\":\"This function allows the owner to update parameters for an existing execution strategy.\"},\"userBidAskNonces(address)\":{\"notice\":\"This tracks the bid and ask nonces for a user address.\"},\"userOrderNonce(address,uint256)\":{\"notice\":\"This checks whether the order nonce for a user was executed or cancelled.\"},\"userSubsetNonce(address,uint256)\":{\"notice\":\"This checks whether the subset nonce for a user was cancelled.\"}},\"notice\":\"This contract handles the logic for transferring non-fungible items.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/TransferSelectorNFT.sol\":\"TransferSelectorNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/AssemblyConstants.sol\":{\"keccak256\":\"0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5\",\"dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke\"]},\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808\",\"dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5\",\"dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y\"]},\"contracts/core/ExecutionManager.sol\":{\"keccak256\":\"0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7\",\"dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn\"]},\"contracts/core/InheritedStrategy.sol\":{\"keccak256\":\"0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860\",\"dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375\",\"dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa\"]},\"contracts/core/StrategyManager.sol\":{\"keccak256\":\"0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8\",\"dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV\"]},\"contracts/core/TransferManager.sol\":{\"keccak256\":\"0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f\",\"dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r\"]},\"contracts/core/TransferSelectorNFT.sol\":{\"keccak256\":\"0xea2cdc3be40de8ed5f5f683c99da1c45ad405716212f1dcc10baa9eb74d4b536\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ccdf519cded46a4d94df55918fd94218b2acb7a00dd19974b1cb1e3f4cce94f\",\"dweb:/ipfs/QmTqaWCYznqoHCThcc3XKfjPeH7MnmmyyFBQsRaRajaiMk\"]},\"contracts/enums/CollectionType.sol\":{\"keccak256\":\"0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177\",\"dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk\"]},\"contracts/enums/QuoteType.sol\":{\"keccak256\":\"0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97\",\"dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM\"]},\"contracts/errors/SharedErrors.sol\":{\"keccak256\":\"0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9\",\"dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICreatorFeeManager.sol\":{\"keccak256\":\"0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e\",\"dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"contracts/interfaces/IExecutionManager.sol\":{\"keccak256\":\"0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab\",\"dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443\",\"dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS\"]},\"contracts/interfaces/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c\",\"dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db\",\"dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD\"]},\"contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817\",\"dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw\"]},\"contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a\",\"dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E\"]},\"contracts/libraries/OrderStructs.sol\":{\"keccak256\":\"0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5\",\"dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":{\"keccak256\":\"0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda\",\"dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol\":{\"keccak256\":\"0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e\",\"dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77\"]},\"node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol\":{\"keccak256\":\"0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc\",\"dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol\":{\"keccak256\":\"0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04\",\"dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol\":{\"keccak256\":\"0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26\",\"dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol\":{\"keccak256\":\"0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc\",\"dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP\"]},\"node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol\":{\"keccak256\":\"0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114\",\"dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_transferManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreatorFeeBpTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LengthsInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewProtocolFeeRecipientCannotBeNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOngoingTransferInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorForStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotV2Strategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutsideOfTimeRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncementNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyHasNoSelector"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrategyNotAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyProtocolFeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferAlreadyInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongPotentialOwner"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CancelOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "InitiateOwnershipRenouncement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "potentialOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitiateOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBidAskNonces",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creatorFeeManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewCreatorFeeManager",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxCreatorFeeBp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewMaxCreatorFeeBp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewProtocolFeeRecipient",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubsetNoncesCancelled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "orderNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrderNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "subsetNonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSubsetNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipRenouncement"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creatorFeeManager",
          "outputs": [
            {
              "internalType": "contract ICreatorFeeManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "bid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ask",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementBidAskNonces"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipRenouncement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPotentialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCreatorFeeBp",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipStatus",
          "outputs": [
            {
              "internalType": "enum IOwnableTwoSteps.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "potentialOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyInfo",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "standardProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minTotalFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxProtocolFeeBp",
              "type": "uint16"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "isMakerBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferManager",
          "outputs": [
            {
              "internalType": "contract TransferManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCreatorFeeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCreatorFeeManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newMaxCreatorFeeBp",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxCreatorFeeBp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newProtocolFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProtocolFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "newStandardProtocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "newMinTotalFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBidAskNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userOrderNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userSubsetNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "details": "Strategies have an id that is incremental.      Only callable by owner.",
            "params": {
              "implementation": "Implementation address",
              "isMakerBid": "Whether the function selector is for maker bid",
              "maxProtocolFeeBp": "Maximum protocol fee (in basis point)",
              "minTotalFeeBp": "Minimum total fee (in basis point)",
              "selector": "Function selector for the strategy",
              "standardProtocolFeeBp": "Standard protocol fee (in basis point)"
            }
          },
          "cancelOrderNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas      and to prevent revertion if one of the orders is filled in the same      block.",
            "params": {
              "orderNonces": "Array of order nonces"
            }
          },
          "cancelOwnershipTransfer()": {
            "details": "This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership."
          },
          "cancelSubsetNonces(uint256[])": {
            "details": "It does not check the status of the nonces to save gas.",
            "params": {
              "subsetNonces": "Array of subset nonces"
            }
          },
          "confirmOwnershipTransfer()": {
            "details": "This function can only be called by the current potential owner."
          },
          "constructor": {
            "params": {
              "_owner": "Owner address",
              "_protocolFeeRecipient": "Protocol fee recipient address",
              "_transferManager": "Address of the transfer manager for ERC721/ERC1155"
            }
          },
          "incrementBidAskNonces(bool,bool)": {
            "details": "The logic for computing the quasi-random number is inspired by Seaport v1.2.      The pseudo-randomness allows non-deterministic computation of the next ask/bid nonce.      A deterministic increment would make the cancel-all process non-effective in certain cases      (orders signed with a greater ask/bid nonce).      The same quasi-random number is used for incrementing both the bid and ask nonces if both values      are incremented in the same transaction.      If this function is used twice in the same block, it will return the same quasiRandomNumber      but this will not impact the overall business logic.",
            "params": {
              "ask": "Whether to increment the user ask nonce",
              "bid": "Whether to increment the user bid nonce"
            }
          },
          "initiateOwnershipTransfer(address)": {
            "params": {
              "newPotentialOwner": "New potential owner address"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCreatorFeeManager(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newCreatorFeeManager": "Address of the creator fee manager"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "details": "The maximum value that can be set is 25%.      Only callable by owner.",
            "params": {
              "newMaxCreatorFeeBp": "New maximum creator fee (in basis point)"
            }
          },
          "updateProtocolFeeRecipient(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newProtocolFeeRecipient": "New protocol fee recipient address"
            }
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the strategy must be active",
              "newMinTotalFee": "New minimum total fee (in basis point)",
              "newStandardProtocolFee": "New standard protocol fee (in basis point)",
              "strategyId": "Strategy id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAGIC_VALUE_ORDER_NONCE_EXECUTED()": {
            "notice": "Magic value nonce returned if executed (or cancelled)."
          },
          "addStrategy(uint16,uint16,uint16,bytes4,bool,address)": {
            "notice": "This function allows the owner to add a new execution strategy to the protocol."
          },
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOrderNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of order nonces."
          },
          "cancelOwnershipTransfer()": {
            "notice": "This function is used to cancel the ownership transfer."
          },
          "cancelSubsetNonces(uint256[])": {
            "notice": "This function allows a user to cancel an array of subset nonces."
          },
          "confirmOwnershipRenouncement()": {
            "notice": "This function is used to confirm the ownership renouncement."
          },
          "confirmOwnershipTransfer()": {
            "notice": "This function is used to confirm the ownership transfer."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "creatorFeeManager()": {
            "notice": "Creator fee manager."
          },
          "incrementBidAskNonces(bool,bool)": {
            "notice": "This function increments a user's bid/ask nonces."
          },
          "initiateOwnershipRenouncement()": {
            "notice": "This function is used to initiate the ownership renouncement."
          },
          "initiateOwnershipTransfer(address)": {
            "notice": "This function is used to initiate the transfer of ownership to a new owner."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "maxCreatorFeeBp()": {
            "notice": "Maximum creator fee (in basis point)."
          },
          "owner()": {
            "notice": "Address of the current owner."
          },
          "ownershipStatus()": {
            "notice": "Ownership status."
          },
          "potentialOwner()": {
            "notice": "Address of the potential owner."
          },
          "protocolFeeRecipient()": {
            "notice": "Protocol fee recipient."
          },
          "strategyInfo(uint256)": {
            "notice": "This returns the strategy information for a strategy id."
          },
          "transferManager()": {
            "notice": "Transfer manager for ERC721 and ERC1155."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCreatorFeeManager(address)": {
            "notice": "This function allows the owner to update the creator fee manager address."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          },
          "updateMaxCreatorFeeBp(uint16)": {
            "notice": "This function allows the owner to update the maximum creator fee (in basis point)."
          },
          "updateProtocolFeeRecipient(address)": {
            "notice": "This function allows the owner to update the protocol fee recipient."
          },
          "updateStrategy(uint256,bool,uint16,uint16)": {
            "notice": "This function allows the owner to update parameters for an existing execution strategy."
          },
          "userBidAskNonces(address)": {
            "notice": "This tracks the bid and ask nonces for a user address."
          },
          "userOrderNonce(address,uint256)": {
            "notice": "This checks whether the order nonce for a user was executed or cancelled."
          },
          "userSubsetNonce(address,uint256)": {
            "notice": "This checks whether the subset nonce for a user was cancelled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/TransferSelectorNFT.sol": "TransferSelectorNFT"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/AssemblyConstants.sol": {
        "keccak256": "0xb9b24dd6b2e8c6c2fd1811e179547ffe69720b74d9d6c5fb1e87234720a4fcc2",
        "urls": [
          "bzz-raw://66db89e2fced0a21edb4a20e8e8d3c61b4b58a9c3e5df44e50b3148b2ec536b5",
          "dweb:/ipfs/QmXt8A8sXGhgpHfr8uT2uCJxHhts6M2qoxWqZdSMb56Tke"
        ],
        "license": "MIT"
      },
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90",
        "urls": [
          "bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808",
          "dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56",
        "urls": [
          "bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5",
          "dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y"
        ],
        "license": "MIT"
      },
      "contracts/core/ExecutionManager.sol": {
        "keccak256": "0x33eaa3cee9c8ebd48a3e65518d1edd08f7fc9b150d6a409958395b06b3349608",
        "urls": [
          "bzz-raw://250f027995aa1da3cc21cdc6c4e383f8d6c5bd8a1f3ad5bc95afb75d5fffe9b7",
          "dweb:/ipfs/QmWHKfYcnjr2McAoF2VtCrkqr5u7cAv4CRddd3scD9QAVn"
        ],
        "license": "MIT"
      },
      "contracts/core/InheritedStrategy.sol": {
        "keccak256": "0xc513b55cbc841c5b6d45d558686303a75fda01fe9c8ebd7d2e9f5f1ac672bf38",
        "urls": [
          "bzz-raw://b757ea5f11cd46795005881fc6039a5bcc5ad21bf7de7607adb6bad3d9fe8860",
          "dweb:/ipfs/QmcqBc26HECTix4mn2pxQhcm34wrL7r2cZXHhoHi13jy3d"
        ],
        "license": "MIT"
      },
      "contracts/core/NonceManager.sol": {
        "keccak256": "0x02728214e6df57873a051b6bcc00e97e5e26c93e841a46d8f0e0294534ef7737",
        "urls": [
          "bzz-raw://2ea7a2ed3a1c405078a159533e865fc23047f8e45e9d99dd490ac81bef5d5375",
          "dweb:/ipfs/QmadPkCKEG3M5g4jwkvgiimgVSg3wnCCrxGqkchtTpUMLa"
        ],
        "license": "MIT"
      },
      "contracts/core/StrategyManager.sol": {
        "keccak256": "0xac4963e1e561a35783537a4b23b3cb1a958cef0ebff076c01761f8547b788c0a",
        "urls": [
          "bzz-raw://df287ea122e71f0d6ba87addeda32032fb29dfcf8ad99e2f3ffef065c53ac6a8",
          "dweb:/ipfs/QmXvYux7yVYzmmNkAo26JkRSJvtkBsJZezxGRq8uBp9QKV"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferManager.sol": {
        "keccak256": "0xd4e6937fd6a97d9a344e3a84bd89ce7c5a65fbe62118e2af77b3f414b3a0d6e1",
        "urls": [
          "bzz-raw://9cf62c181154e01d14315bb967daaf33e7bd69315a1d46e88d6da0f130120b1f",
          "dweb:/ipfs/QmdGSNByS1s7LXPCHwoX9S6YFYHbZC9hL1U3M8aQ1sam1r"
        ],
        "license": "MIT"
      },
      "contracts/core/TransferSelectorNFT.sol": {
        "keccak256": "0xea2cdc3be40de8ed5f5f683c99da1c45ad405716212f1dcc10baa9eb74d4b536",
        "urls": [
          "bzz-raw://8ccdf519cded46a4d94df55918fd94218b2acb7a00dd19974b1cb1e3f4cce94f",
          "dweb:/ipfs/QmTqaWCYznqoHCThcc3XKfjPeH7MnmmyyFBQsRaRajaiMk"
        ],
        "license": "MIT"
      },
      "contracts/enums/CollectionType.sol": {
        "keccak256": "0xdc9a7502580c54fb70abeb0dfc27a878215f4653b74c5de7dc8a6de6fbf8dc59",
        "urls": [
          "bzz-raw://9a4c82dc55765a9469650dd292d27f1d76fa6fddc634cc5185318d28b9ec8177",
          "dweb:/ipfs/QmZ5pDGGkefBsngsUwFbW1FzKePScLP5S9mJ4SUdiMDFxk"
        ],
        "license": "MIT"
      },
      "contracts/enums/QuoteType.sol": {
        "keccak256": "0x0a55fe42e50e702214b9b6fafbf03be231ef252e7a260bd2ee9a7620aecfba3e",
        "urls": [
          "bzz-raw://5696adf14e45040449170132b61c1892b6ecb24c5661b9b4f7bed86f5e0e6a97",
          "dweb:/ipfs/QmQKS8A5VuM9xrQrm2mdWjqr1nhJ3eztZGnSt8Ar2FzJrM"
        ],
        "license": "MIT"
      },
      "contracts/errors/SharedErrors.sol": {
        "keccak256": "0x63848dc4ae4d026bd4317b353e148c7530378256428c93b661b15be4f77553bf",
        "urls": [
          "bzz-raw://552a738846dd0288a51063c69414bd49a7a708088976b6f1254e57b43e53c2a9",
          "dweb:/ipfs/QmciDZZLUPXmW5tHhWDRPuVnZ7ebxX7UTdDKZqwuPu4vHX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICreatorFeeManager.sol": {
        "keccak256": "0xbb31f46b7d94bf4fc3a31af1b8966e33e22ca06dd1755dc6cd4e82adb3baa237",
        "urls": [
          "bzz-raw://64850e79c42c7ac6e86cfa45ef7afc2269c9eede82685136ad254426a8a50b2e",
          "dweb:/ipfs/QmTw1UjKvN6Q9sLKUJKP8NxFJ5TYo82KiV3aNhzQM5jUEp"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionManager.sol": {
        "keccak256": "0x7f26d3306ee63a7c441dc943bb06e78458d49e3ad5b7db740f0cd9e2f9ff71d4",
        "urls": [
          "bzz-raw://6ca852f6cb9f9a5753a6be4131a3e211d9996bd974b631981e466e3a2b8b1fab",
          "dweb:/ipfs/Qmah2DshXPR8Rdw1Zmmmwgs8AymcmT3b1pGcJXv2m7SEps"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xce63daea955d306154bdb08009e00c8c2175d2198413f7620702acfe9b9ac14c",
        "urls": [
          "bzz-raw://f6c20869e1f79fa53664ed0d224c549990545effec9ee80d0723a490e6b50443",
          "dweb:/ipfs/QmPBpLmawgDKXZ53efwuoJdHRsKEbagU8dztXpVBQGTVoS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRoyaltyFeeRegistry.sol": {
        "keccak256": "0xc83eb142cf60be3e9da164f241d527b2696802f336819b1389b1b5730581b9e6",
        "urls": [
          "bzz-raw://b62d8a1132e2c3a2f1deb784bbbe34ae0a26cce66f6444d0c0932b6fe539783c",
          "dweb:/ipfs/QmV17EvqN4Pq1fVWB6X9rh95DeZjFi9nw94YqvQAtEspRG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xe9c112a5e5b28b176b9c1e918ea5309fe108542d49a368d084e790130f94a80f",
        "urls": [
          "bzz-raw://3733a3d48e81ea0d8a821e93799bf15413ab8023a6076e33263a866d6b7583db",
          "dweb:/ipfs/QmbysZDztQq3nr4ou3HSQAGc11WqLnobZu7Rpkco7r8LAD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xa859919c4273af9456e215061f2cc746174102cfc58e0e957826eecb73b4d0c9",
        "urls": [
          "bzz-raw://2cd5b381c00305ac10936610bf2227b0d72437042c789e5f2a78cc92b04fb817",
          "dweb:/ipfs/QmbisQD4eHcS2hYx7HhSfiqTkLkL4i6bE9ppejphLkH1Kw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITransferManager.sol": {
        "keccak256": "0xefef40ea652dcd2aadbe86dfd4839db91a1e6c3eb9d31b13757ae1e377d00f50",
        "urls": [
          "bzz-raw://68c5d6f99741b824254b0279ca2ec3413dcf16e755e6725e6a21df05b969968a",
          "dweb:/ipfs/QmQjtPudKkWe1q2Wr6Ujyna8cyxynq9ZDp3gUq15XvBt4E"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OrderStructs.sol": {
        "keccak256": "0xd2538fadb8ac65021cab0951f7a656bc501ac4bc0bc0e27f40130d61542456f3",
        "urls": [
          "bzz-raw://dc5cc1519a212074f3139081b697dfe2f1b8d7476e8096f80b0ffba16fa4e5f5",
          "dweb:/ipfs/QmQtGWJZRq9Gnf6vCBRkdvsHwjB8XzFxe73Cm4H5Aqwnzz"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
        "keccak256": "0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc",
        "urls": [
          "bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda",
          "dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/GenericErrors.sol": {
        "keccak256": "0x2d00fcb3932e29183219f7ebe1f3f8838a3557ecb8342ce3eefd9829621f94a2",
        "urls": [
          "bzz-raw://ea132ecfb19f8fb55e1ae19bd58397e83d1e31837ac0f0609ef5a589e1c2ec1e",
          "dweb:/ipfs/QmPdSU3KGau8pij1wG95ZaZMpvwwAKRBeg13S2P9mBmG77"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/errors/LowLevelErrors.sol": {
        "keccak256": "0xe0271fbb819d21636f2df9764b2b75cde834760cf70c5a6bf93ff20c6d210262",
        "urls": [
          "bzz-raw://c3dc150f838458352394eba77c4885c00605114d7b60d47adefa8e7a813fd1cc",
          "dweb:/ipfs/QmdMhtVfufjjNzc6UUQymv69TDKVvtD3KyPSCyqSTxKWr7"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
        "keccak256": "0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46",
        "urls": [
          "bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7",
          "dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC1155.sol": {
        "keccak256": "0x3731007cd9075c0cf80ff8092421ac29c9c0014bb4a2a2f6a6e8fcbec1c243d9",
        "urls": [
          "bzz-raw://b048a1087e2eb9cd968227131dc3697ca2fe1d06d88649fd3678dfbf8f2b6d04",
          "dweb:/ipfs/QmPDRpbb38nAvn9Ptaz8fn7rrzxAoCbPZo5M59Kgiq6q8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IERC721.sol": {
        "keccak256": "0x806cc2571b8858cfd077a235304798306763d547223f838a300e12037bec7c73",
        "urls": [
          "bzz-raw://3d03bab59e13668c2c091e966de9ba179970f6ec93d2c5aa47f16f85554cdc26",
          "dweb:/ipfs/QmeVrWKAe1DQuqaXuFpj7zwCr8z2TZtxfncdYPenCCasfn"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC1155Transfer.sol": {
        "keccak256": "0x7dd9ad1e4342e3c61a044a66774c3db0e3ef02d9a0717419efbcb9b15c4eab8c",
        "urls": [
          "bzz-raw://dac542f6af582bdc5a5ce541936db129642b75d7087850c8e63d12748feee7bc",
          "dweb:/ipfs/QmY17rX9T3pqEWgG8n97zGBrqZmh52SscBmArCam6giGrP"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelERC721Transfer.sol": {
        "keccak256": "0xeded2dfc20ac8e043714d5923847697e753869ec9dd68503650147e68f979713",
        "urls": [
          "bzz-raw://2cbfb62cd68ac0178faeeb23b97e1e9149f98ff6612e3e7266e6468304c12114",
          "dweb:/ipfs/QmamQPWhCyaagY6jvtd8JDnjD2R7UMFGQHSy5CbXDGs2fM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/TransferSelectorNFT.sol",
    "id": 6087,
    "exportedSymbols": {
      "CollectionType": [
        6091
      ],
      "ExecutionManager": [
        3051
      ],
      "OrderStructs": [
        13693
      ],
      "PackableReentrancyGuard": [
        75819
      ],
      "TransferManager": [
        5991
      ],
      "TransferSelectorNFT": [
        6086
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2179:21",
    "nodes": [
      {
        "id": 5993,
        "nodeType": "PragmaDirective",
        "src": "32:24:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 5995,
        "nodeType": "ImportDirective",
        "src": "81:104:21",
        "nodes": [],
        "absolutePath": "node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol",
        "file": "@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6087,
        "sourceUnit": 75820,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5994,
              "name": "PackableReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75819,
              "src": "89:23:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5997,
        "nodeType": "ImportDirective",
        "src": "186:56:21",
        "nodes": [],
        "absolutePath": "contracts/core/ExecutionManager.sol",
        "file": "./ExecutionManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6087,
        "sourceUnit": 3052,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5996,
              "name": "ExecutionManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3051,
              "src": "194:16:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5999,
        "nodeType": "ImportDirective",
        "src": "243:54:21",
        "nodes": [],
        "absolutePath": "contracts/core/TransferManager.sol",
        "file": "./TransferManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6087,
        "sourceUnit": 5992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5998,
              "name": "TransferManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5991,
              "src": "251:15:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6001,
        "nodeType": "ImportDirective",
        "src": "312:59:21",
        "nodes": [],
        "absolutePath": "contracts/libraries/OrderStructs.sol",
        "file": "../libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6087,
        "sourceUnit": 13694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6000,
              "name": "OrderStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13693,
              "src": "320:12:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6003,
        "nodeType": "ImportDirective",
        "src": "382:59:21",
        "nodes": [],
        "absolutePath": "contracts/enums/CollectionType.sol",
        "file": "../enums/CollectionType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6087,
        "sourceUnit": 6092,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6002,
              "name": "CollectionType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6091,
              "src": "390:14:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6086,
        "nodeType": "ContractDefinition",
        "src": "608:1603:21",
        "nodes": [
          {
            "id": 6012,
            "nodeType": "VariableDeclaration",
            "src": "760:48:21",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6009,
              "nodeType": "StructuredDocumentation",
              "src": "688:67:21",
              "text": " @notice Transfer manager for ERC721 and ERC1155."
            },
            "functionSelector": "46ea2552",
            "mutability": "immutable",
            "name": "transferManager",
            "nameLocation": "793:15:21",
            "scope": 6086,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TransferManager_$5991",
              "typeString": "contract TransferManager"
            },
            "typeName": {
              "id": 6011,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6010,
                "name": "TransferManager",
                "nameLocations": [
                  "760:15:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5991,
                "src": "760:15:21"
              },
              "referencedDeclaration": 5991,
              "src": "760:15:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TransferManager_$5991",
                "typeString": "contract TransferManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6033,
            "nodeType": "FunctionDefinition",
            "src": "1042:231:21",
            "nodes": [],
            "body": {
              "id": 6032,
              "nodeType": "Block",
              "src": "1205:68:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6026,
                      "name": "transferManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6012,
                      "src": "1215:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TransferManager_$5991",
                        "typeString": "contract TransferManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6028,
                          "name": "_transferManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6019,
                          "src": "1249:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6027,
                        "name": "TransferManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5991,
                        "src": "1233:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferManager_$5991_$",
                          "typeString": "type(contract TransferManager)"
                        }
                      },
                      "id": 6029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1233:33:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TransferManager_$5991",
                        "typeString": "contract TransferManager"
                      }
                    },
                    "src": "1215:51:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TransferManager_$5991",
                      "typeString": "contract TransferManager"
                    }
                  },
                  "id": 6031,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:51:21"
                }
              ]
            },
            "documentation": {
              "id": 6013,
              "nodeType": "StructuredDocumentation",
              "src": "815:222:21",
              "text": " @notice Constructor\n @param _owner Owner address\n @param _protocolFeeRecipient Protocol fee recipient address\n @param _transferManager Address of the transfer manager for ERC721/ERC1155"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6022,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6015,
                    "src": "1174:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 6023,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6017,
                    "src": "1182:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6024,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6021,
                  "name": "ExecutionManager",
                  "nameLocations": [
                    "1157:16:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3051,
                  "src": "1157:16:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1157:47:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6015,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1071:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "1063:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6017,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "1095:21:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "1087:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6019,
                  "mutability": "mutable",
                  "name": "_transferManager",
                  "nameLocation": "1134:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "1126:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1053:103:21"
            },
            "returnParameters": {
              "id": 6025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:21"
            },
            "scope": 6086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6085,
            "nodeType": "FunctionDefinition",
            "src": "1654:555:21",
            "nodes": [],
            "body": {
              "id": 6084,
              "nodeType": "Block",
              "src": "1877:332:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CollectionType_$6091",
                      "typeString": "enum CollectionType"
                    },
                    "id": 6055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6052,
                      "name": "collectionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6039,
                      "src": "1891:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CollectionType_$6091",
                        "typeString": "enum CollectionType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 6053,
                        "name": "CollectionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6091,
                        "src": "1909:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CollectionType_$6091_$",
                          "typeString": "type(enum CollectionType)"
                        }
                      },
                      "id": 6054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1924:6:21",
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6089,
                      "src": "1909:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CollectionType_$6091",
                        "typeString": "enum CollectionType"
                      }
                    },
                    "src": "1891:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CollectionType_$6091",
                        "typeString": "enum CollectionType"
                      },
                      "id": 6070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6067,
                        "name": "collectionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6039,
                        "src": "2051:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6068,
                          "name": "CollectionType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6091,
                          "src": "2069:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CollectionType_$6091_$",
                            "typeString": "type(enum CollectionType)"
                          }
                        },
                        "id": 6069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2084:7:21",
                        "memberName": "ERC1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6090,
                        "src": "2069:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CollectionType_$6091",
                          "typeString": "enum CollectionType"
                        }
                      },
                      "src": "2051:40:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6082,
                    "nodeType": "IfStatement",
                    "src": "2047:156:21",
                    "trueBody": {
                      "id": 6081,
                      "nodeType": "Block",
                      "src": "2093:110:21",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 6074,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6036,
                                "src": "2144:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 6075,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6041,
                                "src": "2156:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 6076,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6043,
                                "src": "2164:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 6077,
                                "name": "itemIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6046,
                                "src": "2175:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 6078,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6049,
                                "src": "2184:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 6071,
                                "name": "transferManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6012,
                                "src": "2107:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TransferManager_$5991",
                                  "typeString": "contract TransferManager"
                                }
                              },
                              "id": 6073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2123:20:21",
                              "memberName": "transferItemsERC1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5598,
                              "src": "2107:36:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,address,uint256[] memory,uint256[] memory) external"
                              }
                            },
                            "id": 6079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2107:85:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 6080,
                          "nodeType": "ExpressionStatement",
                          "src": "2107:85:21"
                        }
                      ]
                    }
                  },
                  "id": 6083,
                  "nodeType": "IfStatement",
                  "src": "1887:316:21",
                  "trueBody": {
                    "id": 6066,
                    "nodeType": "Block",
                    "src": "1932:109:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6059,
                              "name": "collection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6036,
                              "src": "1982:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6060,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6041,
                              "src": "1994:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6061,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6043,
                              "src": "2002:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6062,
                              "name": "itemIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6046,
                              "src": "2013:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 6063,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6049,
                              "src": "2022:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "id": 6056,
                              "name": "transferManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6012,
                              "src": "1946:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TransferManager_$5991",
                                "typeString": "contract TransferManager"
                              }
                            },
                            "id": 6058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1962:19:21",
                            "memberName": "transferItemsERC721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5499,
                            "src": "1946:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 6064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1946:84:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6065,
                        "nodeType": "ExpressionStatement",
                        "src": "1946:84:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6034,
              "nodeType": "StructuredDocumentation",
              "src": "1279:370:21",
              "text": " @notice This function is internal and used to transfer non-fungible tokens.\n @param collection Collection address\n @param collectionType Collection type (e.g. 0 = ERC721, 1 = ERC1155)\n @param sender Sender address\n @param recipient Recipient address\n @param itemIds Array of itemIds\n @param amounts Array of amounts"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferNFT",
            "nameLocation": "1663:12:21",
            "parameters": {
              "id": 6050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6036,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "1693:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1685:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6039,
                  "mutability": "mutable",
                  "name": "collectionType",
                  "nameLocation": "1728:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1713:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CollectionType_$6091",
                    "typeString": "enum CollectionType"
                  },
                  "typeName": {
                    "id": 6038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6037,
                      "name": "CollectionType",
                      "nameLocations": [
                        "1713:14:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6091,
                      "src": "1713:14:21"
                    },
                    "referencedDeclaration": 6091,
                    "src": "1713:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CollectionType_$6091",
                      "typeString": "enum CollectionType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6041,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1760:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1752:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6043,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1784:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1776:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6046,
                  "mutability": "mutable",
                  "name": "itemIds",
                  "nameLocation": "1820:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1803:24:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6044,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1803:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6045,
                    "nodeType": "ArrayTypeName",
                    "src": "1803:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6049,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1854:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6085,
                  "src": "1837:24:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6047,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1837:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6048,
                    "nodeType": "ArrayTypeName",
                    "src": "1837:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:192:21"
            },
            "returnParameters": {
              "id": 6051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:21"
            },
            "scope": 6086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6005,
              "name": "ExecutionManager",
              "nameLocations": [
                "640:16:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3051,
              "src": "640:16:21"
            },
            "id": 6006,
            "nodeType": "InheritanceSpecifier",
            "src": "640:16:21"
          },
          {
            "baseName": {
              "id": 6007,
              "name": "PackableReentrancyGuard",
              "nameLocations": [
                "658:23:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75819,
              "src": "658:23:21"
            },
            "id": 6008,
            "nodeType": "InheritanceSpecifier",
            "src": "658:23:21"
          }
        ],
        "canonicalName": "TransferSelectorNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6004,
          "nodeType": "StructuredDocumentation",
          "src": "443:164:21",
          "text": " @title TransferSelectorNFT\n @notice This contract handles the logic for transferring non-fungible items.\n @author LooksRare protocol team (👀,💎)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6086,
          75819,
          76257,
          3051,
          11288,
          5384,
          1925,
          1425,
          75780,
          76250,
          11149,
          11193,
          12599,
          3288,
          11545,
          3076
        ],
        "name": "TransferSelectorNFT",
        "nameLocation": "617:19:21",
        "scope": 6087,
        "usedErrors": [
          6170,
          11145,
          11148,
          11273,
          11276,
          11279,
          11282,
          11287,
          12589,
          12592,
          12595,
          12598,
          76216,
          76219,
          76222,
          76225,
          76228,
          76231,
          76256
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 21
}