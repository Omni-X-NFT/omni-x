{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_looksRareToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rewardRound",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawnOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rewardRound",
          "type": "uint256"
        }
      ],
      "name": "UpdateTradingRewards",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BUFFER_ADMIN_WITHDRAW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountClaimedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "canClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRewardRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasUserClaimedForRewardRound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPausedTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "looksRareToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumAmountPerUserInCurrentTree",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleRootOfRewardRound",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "merkleRootUsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newMaximumAmountPerUser",
          "type": "uint256"
        }
      ],
      "name": "updateTradingRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "576:5234:57:-:0;;;1862:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:144;996:15;;-1:-1:-1;;996:15:144;;;-1:-1:-1;1821:22:145;;936:32:142;719:10:167;936:18:142;:32::i;:::-;-1:-1:-1;;;;;1909:40:57;;;;1959:8;:6;:8::i;:::-;1862:112;576:5234;;2433:187:142;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:144:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:144::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:167::0;;640:96;2281:12:144::1;2274:20;::::0;-1:-1:-1;;;;;473:32:189;;;455:51;;443:2;428:18;2274:20:144::1;;;;;;;2186:115::o:0;1767:106::-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:144;;719:2:189;1828:38:144;;;701:21:189;758:2;738:18;;;731:30;-1:-1:-1;;;777:18:189;;;770:46;833:18;;1828:38:144;;;;;;;;1767:106::o;14:290:189:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:189;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:189:o;517:340::-;576:5234:57;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "576:5234:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:33;;;;;;;;;160:25:189;;;148:2;133:18;883:33:57;;;;;;;;688:54;;736:6;688:54;;2130:923;;;;;;:::i;:::-;;:::i;:::-;;3768:134;;;:::i;749:38::-;;;;;;;;-1:-1:-1;;;;;1258:32:189;;;1240:51;;1228:2;1213:18;749:38:57;1078:219:189;1138:54:57;;;;;;:::i;:::-;;;;;;;;;;;;;;1615:84:144;1662:4;1685:7;;;1615:84;;;1836:14:189;;1829:22;1811:41;;1799:2;1784:18;1615:84:144;1671:187:189;1831:101:142;;;:::i;1237:58:57:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3257:455;;;;;;:::i;:::-;;:::i;4202:297::-;;;;;;:::i;:::-;;:::i;1201:85:142:-;1273:6;;-1:-1:-1;;;;;1273:6:142;1201:85;;1471:80:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3960:88;;;:::i;1347:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4748:208;;;;;;:::i;:::-;;:::i;:::-;;;;3912:14:189;;3905:22;3887:41;;3959:2;3944:18;;3937:34;;;;3860:18;4748:208:57;3719:258:189;2081:198:142;;;;;;:::i;:::-;;:::i;952:34:57:-;;;;;;1036:48;;;;;;2130:923;1239:19:144;:17;:19::i;:::-;2261:21:145::1;:19;:21::i;:::-;2335:18:57::2;::::0;2306:48:::2;::::0;;;:28:::2;:48;::::0;;;;;;;2355:10:::2;2306:60:::0;;;;;;;;::::2;;2305:61;2297:98;;;::::0;-1:-1:-1;;;2297:98:57;;4184:2:189;2297:98:57::2;::::0;::::2;4166:21:189::0;4223:2;4203:18;;;4196:30;4262:26;4242:18;;;4235:54;4306:18;;2297:98:57::2;;;;;;;;;2407:16;2425:22:::0;2451:42:::2;2461:10;2473:6;2481:11;;2451:9;:42::i;:::-;2406:87;;;;2512:11;2504:46;;;::::0;-1:-1:-1;;;2504:46:57;;4537:2:189;2504:46:57::2;::::0;::::2;4519:21:189::0;4576:2;4556:18;;;4549:30;-1:-1:-1;;;4595:18:189;;;4588:52;4657:18;;2504:46:57::2;4335:346:189::0;2504:46:57::2;2605:6;2568:33;;:43;;2560:87;;;::::0;-1:-1:-1;;;2560:87:57;;4888:2:189;2560:87:57::2;::::0;::::2;4870:21:189::0;4927:2;4907:18;;;4900:30;4966:33;4946:18;;;4939:61;5017:18;;2560:87:57::2;4686:355:189::0;2560:87:57::2;2737:18;::::0;2708:48:::2;::::0;;;:28:::2;:48;::::0;;;;;;;2757:10:::2;2708:60:::0;;;;;;;:67;;-1:-1:-1;;2708:67:57::2;2771:4;2708:67;::::0;;2819:19:::2;:31:::0;;;;;:49;;2854:14;;2708:48;2819:49:::2;::::0;2854:14;;2819:49:::2;:::i;:::-;::::0;;;-1:-1:-1;2915:55:57::2;::::0;-1:-1:-1;;;;;;2915:14:57::2;:27;2943:10;2955:14:::0;2915:27:::2;:55::i;:::-;3011:18;::::0;2986:60:::2;::::0;160:25:189;;;2999:10:57::2;::::0;2986:60:::2;::::0;148:2:189;133:18;2986:60:57::2;;;;;;;2229:824;;2303:20:145::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;2130:923:57::0;;;:::o;3768:134::-;1094:13:142;:11;:13::i;:::-;1239:19:144::1;:17;:19::i;:::-;3862:15:57::2;3840:19;:37:::0;3887:8:::2;:6;:8::i;:::-;3768:134::o:0;1831:101:142:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;3257:455:57:-:0;1094:13:142;:11;:13::i;:::-;3378:26:57::1;::::0;;;:14:::1;:26;::::0;;;;;::::1;;3377:27;3369:71;;;::::0;-1:-1:-1;;;3369:71:57;;5510:2:189;3369:71:57::1;::::0;::::1;5492:21:189::0;5549:2;5529:18;;;5522:30;5588:33;5568:18;;;5561:61;5639:18;;3369:71:57::1;5308:355:189::0;3369:71:57::1;3451:18;:20:::0;;;:18:::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3505:18:57::1;::::0;;3481:43:::1;::::0;;;:23:::1;:43;::::0;;;;;;;:56;;;3547:26;;;:14:::1;:26:::0;;;;;;:33;;-1:-1:-1;;3547:33:57::1;3576:4;3547:33;::::0;;3590::::1;:59:::0;;;3686:18;;3665:40;;::::1;::::0;3481:43;3665:40:::1;3257:455:::0;;:::o;4202:297::-;1094:13:142;:11;:13::i;:::-;1486:16:144::1;:14;:16::i;:::-;736:6:57::2;4315:19;;:43;;;;:::i;:::-;4296:15;:63;4288:104;;;::::0;-1:-1:-1;;;4288:104:57;;6010:2:189;4288:104:57::2;::::0;::::2;5992:21:189::0;6049:2;6029:18;;;6022:30;6088;6068:18;;;6061:58;6136:18;;4288:104:57::2;5808:352:189::0;4288:104:57::2;4402:47;-1:-1:-1::0;;;;;4402:14:57::2;:27;4430:10;4442:6:::0;4402:27:::2;:47::i;:::-;4465:27;::::0;160:25:189;;;4465:27:57::2;::::0;148:2:189;133:18;4465:27:57::2;;;;;;;4202:297:::0;:::o;3960:88::-;1094:13:142;:11;:13::i;:::-;1486:16:144::1;:14;:16::i;:::-;4031:10:57::2;:8;:10::i;4748:208::-:0;4881:4;4887:7;4913:36;4923:4;4929:6;4937:11;;4913:9;:36::i;:::-;4906:43;;;;4748:208;;;;;;;;:::o;2081:198:142:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:142;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:142;;6367:2:189;2161:73:142::1;::::0;::::1;6349:21:189::0;6406:2;6386:18;;;6379:30;6445:34;6425:18;;;6418:62;-1:-1:-1;;;6496:18:189;;;6489:36;6542:19;;2161:73:142::1;6165:402:189::0;2161:73:142::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1767:106:144:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:144;;6774:2:189;1828:38:144;;;6756:21:189;6813:2;6793:18;;;6786:30;-1:-1:-1;;;6832:18:189;;;6825:46;6888:18;;1828:38:144;6572:340:189;2336:287:145;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:145;;7119:2:189;2460:63:145;;;7101:21:189;7158:2;7138:18;;;7131:30;7197:33;7177:18;;;7170:61;7248:18;;2460:63:145;6917:355:189;2460:63:145;1759:1;2598:7;:18;2336:287::o;5205:603:57:-;5445:30;;-1:-1:-1;;7454:2:189;7450:15;;;7446:53;5445:30:57;;;7434:66:189;7516:12;;;7509:28;;;5339:4:57;;;;;;7553:12:189;;5445:30:57;;;;;;;;;;;;5435:41;;;;;;5420:56;;5486:17;5506:82;5525:11;;5506:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5562:18:57;;5538:43;;:23;:43;;;;;;;-1:-1:-1;5583:4:57;;-1:-1:-1;5506:18:57;;-1:-1:-1;5506:82:57:i;:::-;5486:102;;5605:12;5604:13;5603:75;;;-1:-1:-1;5652:18:57;;5623:48;;;;:28;:48;;;;;;;;-1:-1:-1;;;;;5623:54:57;;;;;;;;;;;;5603:75;5599:203;;;5702:5;5709:1;5694:17;;;;;;;;5599:203;-1:-1:-1;;;;;5765:25:57;;;;;;:19;:25;;;;;;5750:4;;5756:34;;:6;:34;:::i;:::-;5742:49;;;;;;;;763:205:159;902:58;;;-1:-1:-1;;;;;7901:32:189;;902:58:159;;;7883:51:189;7950:18;;;;7943:34;;;902:58:159;;;;;;;;;;7856:18:189;;;;902:58:159;;;;;;;;-1:-1:-1;;;;;902:58:159;-1:-1:-1;;;902:58:159;;;875:86;;895:5;;875:19;:86::i;1359:130:142:-;1273:6;;-1:-1:-1;;;;;1273:6:142;719:10:167;1422:23:142;1414:68;;;;-1:-1:-1;;;1414:68:142;;8190:2:189;1414:68:142;;;8172:21:189;;;8209:18;;;8202:30;8268:34;8248:18;;;8241:62;8320:18;;1414:68:142;7988:356:189;2186:115:144;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:144::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:167::0;;640:96;2281:12:144::1;2274:20;::::0;-1:-1:-1;;;;;1258:32:189;;;1240:51;;1228:2;1213:18;2274:20:144::1;;;;;;;2186:115::o:0;2433:187:142:-;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1945:106:144:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:144;;8551:2:189;2003:41:144;;;8533:21:189;8590:2;8570:18;;;8563:30;-1:-1:-1;;;8609:18:189;;;8602:50;8669:18;;2003:41:144;8349:344:189;2433:117:144;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:144::1;::::0;;2521:22:::1;719:10:167::0;2530:12:144::1;640:96:167::0;1156:184:172;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;;1156:184;-1:-1:-1;;;;1156:184:172:o;3747:706:159:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:159;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:159;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:159;;9182:2:189;4351:85:159;;;9164:21:189;9221:2;9201:18;;;9194:30;9260:34;9240:18;;;9233:62;-1:-1:-1;;;9311:18:189;;;9304:40;9361:19;;4351:85:159;8980:406:189;1994:290:172;2077:7;2119:4;2077:7;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;2205:9;:33::i;:::-;2190:48;-1:-1:-1;2171:3:172;;;;:::i;:::-;;;;2133:116;;;-1:-1:-1;2265:12:172;-1:-1:-1;1994:290:172;;;;;:::o;3873:223:166:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:166:o;8879:147:172:-;8942:7;8972:1;8968;:5;:51;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8968:51;;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8976:20;8961:58;8879:147;-1:-1:-1;;;8879:147:172:o;4960:446:166:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:166;;9725:2:189;5149:81:166;;;9707:21:189;9764:2;9744:18;;;9737:30;9803:34;9783:18;;;9776:62;-1:-1:-1;;;9854:18:189;;;9847:36;9900:19;;5149:81:166;9523:402:189;5149:81:166;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:166;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:166:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:166;;;7908:60;;;;-1:-1:-1;;;7908:60:166;;10679:2:189;7908:60:166;;;10661:21:189;10718:2;10698:18;;;10691:30;10757:31;10737:18;;;10730:59;10806:18;;7908:60:166;10477:353:189;7908:60:166;-1:-1:-1;8003:10:166;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:166;;;;;;;;:::i;196:367:189:-;259:8;269:6;323:3;316:4;308:6;304:17;300:27;290:55;;341:1;338;331:12;290:55;-1:-1:-1;364:20:189;;407:18;396:30;;393:50;;;439:1;436;429:12;393:50;476:4;468:6;464:17;452:29;;536:3;529:4;519:6;516:1;512:14;504:6;500:27;496:38;493:47;490:67;;;553:1;550;543:12;490:67;196:367;;;;;:::o;568:505::-;663:6;671;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;784:9;771:23;761:33;;845:2;834:9;830:18;817:32;872:18;864:6;861:30;858:50;;;904:1;901;894:12;858:50;943:70;1005:7;996:6;985:9;981:22;943:70;:::i;:::-;568:505;;1032:8;;-1:-1:-1;917:96:189;;-1:-1:-1;;;;568:505:189:o;1302:173::-;1370:20;;-1:-1:-1;;;;;1419:31:189;;1409:42;;1399:70;;1465:1;1462;1455:12;1399:70;1302:173;;;:::o;1480:186::-;1539:6;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1631:29;1650:9;1631:29;:::i;1863:180::-;1922:6;1975:2;1963:9;1954:7;1950:23;1946:32;1943:52;;;1991:1;1988;1981:12;1943:52;-1:-1:-1;2014:23:189;;1863:180;-1:-1:-1;1863:180:189:o;2230:248::-;2298:6;2306;2359:2;2347:9;2338:7;2334:23;2330:32;2327:52;;;2375:1;2372;2365:12;2327:52;-1:-1:-1;;2398:23:189;;;2468:2;2453:18;;;2440:32;;-1:-1:-1;2230:248:189:o;2691:254::-;2759:6;2767;2820:2;2808:9;2799:7;2795:23;2791:32;2788:52;;;2836:1;2833;2826:12;2788:52;2872:9;2859:23;2849:33;;2901:38;2935:2;2924:9;2920:18;2901:38;:::i;:::-;2891:48;;2691:254;;;;;:::o;3135:579::-;3239:6;3247;3255;3263;3316:2;3304:9;3295:7;3291:23;3287:32;3284:52;;;3332:1;3329;3322:12;3284:52;3355:29;3374:9;3355:29;:::i;:::-;3345:39;;3431:2;3420:9;3416:18;3403:32;3393:42;;3486:2;3475:9;3471:18;3458:32;3513:18;3505:6;3502:30;3499:50;;;3545:1;3542;3535:12;3499:50;3584:70;3646:7;3637:6;3626:9;3622:22;3584:70;:::i;:::-;3135:579;;;;-1:-1:-1;3673:8:189;-1:-1:-1;;;;3135:579:189:o;5046:127::-;5107:10;5102:3;5098:20;5095:1;5088:31;5138:4;5135:1;5128:15;5162:4;5159:1;5152:15;5178:125;5243:9;;;5264:10;;;5261:36;;;5277:18;;:::i;5668:135::-;5707:3;5728:17;;;5725:43;;5748:18;;:::i;:::-;-1:-1:-1;5795:1:189;5784:13;;5668:135::o;7576:128::-;7643:9;;;7664:11;;;7661:37;;;7678:18;;:::i;8698:277::-;8765:6;8818:2;8806:9;8797:7;8793:23;8789:32;8786:52;;;8834:1;8831;8824:12;8786:52;8866:9;8860:16;8919:5;8912:13;8905:21;8898:5;8895:32;8885:60;;8941:1;8938;8931:12;9391:127;9452:10;9447:3;9443:20;9440:1;9433:31;9483:4;9480:1;9473:15;9507:4;9504:1;9497:15;9930:250;10015:1;10025:113;10039:6;10036:1;10033:13;10025:113;;;10115:11;;;10109:18;10096:11;;;10089:39;10061:2;10054:10;10025:113;;;-1:-1:-1;;10172:1:189;10154:16;;10147:27;9930:250::o;10185:287::-;10314:3;10352:6;10346:13;10368:66;10427:6;10422:3;10415:4;10407:6;10403:17;10368:66;:::i;:::-;10450:16;;;;;10185:287;-1:-1:-1;;10185:287:189:o;10835:396::-;10984:2;10973:9;10966:21;10947:4;11016:6;11010:13;11059:6;11054:2;11043:9;11039:18;11032:34;11075:79;11147:6;11142:2;11131:9;11127:18;11122:2;11114:6;11110:15;11075:79;:::i;:::-;11215:2;11194:15;-1:-1:-1;;11190:29:189;11175:45;;;;11222:2;11171:54;;10835:396;-1:-1:-1;;10835:396:189:o",
    "linkReferences": {},
    "immutableReferences": {
      "13176": [
        {
          "start": 366,
          "length": 32
        },
        {
          "start": 1124,
          "length": 32
        },
        {
          "start": 1626,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BUFFER_ADMIN_WITHDRAW()": "141fd8c8",
    "amountClaimedByUser(address)": "3b66f49d",
    "canClaim(address,uint256,bytes32[])": "dc38bdb5",
    "claim(uint256,bytes32[])": "2f52ebb7",
    "currentRewardRound()": "1040faf9",
    "hasUserClaimedForRewardRound(uint256,address)": "9ea76f34",
    "lastPausedTimestamp()": "fa461974",
    "looksRareToken()": "36db9fb2",
    "maximumAmountPerUserInCurrentTree()": "ff0a4eb0",
    "merkleRootOfRewardRound(uint256)": "84483c86",
    "merkleRootUsed(bytes32)": "ba42590d",
    "owner()": "8da5cb5b",
    "pauseDistribution()": "31cec7a3",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "unpauseDistribution()": "b94ec9d0",
    "updateTradingRewards(bytes32,uint256)": "847fadca",
    "withdrawTokenRewards(uint256)": "8923e2f7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_looksRareToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardRound\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawnOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardRound\",\"type\":\"uint256\"}],\"name\":\"UpdateTradingRewards\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUFFER_ADMIN_WITHDRAW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountClaimedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRewardRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasUserClaimedForRewardRound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPausedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"looksRareToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumAmountPerUserInCurrentTree\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleRootOfRewardRound\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merkleRootUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newMaximumAmountPerUser\",\"type\":\"uint256\"}],\"name\":\"updateTradingRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canClaim(address,uint256,bytes32[])\":{\"params\":{\"amount\":\"amount to claim\",\"merkleProof\":\"array with the merkle proof\",\"user\":\"address of the user\"}},\"claim(uint256,bytes32[])\":{\"params\":{\"amount\":\"amount to claim\",\"merkleProof\":\"array containing the merkle proof\"}},\"constructor\":{\"params\":{\"_looksRareToken\":\"address of the LooksRare token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateTradingRewards(bytes32,uint256)\":{\"details\":\"It automatically increments the currentRewardRound\",\"params\":{\"merkleRoot\":\"root of the computed merkle tree\"}},\"withdrawTokenRewards(uint256)\":{\"details\":\"It is for emergency purposes\",\"params\":{\"amount\":\"amount to withdraw\"}}},\"title\":\"TradingRewardsDistributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canClaim(address,uint256,bytes32[])\":{\"notice\":\"Check whether it is possible to claim and how much based on previous distribution\"},\"claim(uint256,bytes32[])\":{\"notice\":\"Claim pending rewards\"},\"constructor\":{\"notice\":\"Constructor\"},\"pauseDistribution()\":{\"notice\":\"Pause distribution\"},\"unpauseDistribution()\":{\"notice\":\"Unpause distribution\"},\"updateTradingRewards(bytes32,uint256)\":{\"notice\":\"Update trading rewards with a new merkle root\"},\"withdrawTokenRewards(uint256)\":{\"notice\":\"Transfer LOOKS tokens back to owner\"}},\"notice\":\"It distributes LOOKS tokens with rolling Merkle airdrops.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewards/TradingReweardDistributor.sol\":\"TradingRewardsDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":solmate/=node_modules/solmate/\",\":xdeployer/=node_modules/xdeployer/\"]},\"sources\":{\"contracts/rewards/TradingReweardDistributor.sol\":{\"keccak256\":\"0x56230e9cadf14bc4bd7e5c6172562314522a604bff96e5751af37bde621b9d04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://723835c3bda2719b8791b63a957edc1af10c1824052ad22937cf618ffc9471ab\",\"dweb:/ipfs/QmRZCJpsEri69fo5oV2zBedxaY4uhH7iaXzLoprn24qPJh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_looksRareToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardRound",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenWithdrawnOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rewardRound",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateTradingRewards",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUFFER_ADMIN_WITHDRAW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "amountClaimedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRewardRound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasUserClaimedForRewardRound",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastPausedTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "looksRareToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maximumAmountPerUserInCurrentTree",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRootOfRewardRound",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRootUsed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseDistribution"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseDistribution"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "newMaximumAmountPerUser",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTradingRewards"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokenRewards"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "canClaim(address,uint256,bytes32[])": {
            "params": {
              "amount": "amount to claim",
              "merkleProof": "array with the merkle proof",
              "user": "address of the user"
            }
          },
          "claim(uint256,bytes32[])": {
            "params": {
              "amount": "amount to claim",
              "merkleProof": "array containing the merkle proof"
            }
          },
          "constructor": {
            "params": {
              "_looksRareToken": "address of the LooksRare token"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateTradingRewards(bytes32,uint256)": {
            "details": "It automatically increments the currentRewardRound",
            "params": {
              "merkleRoot": "root of the computed merkle tree"
            }
          },
          "withdrawTokenRewards(uint256)": {
            "details": "It is for emergency purposes",
            "params": {
              "amount": "amount to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canClaim(address,uint256,bytes32[])": {
            "notice": "Check whether it is possible to claim and how much based on previous distribution"
          },
          "claim(uint256,bytes32[])": {
            "notice": "Claim pending rewards"
          },
          "constructor": {
            "notice": "Constructor"
          },
          "pauseDistribution()": {
            "notice": "Pause distribution"
          },
          "unpauseDistribution()": {
            "notice": "Unpause distribution"
          },
          "updateTradingRewards(bytes32,uint256)": {
            "notice": "Update trading rewards with a new merkle root"
          },
          "withdrawTokenRewards(uint256)": {
            "notice": "Transfer LOOKS tokens back to owner"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":solmate/=node_modules/solmate/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/rewards/TradingReweardDistributor.sol": "TradingRewardsDistributor"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/rewards/TradingReweardDistributor.sol": {
        "keccak256": "0x56230e9cadf14bc4bd7e5c6172562314522a604bff96e5751af37bde621b9d04",
        "urls": [
          "bzz-raw://723835c3bda2719b8791b63a957edc1af10c1824052ad22937cf618ffc9471ab",
          "dweb:/ipfs/QmRZCJpsEri69fo5oV2zBedxaY4uhH7iaXzLoprn24qPJh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1",
        "urls": [
          "bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616",
          "dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/rewards/TradingReweardDistributor.sol",
    "id": 13502,
    "exportedSymbols": {
      "IERC20": [
        60967
      ],
      "MerkleProof": [
        64236
      ],
      "Ownable": [
        58409
      ],
      "Pausable": [
        58536
      ],
      "ReentrancyGuard": [
        58590
      ],
      "SafeERC20": [
        61374
      ],
      "TradingRewardsDistributor": [
        13501
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5778:57",
    "nodes": [
      {
        "id": 13148,
        "nodeType": "PragmaDirective",
        "src": "32:23:57",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 13150,
        "nodeType": "ImportDirective",
        "src": "57:67:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13502,
        "sourceUnit": 58410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13149,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58409,
              "src": "65:7:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13152,
        "nodeType": "ImportDirective",
        "src": "125:71:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13502,
        "sourceUnit": 58537,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13151,
              "name": "Pausable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58536,
              "src": "133:8:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13154,
        "nodeType": "ImportDirective",
        "src": "197:85:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13502,
        "sourceUnit": 58591,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13153,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58590,
              "src": "205:15:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13156,
        "nodeType": "ImportDirective",
        "src": "283:87:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13502,
        "sourceUnit": 64237,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13155,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64236,
              "src": "291:11:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13159,
        "nodeType": "ImportDirective",
        "src": "371:90:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13502,
        "sourceUnit": 61375,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13157,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60967,
              "src": "379:6:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 13158,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61374,
              "src": "387:9:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13501,
        "nodeType": "ContractDefinition",
        "src": "576:5234:57",
        "nodes": [
          {
            "id": 13170,
            "nodeType": "UsingForDirective",
            "src": "655:27:57",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13167,
              "name": "SafeERC20",
              "nameLocations": [
                "661:9:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61374,
              "src": "661:9:57"
            },
            "typeName": {
              "id": 13169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13168,
                "name": "IERC20",
                "nameLocations": [
                  "675:6:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60967,
                "src": "675:6:57"
              },
              "referencedDeclaration": 60967,
              "src": "675:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$60967",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 13173,
            "nodeType": "VariableDeclaration",
            "src": "688:54:57",
            "nodes": [],
            "constant": true,
            "functionSelector": "141fd8c8",
            "mutability": "constant",
            "name": "BUFFER_ADMIN_WITHDRAW",
            "nameLocation": "712:21:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13171,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 13172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "736:6:57",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "id": 13176,
            "nodeType": "VariableDeclaration",
            "src": "749:38:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "36db9fb2",
            "mutability": "immutable",
            "name": "looksRareToken",
            "nameLocation": "773:14:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$60967",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13175,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13174,
                "name": "IERC20",
                "nameLocations": [
                  "749:6:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60967,
                "src": "749:6:57"
              },
              "referencedDeclaration": 60967,
              "src": "749:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$60967",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13178,
            "nodeType": "VariableDeclaration",
            "src": "883:33:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "1040faf9",
            "mutability": "mutable",
            "name": "currentRewardRound",
            "nameLocation": "898:18:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13177,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "883:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13180,
            "nodeType": "VariableDeclaration",
            "src": "952:34:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "fa461974",
            "mutability": "mutable",
            "name": "lastPausedTimestamp",
            "nameLocation": "967:19:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13179,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "952:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13182,
            "nodeType": "VariableDeclaration",
            "src": "1036:48:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "ff0a4eb0",
            "mutability": "mutable",
            "name": "maximumAmountPerUserInCurrentTree",
            "nameLocation": "1051:33:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13181,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1036:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13186,
            "nodeType": "VariableDeclaration",
            "src": "1138:54:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "3b66f49d",
            "mutability": "mutable",
            "name": "amountClaimedByUser",
            "nameLocation": "1173:19:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 13185,
              "keyType": {
                "id": 13183,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1146:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1138:27:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13184,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1157:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 13190,
            "nodeType": "VariableDeclaration",
            "src": "1237:58:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "84483c86",
            "mutability": "mutable",
            "name": "merkleRootOfRewardRound",
            "nameLocation": "1272:23:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 13189,
              "keyType": {
                "id": 13187,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1245:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1237:27:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 13188,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 13194,
            "nodeType": "VariableDeclaration",
            "src": "1347:46:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "ba42590d",
            "mutability": "mutable",
            "name": "merkleRootUsed",
            "nameLocation": "1379:14:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 13193,
              "keyType": {
                "id": 13191,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1355:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1347:24:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 13192,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1366:4:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 13200,
            "nodeType": "VariableDeclaration",
            "src": "1471:80:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "9ea76f34",
            "mutability": "mutable",
            "name": "hasUserClaimedForRewardRound",
            "nameLocation": "1523:28:57",
            "scope": 13501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 13199,
              "keyType": {
                "id": 13195,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1479:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1471:44:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 13198,
                "keyType": {
                  "id": 13196,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:7:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1490:24:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13197,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:4:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 13208,
            "nodeType": "EventDefinition",
            "src": "1558:86:57",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e8dbd8c18906df11a70832fe7c874d1fddf6952cee2320658d66925618387999",
            "name": "RewardsClaim",
            "nameLocation": "1564:12:57",
            "parameters": {
              "id": 13207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13202,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1593:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13208,
                  "src": "1577:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewardRound",
                  "nameLocation": "1615:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13208,
                  "src": "1599:27:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1636:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13208,
                  "src": "1628:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:67:57"
            }
          },
          {
            "id": 13212,
            "nodeType": "EventDefinition",
            "src": "1649:56:57",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0b1d6b49e69d133866d064a73f0181e1e35aa94fde3ef0095587d7ebd0423caa",
            "name": "UpdateTradingRewards",
            "nameLocation": "1655:20:57",
            "parameters": {
              "id": 13211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewardRound",
                  "nameLocation": "1692:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13212,
                  "src": "1676:27:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:29:57"
            }
          },
          {
            "id": 13216,
            "nodeType": "EventDefinition",
            "src": "1710:42:57",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b4cd5c4a08bbed33abfe773ece179d156730e39629e065b7dcd8263027387c1d",
            "name": "TokenWithdrawnOwner",
            "nameLocation": "1716:19:57",
            "parameters": {
              "id": 13215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13214,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1744:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13216,
                  "src": "1736:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:16:57"
            }
          },
          {
            "id": 13232,
            "nodeType": "FunctionDefinition",
            "src": "1862:112:57",
            "nodes": [],
            "body": {
              "id": 13231,
              "nodeType": "Block",
              "src": "1899:75:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13222,
                      "name": "looksRareToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13176,
                      "src": "1909:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60967",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13224,
                          "name": "_looksRareToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13219,
                          "src": "1933:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13223,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60967,
                        "src": "1926:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$60967_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 13225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1926:23:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60967",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1909:40:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60967",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13227,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:40:57"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13228,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58519,
                      "src": "1959:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:8:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13230,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:8:57"
                }
              ]
            },
            "documentation": {
              "id": 13217,
              "nodeType": "StructuredDocumentation",
              "src": "1758:99:57",
              "text": " @notice Constructor\n @param _looksRareToken address of the LooksRare token"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13219,
                  "mutability": "mutable",
                  "name": "_looksRareToken",
                  "nameLocation": "1882:15:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13232,
                  "src": "1874:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:25:57"
            },
            "returnParameters": {
              "id": 13221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13311,
            "nodeType": "FunctionDefinition",
            "src": "2130:923:57",
            "nodes": [],
            "body": {
              "id": 13310,
              "nodeType": "Block",
              "src": "2229:824:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2305:61:57",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 13246,
                              "name": "hasUserClaimedForRewardRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13200,
                              "src": "2306:28:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 13248,
                            "indexExpression": {
                              "id": 13247,
                              "name": "currentRewardRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13178,
                              "src": "2335:18:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2306:48:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 13251,
                          "indexExpression": {
                            "expression": {
                              "id": 13249,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2355:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2359:6:57",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2355:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2306:60:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264733a20416c726561647920636c61696d6564",
                        "id": 13253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2368:26:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c08d97595cedb0ba1cb3bcf3ce40fbb01a3f19b8bf8674d5d52ea05c7ee766d5",
                          "typeString": "literal_string \"Rewards: Already claimed\""
                        },
                        "value": "Rewards: Already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c08d97595cedb0ba1cb3bcf3ce40fbb01a3f19b8bf8674d5d52ea05c7ee766d5",
                          "typeString": "literal_string \"Rewards: Already claimed\""
                        }
                      ],
                      "id": 13245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2297:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:98:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13255,
                  "nodeType": "ExpressionStatement",
                  "src": "2297:98:57"
                },
                {
                  "assignments": [
                    13257,
                    13259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13257,
                      "mutability": "mutable",
                      "name": "claimStatus",
                      "nameLocation": "2412:11:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 13310,
                      "src": "2407:16:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13256,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13259,
                      "mutability": "mutable",
                      "name": "adjustedAmount",
                      "nameLocation": "2433:14:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 13310,
                      "src": "2425:22:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13258,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2425:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13266,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13261,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2461:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2465:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2461:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13263,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13235,
                        "src": "2473:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13264,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13238,
                        "src": "2481:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 13260,
                      "name": "_canClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13500,
                      "src": "2451:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes32[] calldata) view returns (bool,uint256)"
                      }
                    },
                    "id": 13265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:42:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2406:87:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13268,
                        "name": "claimStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13257,
                        "src": "2512:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264733a20496e76616c69642070726f6f66",
                        "id": 13269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_468c1c8b19b4afdf9a70b69e8b64bb98a4a7df0523f7fff6d1603d7e9a28f025",
                          "typeString": "literal_string \"Rewards: Invalid proof\""
                        },
                        "value": "Rewards: Invalid proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_468c1c8b19b4afdf9a70b69e8b64bb98a4a7df0523f7fff6d1603d7e9a28f025",
                          "typeString": "literal_string \"Rewards: Invalid proof\""
                        }
                      ],
                      "id": 13267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2504:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2504:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13271,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:46:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13273,
                          "name": "maximumAmountPerUserInCurrentTree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13182,
                          "src": "2568:33:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 13274,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13235,
                          "src": "2605:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2568:43:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264733a20416d6f756e7420686967686572207468616e206d6178",
                        "id": 13276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2613:33:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c4c26fe8c5624b8a1d0aa77f9379e96bd45d77fe6441346ee90354e55687ea4",
                          "typeString": "literal_string \"Rewards: Amount higher than max\""
                        },
                        "value": "Rewards: Amount higher than max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c4c26fe8c5624b8a1d0aa77f9379e96bd45d77fe6441346ee90354e55687ea4",
                          "typeString": "literal_string \"Rewards: Amount higher than max\""
                        }
                      ],
                      "id": 13272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2560:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2560:87:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13278,
                  "nodeType": "ExpressionStatement",
                  "src": "2560:87:57"
                },
                {
                  "expression": {
                    "id": 13286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 13279,
                          "name": "hasUserClaimedForRewardRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13200,
                          "src": "2708:28:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 13283,
                        "indexExpression": {
                          "id": 13280,
                          "name": "currentRewardRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13178,
                          "src": "2737:18:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2708:48:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13284,
                      "indexExpression": {
                        "expression": {
                          "id": 13281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2757:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2761:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2757:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2708:60:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 13285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2771:4:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2708:67:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13287,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:67:57"
                },
                {
                  "expression": {
                    "id": 13293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13288,
                        "name": "amountClaimedByUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13186,
                        "src": "2819:19:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13291,
                      "indexExpression": {
                        "expression": {
                          "id": 13289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2839:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2843:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2839:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2819:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13292,
                      "name": "adjustedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13259,
                      "src": "2854:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2819:49:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13294,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:49:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2943:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2947:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2943:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13300,
                        "name": "adjustedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13259,
                        "src": "2955:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13295,
                        "name": "looksRareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13176,
                        "src": "2915:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$60967",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2930:12:57",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61125,
                      "src": "2915:27:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$60967_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$60967_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2915:55:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13302,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:55:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2999:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3003:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2999:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13306,
                        "name": "currentRewardRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13178,
                        "src": "3011:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13307,
                        "name": "adjustedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13259,
                        "src": "3031:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13303,
                      "name": "RewardsClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13208,
                      "src": "2986:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 13308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:60:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13309,
                  "nodeType": "EmitStatement",
                  "src": "2981:65:57"
                }
              ]
            },
            "documentation": {
              "id": 13233,
              "nodeType": "StructuredDocumentation",
              "src": "1980:145:57",
              "text": " @notice Claim pending rewards\n @param amount amount to claim\n @param merkleProof array containing the merkle proof"
            },
            "functionSelector": "2f52ebb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13240,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2202:13:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58463,
                  "src": "2202:13:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2202:13:57"
              },
              {
                "id": 13243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13242,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2216:12:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58566,
                  "src": "2216:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2216:12:57"
              }
            ],
            "name": "claim",
            "nameLocation": "2139:5:57",
            "parameters": {
              "id": 13239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13235,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2153:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13311,
                  "src": "2145:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13238,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "2180:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13311,
                  "src": "2161:30:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13236,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2161:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13237,
                    "nodeType": "ArrayTypeName",
                    "src": "2161:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:48:57"
            },
            "returnParameters": {
              "id": 13244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2229:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13353,
            "nodeType": "FunctionDefinition",
            "src": "3257:455:57",
            "nodes": [],
            "body": {
              "id": 13352,
              "nodeType": "Block",
              "src": "3359:353:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3377:27:57",
                        "subExpression": {
                          "baseExpression": {
                            "id": 13322,
                            "name": "merkleRootUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13194,
                            "src": "3378:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 13324,
                          "indexExpression": {
                            "id": 13323,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13314,
                            "src": "3393:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3378:26:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65723a204d65726b6c6520726f6f7420616c72656164792075736564",
                        "id": 13326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3406:33:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e833149f8595f280ee2e1a48b42a504e0e1a70dad1997bd83f3687a405d827b",
                          "typeString": "literal_string \"Owner: Merkle root already used\""
                        },
                        "value": "Owner: Merkle root already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e833149f8595f280ee2e1a48b42a504e0e1a70dad1997bd83f3687a405d827b",
                          "typeString": "literal_string \"Owner: Merkle root already used\""
                        }
                      ],
                      "id": 13321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3369:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:71:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13328,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:71:57"
                },
                {
                  "expression": {
                    "id": 13330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3451:20:57",
                    "subExpression": {
                      "id": 13329,
                      "name": "currentRewardRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13178,
                      "src": "3451:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13331,
                  "nodeType": "ExpressionStatement",
                  "src": "3451:20:57"
                },
                {
                  "expression": {
                    "id": 13336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13332,
                        "name": "merkleRootOfRewardRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13190,
                        "src": "3481:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 13334,
                      "indexExpression": {
                        "id": 13333,
                        "name": "currentRewardRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13178,
                        "src": "3505:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3481:43:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13335,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13314,
                      "src": "3527:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3481:56:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 13337,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:56:57"
                },
                {
                  "expression": {
                    "id": 13342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13338,
                        "name": "merkleRootUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13194,
                        "src": "3547:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 13340,
                      "indexExpression": {
                        "id": 13339,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13314,
                        "src": "3562:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3547:26:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 13341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3576:4:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3547:33:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13343,
                  "nodeType": "ExpressionStatement",
                  "src": "3547:33:57"
                },
                {
                  "expression": {
                    "id": 13346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13344,
                      "name": "maximumAmountPerUserInCurrentTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13182,
                      "src": "3590:33:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13345,
                      "name": "newMaximumAmountPerUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13316,
                      "src": "3626:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3590:59:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13347,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:59:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13349,
                        "name": "currentRewardRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13178,
                        "src": "3686:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13348,
                      "name": "UpdateTradingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13212,
                      "src": "3665:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:40:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13351,
                  "nodeType": "EmitStatement",
                  "src": "3660:45:57"
                }
              ]
            },
            "documentation": {
              "id": 13312,
              "nodeType": "StructuredDocumentation",
              "src": "3059:193:57",
              "text": " @notice Update trading rewards with a new merkle root\n @dev It automatically increments the currentRewardRound\n @param merkleRoot root of the computed merkle tree"
            },
            "functionSelector": "847fadca",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13319,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13318,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3349:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "3349:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3349:9:57"
              }
            ],
            "name": "updateTradingRewards",
            "nameLocation": "3266:20:57",
            "parameters": {
              "id": 13317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13314,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "3295:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "3287:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13316,
                  "mutability": "mutable",
                  "name": "newMaximumAmountPerUser",
                  "nameLocation": "3315:23:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "3307:31:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3286:53:57"
            },
            "returnParameters": {
              "id": 13320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3359:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13370,
            "nodeType": "FunctionDefinition",
            "src": "3768:134:57",
            "nodes": [],
            "body": {
              "id": 13369,
              "nodeType": "Block",
              "src": "3830:72:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13361,
                      "name": "lastPausedTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13180,
                      "src": "3840:19:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13362,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3862:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 13363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3868:9:57",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3862:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3840:37:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13365,
                  "nodeType": "ExpressionStatement",
                  "src": "3840:37:57"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13366,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58519,
                      "src": "3887:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:8:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13368,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:8:57"
                }
              ]
            },
            "documentation": {
              "id": 13354,
              "nodeType": "StructuredDocumentation",
              "src": "3718:45:57",
              "text": " @notice Pause distribution"
            },
            "functionSelector": "31cec7a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13357,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13356,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3806:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "3806:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3806:9:57"
              },
              {
                "id": 13359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13358,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3816:13:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58463,
                  "src": "3816:13:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3816:13:57"
              }
            ],
            "name": "pauseDistribution",
            "nameLocation": "3777:17:57",
            "parameters": {
              "id": 13355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3794:2:57"
            },
            "returnParameters": {
              "id": 13360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3830:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13382,
            "nodeType": "FunctionDefinition",
            "src": "3960:88:57",
            "nodes": [],
            "body": {
              "id": 13381,
              "nodeType": "Block",
              "src": "4021:27:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13378,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58535,
                      "src": "4031:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4031:10:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13380,
                  "nodeType": "ExpressionStatement",
                  "src": "4031:10:57"
                }
              ]
            },
            "documentation": {
              "id": 13371,
              "nodeType": "StructuredDocumentation",
              "src": "3908:47:57",
              "text": " @notice Unpause distribution"
            },
            "functionSelector": "b94ec9d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13374,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13373,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4000:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "4000:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4000:9:57"
              },
              {
                "id": 13376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13375,
                  "name": "whenPaused",
                  "nameLocations": [
                    "4010:10:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58471,
                  "src": "4010:10:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4010:10:57"
              }
            ],
            "name": "unpauseDistribution",
            "nameLocation": "3969:19:57",
            "parameters": {
              "id": 13372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:2:57"
            },
            "returnParameters": {
              "id": 13377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4021:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13416,
            "nodeType": "FunctionDefinition",
            "src": "4202:297:57",
            "nodes": [],
            "body": {
              "id": 13415,
              "nodeType": "Block",
              "src": "4278:221:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13393,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4296:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4302:9:57",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4296:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 13395,
                                "name": "lastPausedTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13180,
                                "src": "4315:19:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 13396,
                                "name": "BUFFER_ADMIN_WITHDRAW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13173,
                                "src": "4337:21:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4315:43:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 13398,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4314:45:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4296:63:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65723a20546f6f206561726c7920746f207769746864726177",
                        "id": 13400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4361:30:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_793e5a79110e56f89c6d0692b48a620d8013f365b25e183dc2cc33f2f6d5a708",
                          "typeString": "literal_string \"Owner: Too early to withdraw\""
                        },
                        "value": "Owner: Too early to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_793e5a79110e56f89c6d0692b48a620d8013f365b25e183dc2cc33f2f6d5a708",
                          "typeString": "literal_string \"Owner: Too early to withdraw\""
                        }
                      ],
                      "id": 13392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4288:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4288:104:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13402,
                  "nodeType": "ExpressionStatement",
                  "src": "4288:104:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4430:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4434:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4430:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13408,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13385,
                        "src": "4442:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13403,
                        "name": "looksRareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13176,
                        "src": "4402:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$60967",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4417:12:57",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61125,
                      "src": "4402:27:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$60967_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$60967_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4402:47:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13410,
                  "nodeType": "ExpressionStatement",
                  "src": "4402:47:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13412,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13385,
                        "src": "4485:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13411,
                      "name": "TokenWithdrawnOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13216,
                      "src": "4465:19:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4465:27:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13414,
                  "nodeType": "EmitStatement",
                  "src": "4460:32:57"
                }
              ]
            },
            "documentation": {
              "id": 13383,
              "nodeType": "StructuredDocumentation",
              "src": "4054:143:57",
              "text": " @notice Transfer LOOKS tokens back to owner\n @dev It is for emergency purposes\n @param amount amount to withdraw"
            },
            "functionSelector": "8923e2f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13387,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4257:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58328,
                  "src": "4257:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4257:9:57"
              },
              {
                "id": 13390,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13389,
                  "name": "whenPaused",
                  "nameLocations": [
                    "4267:10:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58471,
                  "src": "4267:10:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4267:10:57"
              }
            ],
            "name": "withdrawTokenRewards",
            "nameLocation": "4211:20:57",
            "parameters": {
              "id": 13386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13385,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4240:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13416,
                  "src": "4232:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4232:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4231:16:57"
            },
            "returnParameters": {
              "id": 13391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4278:0:57"
            },
            "scope": 13501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13438,
            "nodeType": "FunctionDefinition",
            "src": "4748:208:57",
            "nodes": [],
            "body": {
              "id": 13437,
              "nodeType": "Block",
              "src": "4896:60:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13432,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13419,
                        "src": "4923:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13433,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13421,
                        "src": "4929:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13434,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13424,
                        "src": "4937:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 13431,
                      "name": "_canClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13500,
                      "src": "4913:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes32[] calldata) view returns (bool,uint256)"
                      }
                    },
                    "id": 13435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4913:36:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 13430,
                  "id": 13436,
                  "nodeType": "Return",
                  "src": "4906:43:57"
                }
              ]
            },
            "documentation": {
              "id": 13417,
              "nodeType": "StructuredDocumentation",
              "src": "4505:238:57",
              "text": " @notice Check whether it is possible to claim and how much based on previous distribution\n @param user address of the user\n @param amount amount to claim\n @param merkleProof array with the merkle proof"
            },
            "functionSelector": "dc38bdb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canClaim",
            "nameLocation": "4757:8:57",
            "parameters": {
              "id": 13425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13419,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4783:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13438,
                  "src": "4775:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13421,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4805:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13438,
                  "src": "4797:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4797:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13424,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "4840:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13438,
                  "src": "4821:30:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13422,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4821:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13423,
                    "nodeType": "ArrayTypeName",
                    "src": "4821:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4765:92:57"
            },
            "returnParameters": {
              "id": 13430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13438,
                  "src": "4881:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13438,
                  "src": "4887:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4880:15:57"
            },
            "scope": 13501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13500,
            "nodeType": "FunctionDefinition",
            "src": "5205:603:57",
            "nodes": [],
            "body": {
              "id": 13499,
              "nodeType": "Block",
              "src": "5354:454:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13454,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "5428:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 13499,
                      "src": "5420:12:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13453,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5420:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13462,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13458,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13441,
                            "src": "5462:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13459,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13443,
                            "src": "5468:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 13456,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5445:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5449:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5445:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5445:30:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13455,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5435:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5435:41:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5420:56:57"
                },
                {
                  "assignments": [
                    13464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13464,
                      "mutability": "mutable",
                      "name": "canUserClaim",
                      "nameLocation": "5491:12:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 13499,
                      "src": "5486:17:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13463,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5486:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13473,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13467,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13446,
                        "src": "5525:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 13468,
                          "name": "merkleRootOfRewardRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13190,
                          "src": "5538:23:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 13470,
                        "indexExpression": {
                          "id": 13469,
                          "name": "currentRewardRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13178,
                          "src": "5562:18:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5538:43:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 13471,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13454,
                        "src": "5583:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 13465,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64236,
                        "src": "5506:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$64236_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 13466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5518:6:57",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63758,
                      "src": "5506:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 13472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5506:82:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5486:102:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 13483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 13475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5604:13:57",
                          "subExpression": {
                            "id": 13474,
                            "name": "canUserClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13464,
                            "src": "5605:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 13476,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5603:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 13477,
                              "name": "hasUserClaimedForRewardRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13200,
                              "src": "5623:28:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 13479,
                            "indexExpression": {
                              "id": 13478,
                              "name": "currentRewardRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13178,
                              "src": "5652:18:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5623:48:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 13481,
                          "indexExpression": {
                            "id": 13480,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13441,
                            "src": "5672:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5623:54:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 13482,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5622:56:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5603:75:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13497,
                    "nodeType": "Block",
                    "src": "5728:74:57",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 13489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5750:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 13490,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13443,
                                "src": "5756:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 13491,
                                  "name": "amountClaimedByUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13186,
                                  "src": "5765:19:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 13493,
                                "indexExpression": {
                                  "id": 13492,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13441,
                                  "src": "5785:4:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5765:25:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5756:34:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 13495,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5749:42:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 13452,
                        "id": 13496,
                        "nodeType": "Return",
                        "src": "5742:49:57"
                      }
                    ]
                  },
                  "id": 13498,
                  "nodeType": "IfStatement",
                  "src": "5599:203:57",
                  "trueBody": {
                    "id": 13488,
                    "nodeType": "Block",
                    "src": "5680:42:57",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 13484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5702:5:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "30",
                              "id": 13485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5709:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 13486,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5701:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                            "typeString": "tuple(bool,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 13452,
                        "id": 13487,
                        "nodeType": "Return",
                        "src": "5694:17:57"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13439,
              "nodeType": "StructuredDocumentation",
              "src": "4962:238:57",
              "text": " @notice Check whether it is possible to claim and how much based on previous distribution\n @param user address of the user\n @param amount amount to claim\n @param merkleProof array with the merkle proof"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canClaim",
            "nameLocation": "5214:9:57",
            "parameters": {
              "id": 13447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13441,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5241:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13500,
                  "src": "5233:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5233:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13443,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5263:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13500,
                  "src": "5255:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5255:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13446,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "5298:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13500,
                  "src": "5279:30:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13444,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5279:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13445,
                    "nodeType": "ArrayTypeName",
                    "src": "5279:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5223:92:57"
            },
            "returnParameters": {
              "id": 13452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13500,
                  "src": "5339:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13448,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5339:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13500,
                  "src": "5345:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5345:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5338:15:57"
            },
            "scope": 13501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13161,
              "name": "Pausable",
              "nameLocations": [
                "614:8:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58536,
              "src": "614:8:57"
            },
            "id": 13162,
            "nodeType": "InheritanceSpecifier",
            "src": "614:8:57"
          },
          {
            "baseName": {
              "id": 13163,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "624:15:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58590,
              "src": "624:15:57"
            },
            "id": 13164,
            "nodeType": "InheritanceSpecifier",
            "src": "624:15:57"
          },
          {
            "baseName": {
              "id": 13165,
              "name": "Ownable",
              "nameLocations": [
                "641:7:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58409,
              "src": "641:7:57"
            },
            "id": 13166,
            "nodeType": "InheritanceSpecifier",
            "src": "641:7:57"
          }
        ],
        "canonicalName": "TradingRewardsDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13160,
          "nodeType": "StructuredDocumentation",
          "src": "463:112:57",
          "text": " @title TradingRewardsDistributor\n @notice It distributes LOOKS tokens with rolling Merkle airdrops."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13501,
          58409,
          58590,
          58536,
          62970
        ],
        "name": "TradingRewardsDistributor",
        "nameLocation": "585:25:57",
        "scope": 13502,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 57
}