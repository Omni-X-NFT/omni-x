{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoOngoingTransferInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAffiliateController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncementNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferAlreadyInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferNotInProgress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongPotentialOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CancelOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CurrencyStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InitiateOwnershipRenouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "InitiateOwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliateController",
          "type": "address"
        }
      ],
      "name": "NewAffiliateController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "NewAffiliateProgramStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewAffiliateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "affiliateController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateOwnershipRenouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "initiateOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAffiliateProgramActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCurrencyAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipStatus",
      "outputs": [
        {
          "internalType": "enum IOwnableTwoSteps.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAffiliateController",
          "type": "address"
        }
      ],
      "name": "updateAffiliateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "updateAffiliateProgramStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bp",
          "type": "uint256"
        }
      ],
      "name": "updateAffiliateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "updateCurrencyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461009e57601f61087938819003918201601f19168301916001600160401b038311848410176100a35780849260209460405283398101031261009e57516001600160a01b0381169081900361009e57600080546001600160a01b031916821790556040519081527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a16040516107bf90816100ba8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80631d3c4268146106c357806323452b9c1461062e5780632bb5a9e6146105ed5780633e567539146105645780634cbac9dc1461053c57806354878876146104cf5780635a195d19146104925780635b6ac0111461040757806367d9dd79146103e15780637200b829146103195780637762df25146102f15780637a7d8851146102ba5780638da5cb5b14610293578063a02bab5714610225578063ae1cce5a1461018a5763c0b6f561146100d157600080fd5b34610186576020366003190112610186576100ea610748565b6100f2610763565b6001549060ff8260a01c1660038110156101735761016357600160a01b6001600160a01b039091166001600160a81b031992909216821717600155815133815260208101919091529192507fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef91a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b5080fd5b50346101865780600319360112610186576101a3610748565b600254602435916001600160a01b039182163303610215576127108311610205577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526003602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b50346101865760203660031901126101865760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc91610263610748565b61026b610763565b600280546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b5034610186578160031936011261018657905490516001600160a01b039091168152602090f35b50346101865760203660031901126101865760209181906001600160a01b036102e1610748565b1681526003845220549051908152f35b503461018657816003193601126101865760015490516001600160a01b039091168152602090f35b5082346103dd57826003193601126103dd576001549060ff8260a01c1660038110156103ca576001036103bc576001600160a01b03821633036103ae57507f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc91602091336bffffffffffffffffffffffff60a01b8654161785556affffffffffffffffffffff60a81b1660015551338152a180f35b82516357ee7dc960e11b8152fd5b8251632f27941360e11b8152fd5b634e487b7160e01b855260218252602485fd5b8280fd5b503461018657816003193601126101865760209060ff60015460a81c1690519015158152f35b5082346103dd57826003193601126103dd57610421610763565b6001549160ff8360a01c16600381101561047f5761047257505060ff60a01b1916600160a11b176001557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b8152fd5b634e487b7160e01b855260218352602485fd5b5082346103dd5760203660031901126103dd5760209260ff918391906001600160a01b036104be610748565b168252855220541690519015158152f35b5082346103dd5760203660031901126103dd5735908115158092036103dd577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc349160209161051b610763565b6001805460ff60a81b191660a884901b60ff60a81b1617905551908152a180f35b503461018657816003193601126101865760025490516001600160a01b039091168152602090f35b5082346103dd57826003193601126103dd5761057e610763565b6001549060ff8260a01c1660038110156103ca576002036105df575082546001600160a01b031916835560ff60a01b1916600155518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b825163022e289160e11b8152fd5b503461018657816003193601126101865760ff60015460a01c16905191600382101561061b57602083838152f35b634e487b7160e01b815260218452602490fd5b508290346103dd57826003193601126103dd57610649610763565b6001549160ff8360a01c169160038310156103ca5782156106b65750506001146106a3575b506001805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b0319166001558161066e565b5163ccf69db760e01b8152fd5b508290346103dd57806003193601126103dd576106de610748565b91602435801515809103610744577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54393610716610763565b6001600160a01b03168086526020928352838620805460ff191660ff8416179055835190815291820152a180f35b8480fd5b600435906001600160a01b038216820361075e57565b600080fd5b6000546001600160a01b0316330361077757565b6040516330cd747160e01b8152600490fdfea26469706673582212201a3c49f779949541514b6584da9bb3be65408551b426e10bbbfac9a9bab7a0af64736f6c63430008110033",
    "sourceMap": "369:822:10:-:0;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:822:10;;;;;;;;-1:-1:-1;369:822:10;;-1:-1:-1;;;;;;369:822:10;;;;;;;;;;1145:16:224;;369:822:10;;1145:16:224;369:822:10;;;;;;;;;;-1:-1:-1;369:822:10;;;;;;-1:-1:-1;369:822:10;;;;;-1:-1:-1;369:822:10",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6040608081526004908136101561001557600080fd5b600090813560e01c80631d3c4268146106c357806323452b9c1461062e5780632bb5a9e6146105ed5780633e567539146105645780634cbac9dc1461053c57806354878876146104cf5780635a195d19146104925780635b6ac0111461040757806367d9dd79146103e15780637200b829146103195780637762df25146102f15780637a7d8851146102ba5780638da5cb5b14610293578063a02bab5714610225578063ae1cce5a1461018a5763c0b6f561146100d157600080fd5b34610186576020366003190112610186576100ea610748565b6100f2610763565b6001549060ff8260a01c1660038110156101735761016357600160a01b6001600160a01b039091166001600160a81b031992909216821717600155815133815260208101919091529192507fb86c75c9bffca616b2d314cc914f7c3f1d174255b16b941c3f3ededee276d5ef91a180f35b8251633a76bcd760e11b81528590fd5b634e487b7160e01b855260218652602485fd5b5080fd5b50346101865780600319360112610186576101a3610748565b600254602435916001600160a01b039182163303610215576127108311610205577fa16126d9473196242b0784325b30642b89f34442dd178a852f5b88ee483a30d894955016908185526003602052808386205582519182526020820152a180f35b8351632242dac960e01b81528690fd5b8351639f63004360e01b81528690fd5b50346101865760203660031901126101865760207fa92d85531a006d07fd0df4c61259b6dc18e4f492857e2454e5a20ee5e55cddcc91610263610748565b61026b610763565b600280546001600160a01b0319166001600160a01b039290921691821790559051908152a180f35b5034610186578160031936011261018657905490516001600160a01b039091168152602090f35b50346101865760203660031901126101865760209181906001600160a01b036102e1610748565b1681526003845220549051908152f35b503461018657816003193601126101865760015490516001600160a01b039091168152602090f35b5082346103dd57826003193601126103dd576001549060ff8260a01c1660038110156103ca576001036103bc576001600160a01b03821633036103ae57507f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc91602091336bffffffffffffffffffffffff60a01b8654161785556affffffffffffffffffffff60a81b1660015551338152a180f35b82516357ee7dc960e11b8152fd5b8251632f27941360e11b8152fd5b634e487b7160e01b855260218252602485fd5b8280fd5b503461018657816003193601126101865760209060ff60015460a81c1690519015158152f35b5082346103dd57826003193601126103dd57610421610763565b6001549160ff8360a01c16600381101561047f5761047257505060ff60a01b1916600160a11b176001557f3ff05a45e46337fa1cbf20996d2eeb927280bce099f37252bcca1040609604ec8180a180f35b51633a76bcd760e11b8152fd5b634e487b7160e01b855260218352602485fd5b5082346103dd5760203660031901126103dd5760209260ff918391906001600160a01b036104be610748565b168252855220541690519015158152f35b5082346103dd5760203660031901126103dd5735908115158092036103dd577fdca612ba3556b7c2603089071be1feb2404df55dcabceee9d5fd852fdb39bc349160209161051b610763565b6001805460ff60a81b191660a884901b60ff60a81b1617905551908152a180f35b503461018657816003193601126101865760025490516001600160a01b039091168152602090f35b5082346103dd57826003193601126103dd5761057e610763565b6001549060ff8260a01c1660038110156103ca576002036105df575082546001600160a01b031916835560ff60a01b1916600155518181527f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90602090a180f35b825163022e289160e11b8152fd5b503461018657816003193601126101865760ff60015460a01c16905191600382101561061b57602083838152f35b634e487b7160e01b815260218452602490fd5b508290346103dd57826003193601126103dd57610649610763565b6001549160ff8360a01c169160038310156103ca5782156106b65750506001146106a3575b506001805460ff60a01b191690557f8eca980489e87f7dba4f26917aa4bfc906eb3f2b4f7b4b9fd0ff2b8bb3e21ae38180a180f35b6001600160a01b0319166001558161066e565b5163ccf69db760e01b8152fd5b508290346103dd57806003193601126103dd576106de610748565b91602435801515809103610744577fba28eda47a2e15b1dd3269e6d82f66730d20a5661aa40e9faf9f311c7872a54393610716610763565b6001600160a01b03168086526020928352838620805460ff191660ff8416179055835190815291820152a180f35b8480fd5b600435906001600160a01b038216820361075e57565b600080fd5b6000546001600160a01b0316330361077757565b6040516330cd747160e01b8152600490fdfea26469706673582212201a3c49f779949541514b6584da9bb3be65408551b426e10bbbfac9a9bab7a0af64736f6c63430008110033",
    "sourceMap": "369:822:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;;;:::i;:::-;926:61:224;;:::i;:::-;3027:15;369:822:10;;;;;;;;;;;;;3023:108:224;;-1:-1:-1;;;;;;;;369:822:10;;;-1:-1:-1;;;;;;369:822:10;;;;;;;;;;;3441:10:224;369:822:10;;;;;;;;;;;-1:-1:-1;3415:56:224;;;369:822:10;;3023:108:224;369:822:10;;-1:-1:-1;;;3093:27:224;;369:822:10;;3093:27:224;369:822:10;-1:-1:-1;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1588:19:6;369:822:10;;;;-1:-1:-1;;;;;369:822:10;;;1574:10:6;:33;1570:95;;162:6:4;1679:30:6;;1675:87;;1817:31;369:822:10;;;;;;;;;;;;;;;162:6:4;369:822:10;;;;;;162:6:4;;369:822:10;1817:31:6;369:822:10;;1675:87:6;369:822:10;;-1:-1:-1;;;1732:19:6;;369:822:10;;1732:19:6;1570:95;369:822:10;;-1:-1:-1;;;1630:24:6;;369:822:10;;1630:24:6;369:822:10;;;;;;;-1:-1:-1;;369:822:10;;;;;2228:46:6;369:822:10;;;:::i;:::-;926:61:224;;:::i;:::-;2169:44:6;369:822:10;;-1:-1:-1;;;;;;369:822:10;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;;2228:46:6;369:822:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;;;;;-1:-1:-1;;;;;369:822:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;2427:15:224;369:822:10;;;;;;;;;;;;;2427:15:224;:44;2423:105;;-1:-1:-1;;;;;369:822:10;;2542:10:224;:28;2538:87;;2542:10;2732:20;2542:10;369:822:10;2542:10:224;;369:822:10;;;;;;;;;;;;;2427:15:224;369:822:10;;2542:10:224;369:822:10;;2732:20:224;369:822:10;;2538:87:224;369:822:10;;-1:-1:-1;;;2593:21:224;;;2423:105;369:822:10;;-1:-1:-1;;;2494:23:224;;;369:822:10;-1:-1:-1;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:36:6;369:822:10;;;;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;3651:15;369:822:10;;;;;;;;;;;;;3647:108:224;;-1:-1:-1;;;;;;369:822:10;-1:-1:-1;;;369:822:10;;;3828:31:224;;;;369:822:10;;3647:108:224;369:822:10;-1:-1:-1;;;3717:27:224;;;369:822:10;-1:-1:-1;;;369:822:10;;;;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;;;;;;;;-1:-1:-1;;;;;369:822:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;;;;;;;;;;;2620:35:6;926:61:224;369:822:10;926:61:224;;;:::i;:::-;2570:35:6;369:822:10;;-1:-1:-1;;;;369:822:10;;;;;-1:-1:-1;;;369:822:10;;;;;;;;2620:35:6;369:822:10;;;;;;;;;;;;;;;787:34:6;369:822:10;;;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;1991:15;369:822:10;;;;;;;;;;;;;2010:29:224;1991:48;1987:113;;-1:-1:-1;369:822:10;;-1:-1:-1;;;;;;369:822:10;;;-1:-1:-1;;;;369:822:10;-1:-1:-1;369:822:10;;;;;2170:20:224;;369:822:10;;2170:20:224;369:822:10;;1987:113:224;369:822:10;;-1:-1:-1;;;2062:27:224;;;369:822:10;;;;;;;;;;;;;;790:29:224;369:822:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:822:10;;;;;;;;;;;;;;;;;;;;;;;926:61:224;;:::i;:::-;1497:15;369:822:10;;;;;;;;;;;;;;1526:44:224;;1522:111;;1647:45;;1497:15;1647:45;1643:97;;369:822:10;-1:-1:-1;1497:15:224;369:822:10;;-1:-1:-1;;;;369:822:10;;;1788:25:224;;;;369:822:10;;1643:97:224;-1:-1:-1;;;;;;369:822:10;1497:15:224;369:822:10;1643:97:224;;;1522:111;369:822:10;-1:-1:-1;;;1593:29:224;;;369:822:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1140:42;926:61:224;;;:::i;:::-;-1:-1:-1;;;;;369:822:10;;;;;;;;;;;;;-1:-1:-1;;369:822:10;;;;;;;;;;;;;;;;1140:42;369:822;;;;;;;;;;-1:-1:-1;;;;;369:822:10;;;;;;:::o;:::-;;;;3872:94:224;3935:5;369:822:10;-1:-1:-1;;;;;369:822:10;3921:10:224;:19;3917:42;;3872:94::o;3917:42::-;369:822:10;;-1:-1:-1;;;3949:10:224;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "affiliateController()": "4cbac9dc",
    "affiliateRates(address)": "7a7d8851",
    "cancelOwnershipTransfer()": "23452b9c",
    "confirmOwnershipRenouncement()": "3e567539",
    "confirmOwnershipTransfer()": "7200b829",
    "initiateOwnershipRenouncement()": "5b6ac011",
    "initiateOwnershipTransfer(address)": "c0b6f561",
    "isAffiliateProgramActive()": "67d9dd79",
    "isCurrencyAllowed(address)": "5a195d19",
    "owner()": "8da5cb5b",
    "ownershipStatus()": "2bb5a9e6",
    "potentialOwner()": "7762df25",
    "updateAffiliateController(address)": "a02bab57",
    "updateAffiliateProgramStatus(bool)": "54878876",
    "updateAffiliateRate(address,uint256)": "ae1cce5a",
    "updateCurrencyStatus(address,bool)": "1d3c4268"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoOngoingTransferInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAffiliateController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncementNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPotentialOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CurrencyStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"InitiateOwnershipRenouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"InitiateOwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliateController\",\"type\":\"address\"}],\"name\":\"NewAffiliateController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NewAffiliateProgramStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewAffiliateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"affiliateController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateOwnershipRenouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAffiliateProgramActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCurrencyAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipStatus\",\"outputs\":[{\"internalType\":\"enum IOwnableTwoSteps.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAffiliateController\",\"type\":\"address\"}],\"name\":\"updateAffiliateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAffiliateProgramStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"name\":\"updateAffiliateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"updateCurrencyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"kind\":\"dev\",\"methods\":{\"cancelOwnershipTransfer()\":{\"details\":\"This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership.\"},\"confirmOwnershipTransfer()\":{\"details\":\"This function can only be called by the current potential owner.\"},\"constructor\":{\"params\":{\"_owner\":\"Owner address\"}},\"initiateOwnershipTransfer(address)\":{\"params\":{\"newPotentialOwner\":\"New potential owner address\"}},\"updateAffiliateController(address)\":{\"details\":\"Only callable by owner.\",\"params\":{\"newAffiliateController\":\"New affiliate controller address\"}},\"updateAffiliateProgramStatus(bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"isActive\":\"Whether the affiliate program is active\"}},\"updateAffiliateRate(address,uint256)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"bp\":\"Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction\"}},\"updateCurrencyStatus(address,bool)\":{\"details\":\"Only callable by owner.\",\"params\":{\"currency\":\"Currency address (address(0) for ETH)\",\"isAllowed\":\"Whether the currency should be allowed for trading\"}}},\"title\":\"CurrencyManager\",\"version\":1},\"userdoc\":{\"errors\":{\"NoOngoingTransferInProgress()\":[{\"notice\":\"This is returned when there is no transfer of ownership in progress.\"}],\"NotAffiliateController()\":[{\"notice\":\"It is returned if the function is called by another address than the affiliate controller.\"}],\"NotOwner()\":[{\"notice\":\"This is returned when the caller is not the owner.\"}],\"PercentageTooHigh()\":[{\"notice\":\"It is returned if the affiliate controller is trying to set an affiliate rate higher than 10,000.\"}],\"RenouncementNotInProgress()\":[{\"notice\":\"This is returned when there is no renouncement in progress but         the owner tries to validate the ownership renouncement.\"}],\"TransferAlreadyInProgress()\":[{\"notice\":\"This is returned when the transfer is already in progress but the owner tries         initiate a new ownership transfer.\"}],\"TransferNotInProgress()\":[{\"notice\":\"This is returned when there is no ownership transfer in progress but the         ownership change tries to be approved.\"}],\"WrongPotentialOwner()\":[{\"notice\":\"This is returned when the ownership transfer is attempted to be validated by the         a caller that is not the potential owner.\"}]},\"events\":{\"CancelOwnershipTransfer()\":{\"notice\":\"This is emitted if the ownership transfer is cancelled.\"},\"CurrencyStatusUpdated(address,bool)\":{\"notice\":\"It is emitted if the currency status in the allowlist is updated.\"},\"InitiateOwnershipRenouncement()\":{\"notice\":\"This is emitted if the ownership renouncement is initiated.\"},\"InitiateOwnershipTransfer(address,address)\":{\"notice\":\"This is emitted if the ownership transfer is initiated.\"},\"NewAffiliateController(address)\":{\"notice\":\"It is emitted when there is an update of affliate controller.\"},\"NewAffiliateProgramStatus(bool)\":{\"notice\":\"It is emitted if the affiliate program is activated or deactivated.\"},\"NewAffiliateRate(address,uint256)\":{\"notice\":\"It is emitted if there is a new affiliate and its associated rate (in basis point).\"},\"NewOwner(address)\":{\"notice\":\"This is emitted when there is a new owner.\"}},\"kind\":\"user\",\"methods\":{\"affiliateController()\":{\"notice\":\"Address of the affiliate controller.\"},\"affiliateRates(address)\":{\"notice\":\"It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate.\"},\"cancelOwnershipTransfer()\":{\"notice\":\"This function is used to cancel the ownership transfer.\"},\"confirmOwnershipRenouncement()\":{\"notice\":\"This function is used to confirm the ownership renouncement.\"},\"confirmOwnershipTransfer()\":{\"notice\":\"This function is used to confirm the ownership transfer.\"},\"constructor\":{\"notice\":\"Constructor\"},\"initiateOwnershipRenouncement()\":{\"notice\":\"This function is used to initiate the ownership renouncement.\"},\"initiateOwnershipTransfer(address)\":{\"notice\":\"This function is used to initiate the transfer of ownership to a new owner.\"},\"isAffiliateProgramActive()\":{\"notice\":\"Whether the affiliate program is active.\"},\"isCurrencyAllowed(address)\":{\"notice\":\"It checks whether the currency is allowed for transacting.\"},\"owner()\":{\"notice\":\"Address of the current owner.\"},\"ownershipStatus()\":{\"notice\":\"Ownership status.\"},\"potentialOwner()\":{\"notice\":\"Address of the potential owner.\"},\"updateAffiliateController(address)\":{\"notice\":\"This function allows the owner to update the affiliate controller address.\"},\"updateAffiliateProgramStatus(bool)\":{\"notice\":\"This function allows the owner to update the affiliate program status.\"},\"updateAffiliateRate(address,uint256)\":{\"notice\":\"This function allows the affiliate controller to update the affiliate rate (in basis point).\"},\"updateCurrencyStatus(address,bool)\":{\"notice\":\"This function allows the owner to update the status of a currency.\"}},\"notice\":\"This contract manages the list of valid fungible currencies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/CurrencyManager.sol\":\"CurrencyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@looksrare/=node_modules/@looksrare/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\",\":reservoirprotocol/=lib/reservoirprotocol/\",\":solmate/=lib/solmate/src/\",\":xdeployer/=node_modules/xdeployer/\"],\"viaIR\":true},\"sources\":{\"contracts/constants/NumericConstants.sol\":{\"keccak256\":\"0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328\",\"dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR\"]},\"contracts/core/AffiliateManager.sol\":{\"keccak256\":\"0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808\",\"dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L\"]},\"contracts/core/CurrencyManager.sol\":{\"keccak256\":\"0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5\",\"dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y\"]},\"contracts/interfaces/IAffiliateManager.sol\":{\"keccak256\":\"0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f\",\"dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW\"]},\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7\",\"dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T\"]},\"node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol\":{\"keccak256\":\"0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb\",\"dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P\"]},\"node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol\":{\"keccak256\":\"0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623\",\"dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOngoingTransferInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAffiliateController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncementNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferAlreadyInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferNotInProgress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongPotentialOwner"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CancelOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurrencyStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "InitiateOwnershipRenouncement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "potentialOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitiateOwnershipTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliateController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateController",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateProgramStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAffiliateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "affiliateRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipRenouncement"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipRenouncement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPotentialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiateOwnershipTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isAffiliateProgramActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrencyAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipStatus",
          "outputs": [
            {
              "internalType": "enum IOwnableTwoSteps.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "potentialOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAffiliateController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateController"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateProgramStatus"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "affiliate",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAffiliateRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCurrencyStatus"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancelOwnershipTransfer()": {
            "details": "This function can be used for both cancelling a transfer to a new owner and      cancelling the renouncement of the ownership."
          },
          "confirmOwnershipTransfer()": {
            "details": "This function can only be called by the current potential owner."
          },
          "constructor": {
            "params": {
              "_owner": "Owner address"
            }
          },
          "initiateOwnershipTransfer(address)": {
            "params": {
              "newPotentialOwner": "New potential owner address"
            }
          },
          "updateAffiliateController(address)": {
            "details": "Only callable by owner.",
            "params": {
              "newAffiliateController": "New affiliate controller address"
            }
          },
          "updateAffiliateProgramStatus(bool)": {
            "details": "Only callable by owner.",
            "params": {
              "isActive": "Whether the affiliate program is active"
            }
          },
          "updateAffiliateRate(address,uint256)": {
            "params": {
              "affiliate": "Affiliate address",
              "bp": "Rate (in basis point) to collect (e.g. 100 = 1%) per referred transaction"
            }
          },
          "updateCurrencyStatus(address,bool)": {
            "details": "Only callable by owner.",
            "params": {
              "currency": "Currency address (address(0) for ETH)",
              "isAllowed": "Whether the currency should be allowed for trading"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "affiliateController()": {
            "notice": "Address of the affiliate controller."
          },
          "affiliateRates(address)": {
            "notice": "It tracks the affiliate rate (in basis point) for a given affiliate address.         The basis point represents how much of the protocol fee will be shared to the affiliate."
          },
          "cancelOwnershipTransfer()": {
            "notice": "This function is used to cancel the ownership transfer."
          },
          "confirmOwnershipRenouncement()": {
            "notice": "This function is used to confirm the ownership renouncement."
          },
          "confirmOwnershipTransfer()": {
            "notice": "This function is used to confirm the ownership transfer."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "initiateOwnershipRenouncement()": {
            "notice": "This function is used to initiate the ownership renouncement."
          },
          "initiateOwnershipTransfer(address)": {
            "notice": "This function is used to initiate the transfer of ownership to a new owner."
          },
          "isAffiliateProgramActive()": {
            "notice": "Whether the affiliate program is active."
          },
          "isCurrencyAllowed(address)": {
            "notice": "It checks whether the currency is allowed for transacting."
          },
          "owner()": {
            "notice": "Address of the current owner."
          },
          "ownershipStatus()": {
            "notice": "Ownership status."
          },
          "potentialOwner()": {
            "notice": "Address of the potential owner."
          },
          "updateAffiliateController(address)": {
            "notice": "This function allows the owner to update the affiliate controller address."
          },
          "updateAffiliateProgramStatus(bool)": {
            "notice": "This function allows the owner to update the affiliate program status."
          },
          "updateAffiliateRate(address,uint256)": {
            "notice": "This function allows the affiliate controller to update the affiliate rate (in basis point)."
          },
          "updateCurrencyStatus(address,bool)": {
            "notice": "This function allows the owner to update the status of a currency."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gelatonetwork/=node_modules/@gelatonetwork/",
        ":@layerzerolabs/=node_modules/@layerzerolabs/",
        ":@looksrare/=node_modules/@looksrare/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":operator-filter-registry/=node_modules/operator-filter-registry/",
        ":reservoirprotocol/=lib/reservoirprotocol/",
        ":solmate/=lib/solmate/src/",
        ":xdeployer/=node_modules/xdeployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/CurrencyManager.sol": "CurrencyManager"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/constants/NumericConstants.sol": {
        "keccak256": "0x30fb11ade509ec46e86ebbcc00b558f788fe3a22f4850a35d3351eba0de96334",
        "urls": [
          "bzz-raw://6b64755ba6164dabce9e8547cb17e6a517e470f5655f8f04886e447e46b06328",
          "dweb:/ipfs/QmYk7B5qWkNXtM6rDcnc1ayhv5NnNH2okcKknQVYCrmfDR"
        ],
        "license": "MIT"
      },
      "contracts/core/AffiliateManager.sol": {
        "keccak256": "0x1699f0d620e19bb9a35c185a5236c1625a8e15bcd23b08320c58a310b214bc90",
        "urls": [
          "bzz-raw://89b50a6e708e743aac90ff3932a5e0ffe32ca5c9d5455cfdc99f0ea5e1183808",
          "dweb:/ipfs/QmfQqLohHBVJskqsokZL8dWudiYgfTmM8VhSXFMasvcn2L"
        ],
        "license": "MIT"
      },
      "contracts/core/CurrencyManager.sol": {
        "keccak256": "0x8ba8184cfdb7620936b4e800759120c6f7db125977a82b1c53eb7bc1b765ba56",
        "urls": [
          "bzz-raw://8f94f059adb1c8012bfb2d16b5c7cd6c57f899899e5fd638a7fe37fd1a15d2b5",
          "dweb:/ipfs/QmVSWg4TxKZx4oogLrfg1EBc6GmxXmTbXa9UqBVyq8He8Y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAffiliateManager.sol": {
        "keccak256": "0x7b6e0992b6e44a5cd6d1bc2da9c7fc897573e4004ff87d185d9fa31a70848755",
        "urls": [
          "bzz-raw://22426bef9d21dce6ef30317fed8599a87d760cc9fb38c09a20b85b3182cff61f",
          "dweb:/ipfs/QmP9Xa3nwg7rhjKtsioCoGaegGzyF2tB5Rbnx2rpgUjBkW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICurrencyManager.sol": {
        "keccak256": "0x561b7e2bcdbd6ef67b90c07e01efd90ab4605d0deddd18b0e6eb30479ec26dd1",
        "urls": [
          "bzz-raw://3b3c8819b11814cda7d7bf6382c5ac2322569beeef9912049259f9fa674783f7",
          "dweb:/ipfs/QmPyo1JZbmRaYD9tshjCPS1VZxREAmLvQkZYjniJjAUH3T"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/OwnableTwoSteps.sol": {
        "keccak256": "0x0e47e11eb59908f12443c7e23d2f437992da7349d6cef7757f04014eaf82b74e",
        "urls": [
          "bzz-raw://055c0d474b793aec08aa882c93dfe01f5537b479d2730433ce262edfc4a04efb",
          "dweb:/ipfs/QmP2bwDjHAWjJKTQtKr3imKPiuf7a1M664XzEe8hjKiS6P"
        ],
        "license": "MIT"
      },
      "node_modules/@looksrare/contracts-libs/contracts/interfaces/IOwnableTwoSteps.sol": {
        "keccak256": "0x9ec76240061a336b8cd10a3ab1d21d8fcc6807e13b95d01c84b6282c88080379",
        "urls": [
          "bzz-raw://e737caefdb8fe8fbf5b657e92f7a0b6a7d34cb0a1e1567172ff2e1d16174b623",
          "dweb:/ipfs/QmRFcz4vu86evsfUzpwyvvAKtWJe2mi3CfCD551eVRvupT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/CurrencyManager.sol",
    "id": 1926,
    "exportedSymbols": {
      "AffiliateManager": [
        1425
      ],
      "CurrencyManager": [
        1925
      ],
      "ICurrencyManager": [
        11193
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1159:10",
    "nodes": [
      {
        "id": 1878,
        "nodeType": "PragmaDirective",
        "src": "32:24:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 1880,
        "nodeType": "ImportDirective",
        "src": "72:68:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICurrencyManager.sol",
        "file": "../interfaces/ICurrencyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1926,
        "sourceUnit": 11194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1879,
              "name": "ICurrencyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11193,
              "src": "80:16:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1882,
        "nodeType": "ImportDirective",
        "src": "158:56:10",
        "nodes": [],
        "absolutePath": "contracts/core/AffiliateManager.sol",
        "file": "./AffiliateManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1926,
        "sourceUnit": 1426,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1881,
              "name": "AffiliateManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1425,
              "src": "166:16:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1925,
        "nodeType": "ContractDefinition",
        "src": "369:822:10",
        "nodes": [
          {
            "id": 1892,
            "nodeType": "VariableDeclaration",
            "src": "528:49:10",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1888,
              "nodeType": "StructuredDocumentation",
              "src": "438:85:10",
              "text": " @notice It checks whether the currency is allowed for transacting."
            },
            "functionSelector": "5a195d19",
            "mutability": "mutable",
            "name": "isCurrencyAllowed",
            "nameLocation": "560:17:10",
            "scope": 1925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1891,
              "keyType": {
                "id": 1889,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "536:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "528:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1890,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "547:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1902,
            "nodeType": "FunctionDefinition",
            "src": "662:55:10",
            "nodes": [],
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "715:2:10",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 1893,
              "nodeType": "StructuredDocumentation",
              "src": "584:73:10",
              "text": " @notice Constructor\n @param _owner Owner address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1898,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1895,
                    "src": "707:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1899,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1897,
                  "name": "AffiliateManager",
                  "nameLocations": [
                    "690:16:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1425,
                  "src": "690:16:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "690:24:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "682:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "674:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:16:10"
            },
            "returnParameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:10"
            },
            "scope": 1925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1924,
            "nodeType": "FunctionDefinition",
            "src": "993:196:10",
            "nodes": [],
            "body": {
              "id": 1923,
              "nodeType": "Block",
              "src": "1076:113:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1912,
                        "name": "isCurrencyAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "1086:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1914,
                      "indexExpression": {
                        "id": 1913,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1104:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1086:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1915,
                      "name": "isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1907,
                      "src": "1116:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1086:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1917,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:39:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1919,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1162:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1920,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1907,
                        "src": "1172:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1918,
                      "name": "CurrencyStatusUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11192,
                      "src": "1140:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1922,
                  "nodeType": "EmitStatement",
                  "src": "1135:47:10"
                }
              ]
            },
            "documentation": {
              "id": 1903,
              "nodeType": "StructuredDocumentation",
              "src": "723:265:10",
              "text": " @notice This function allows the owner to update the status of a currency.\n @param currency Currency address (address(0) for ETH)\n @param isAllowed Whether the currency should be allowed for trading\n @dev Only callable by owner."
            },
            "functionSelector": "1d3c4268",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1909,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1066:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75591,
                  "src": "1066:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1066:9:10"
              }
            ],
            "name": "updateCurrencyStatus",
            "nameLocation": "1002:20:10",
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "1031:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "1023:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "1046:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "1041:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:34:10"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:10"
            },
            "scope": 1925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1884,
              "name": "ICurrencyManager",
              "nameLocations": [
                "397:16:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11193,
              "src": "397:16:10"
            },
            "id": 1885,
            "nodeType": "InheritanceSpecifier",
            "src": "397:16:10"
          },
          {
            "baseName": {
              "id": 1886,
              "name": "AffiliateManager",
              "nameLocations": [
                "415:16:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1425,
              "src": "415:16:10"
            },
            "id": 1887,
            "nodeType": "InheritanceSpecifier",
            "src": "415:16:10"
          }
        ],
        "canonicalName": "CurrencyManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1883,
          "nodeType": "StructuredDocumentation",
          "src": "216:152:10",
          "text": " @title CurrencyManager\n @notice This contract manages the list of valid fungible currencies.\n @author LooksRare protocol team (👀,💎)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1925,
          1425,
          75780,
          76250,
          11149,
          11193
        ],
        "name": "CurrencyManager",
        "nameLocation": "378:15:10",
        "scope": 1926,
        "usedErrors": [
          11145,
          11148,
          76216,
          76219,
          76222,
          76225,
          76228,
          76231
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 10
}